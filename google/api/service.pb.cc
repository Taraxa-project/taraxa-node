// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/service.proto

#include "google/api/service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fauth_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fauth_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Authentication;
}  // namespace protobuf_google_2fapi_2fauth_2eproto
namespace protobuf_google_2fapi_2fbackend_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fbackend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Backend;
}  // namespace protobuf_google_2fapi_2fbackend_2eproto
namespace protobuf_google_2fapi_2fbilling_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fbilling_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Billing;
}  // namespace protobuf_google_2fapi_2fbilling_2eproto
namespace protobuf_google_2fapi_2fcontext_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fcontext_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Context;
}  // namespace protobuf_google_2fapi_2fcontext_2eproto
namespace protobuf_google_2fapi_2fcontrol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fcontrol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Control;
}  // namespace protobuf_google_2fapi_2fcontrol_2eproto
namespace protobuf_google_2fapi_2fdocumentation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdocumentation_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Documentation;
}  // namespace protobuf_google_2fapi_2fdocumentation_2eproto
namespace protobuf_google_2fapi_2fendpoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fendpoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Endpoint;
}  // namespace protobuf_google_2fapi_2fendpoint_2eproto
namespace protobuf_google_2fapi_2fexperimental_2fexperimental_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexperimental_2fexperimental_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Experimental;
}  // namespace protobuf_google_2fapi_2fexperimental_2fexperimental_2eproto
namespace protobuf_google_2fapi_2fhttp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fhttp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Http;
}  // namespace protobuf_google_2fapi_2fhttp_2eproto
namespace protobuf_google_2fapi_2flog_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2flog_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_LogDescriptor;
}  // namespace protobuf_google_2fapi_2flog_2eproto
namespace protobuf_google_2fapi_2flogging_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2flogging_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Logging;
}  // namespace protobuf_google_2fapi_2flogging_2eproto
namespace protobuf_google_2fapi_2fmetric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmetric_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MetricDescriptor;
}  // namespace protobuf_google_2fapi_2fmetric_2eproto
namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmonitored_5fresource_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor;
}  // namespace protobuf_google_2fapi_2fmonitored_5fresource_2eproto
namespace protobuf_google_2fapi_2fmonitoring_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmonitoring_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Monitoring;
}  // namespace protobuf_google_2fapi_2fmonitoring_2eproto
namespace protobuf_google_2fapi_2fquota_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fquota_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Quota;
}  // namespace protobuf_google_2fapi_2fquota_2eproto
namespace protobuf_google_2fapi_2fsource_5finfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fsource_5finfo_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SourceInfo;
}  // namespace protobuf_google_2fapi_2fsource_5finfo_2eproto
namespace protobuf_google_2fapi_2fsystem_5fparameter_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fsystem_5fparameter_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SystemParameters;
}  // namespace protobuf_google_2fapi_2fsystem_5fparameter_2eproto
namespace protobuf_google_2fapi_2fusage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fusage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Usage;
}  // namespace protobuf_google_2fapi_2fusage_2eproto
namespace protobuf_google_2fprotobuf_2fapi_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fapi_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Api;
}  // namespace protobuf_google_2fprotobuf_2fapi_2eproto
namespace protobuf_google_2fprotobuf_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftype_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Enum;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftype_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Type;
}  // namespace protobuf_google_2fprotobuf_2ftype_2eproto
namespace protobuf_google_2fprotobuf_2fwrappers_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fwrappers_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UInt32Value;
}  // namespace protobuf_google_2fprotobuf_2fwrappers_2eproto
namespace google {
namespace api {
class ServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Service>
      _instance;
} _Service_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fservice_2eproto {
static void InitDefaultsService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Service_default_instance_;
    new (ptr) ::google::api::Service();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Service::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<22> scc_info_Service =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 22, InitDefaultsService}, {
      &protobuf_google_2fprotobuf_2fwrappers_2eproto::scc_info_UInt32Value.base,
      &protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Api.base,
      &protobuf_google_2fprotobuf_2ftype_2eproto::scc_info_Type.base,
      &protobuf_google_2fprotobuf_2ftype_2eproto::scc_info_Enum.base,
      &protobuf_google_2fapi_2fdocumentation_2eproto::scc_info_Documentation.base,
      &protobuf_google_2fapi_2fbackend_2eproto::scc_info_Backend.base,
      &protobuf_google_2fapi_2fhttp_2eproto::scc_info_Http.base,
      &protobuf_google_2fapi_2fquota_2eproto::scc_info_Quota.base,
      &protobuf_google_2fapi_2fauth_2eproto::scc_info_Authentication.base,
      &protobuf_google_2fapi_2fcontext_2eproto::scc_info_Context.base,
      &protobuf_google_2fapi_2fusage_2eproto::scc_info_Usage.base,
      &protobuf_google_2fapi_2fendpoint_2eproto::scc_info_Endpoint.base,
      &protobuf_google_2fapi_2fcontrol_2eproto::scc_info_Control.base,
      &protobuf_google_2fapi_2flog_2eproto::scc_info_LogDescriptor.base,
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor.base,
      &protobuf_google_2fapi_2fmonitored_5fresource_2eproto::scc_info_MonitoredResourceDescriptor.base,
      &protobuf_google_2fapi_2fbilling_2eproto::scc_info_Billing.base,
      &protobuf_google_2fapi_2flogging_2eproto::scc_info_Logging.base,
      &protobuf_google_2fapi_2fmonitoring_2eproto::scc_info_Monitoring.base,
      &protobuf_google_2fapi_2fsystem_5fparameter_2eproto::scc_info_SystemParameters.base,
      &protobuf_google_2fapi_2fsource_5finfo_2eproto::scc_info_SourceInfo.base,
      &protobuf_google_2fapi_2fexperimental_2fexperimental_2eproto::scc_info_Experimental.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Service.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, config_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, producer_project_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, apis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, types_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, enums_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, documentation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, backend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, http_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, quota_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, authentication_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, control_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, logs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, monitored_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, billing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, logging_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, monitoring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, system_parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, source_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Service, experimental_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::Service)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Service_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030google/api/service.proto\022\ngoogle.api\032\034"
      "google/api/annotations.proto\032\025google/api"
      "/auth.proto\032\030google/api/backend.proto\032\030g"
      "oogle/api/billing.proto\032\030google/api/cont"
      "ext.proto\032\030google/api/control.proto\032\036goo"
      "gle/api/documentation.proto\032\031google/api/"
      "endpoint.proto\032*google/api/experimental/"
      "experimental.proto\032\025google/api/http.prot"
      "o\032\026google/api/label.proto\032\024google/api/lo"
      "g.proto\032\030google/api/logging.proto\032\027googl"
      "e/api/metric.proto\032#google/api/monitored"
      "_resource.proto\032\033google/api/monitoring.p"
      "roto\032\026google/api/quota.proto\032\034google/api"
      "/source_info.proto\032!google/api/system_pa"
      "rameter.proto\032\026google/api/usage.proto\032\031g"
      "oogle/protobuf/any.proto\032\031google/protobu"
      "f/api.proto\032\032google/protobuf/type.proto\032"
      "\036google/protobuf/wrappers.proto\"\206\010\n\007Serv"
      "ice\0224\n\016config_version\030\024 \001(\0132\034.google.pro"
      "tobuf.UInt32Value\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030! "
      "\001(\t\022\r\n\005title\030\002 \001(\t\022\033\n\023producer_project_i"
      "d\030\026 \001(\t\022\"\n\004apis\030\003 \003(\0132\024.google.protobuf."
      "Api\022$\n\005types\030\004 \003(\0132\025.google.protobuf.Typ"
      "e\022$\n\005enums\030\005 \003(\0132\025.google.protobuf.Enum\022"
      "0\n\rdocumentation\030\006 \001(\0132\031.google.api.Docu"
      "mentation\022$\n\007backend\030\010 \001(\0132\023.google.api."
      "Backend\022\036\n\004http\030\t \001(\0132\020.google.api.Http\022"
      " \n\005quota\030\n \001(\0132\021.google.api.Quota\0222\n\016aut"
      "hentication\030\013 \001(\0132\032.google.api.Authentic"
      "ation\022$\n\007context\030\014 \001(\0132\023.google.api.Cont"
      "ext\022 \n\005usage\030\017 \001(\0132\021.google.api.Usage\022\'\n"
      "\tendpoints\030\022 \003(\0132\024.google.api.Endpoint\022$"
      "\n\007control\030\025 \001(\0132\023.google.api.Control\022\'\n\004"
      "logs\030\027 \003(\0132\031.google.api.LogDescriptor\022-\n"
      "\007metrics\030\030 \003(\0132\034.google.api.MetricDescri"
      "ptor\022D\n\023monitored_resources\030\031 \003(\0132\'.goog"
      "le.api.MonitoredResourceDescriptor\022$\n\007bi"
      "lling\030\032 \001(\0132\023.google.api.Billing\022$\n\007logg"
      "ing\030\033 \001(\0132\023.google.api.Logging\022*\n\nmonito"
      "ring\030\034 \001(\0132\026.google.api.Monitoring\0227\n\021sy"
      "stem_parameters\030\035 \001(\0132\034.google.api.Syste"
      "mParameters\022+\n\013source_info\030% \001(\0132\026.googl"
      "e.api.SourceInfo\022.\n\014experimental\030e \001(\0132\030"
      ".google.api.ExperimentalBn\n\016com.google.a"
      "piB\014ServiceProtoP\001ZEgoogle.golang.org/ge"
      "nproto/googleapis/api/serviceconfig;serv"
      "iceconfig\242\002\004GAPIb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1864);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fauth_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fbackend_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fbilling_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fcontext_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fcontrol_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fdocumentation_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fendpoint_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fexperimental_2fexperimental_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fhttp_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2flabel_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2flog_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2flogging_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fmetric_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fmonitored_5fresource_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fmonitoring_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fquota_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fsource_5finfo_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fsystem_5fparameter_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fusage_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fapi_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftype_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fwrappers_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fservice_2eproto
namespace google {
namespace api {

// ===================================================================

void Service::InitAsDefaultInstance() {
  ::google::api::_Service_default_instance_._instance.get_mutable()->config_version_ = const_cast< ::google::protobuf::UInt32Value*>(
      ::google::protobuf::UInt32Value::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->documentation_ = const_cast< ::google::api::Documentation*>(
      ::google::api::Documentation::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->backend_ = const_cast< ::google::api::Backend*>(
      ::google::api::Backend::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->http_ = const_cast< ::google::api::Http*>(
      ::google::api::Http::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->quota_ = const_cast< ::google::api::Quota*>(
      ::google::api::Quota::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->authentication_ = const_cast< ::google::api::Authentication*>(
      ::google::api::Authentication::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->context_ = const_cast< ::google::api::Context*>(
      ::google::api::Context::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->usage_ = const_cast< ::google::api::Usage*>(
      ::google::api::Usage::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->control_ = const_cast< ::google::api::Control*>(
      ::google::api::Control::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->billing_ = const_cast< ::google::api::Billing*>(
      ::google::api::Billing::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->logging_ = const_cast< ::google::api::Logging*>(
      ::google::api::Logging::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->monitoring_ = const_cast< ::google::api::Monitoring*>(
      ::google::api::Monitoring::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->system_parameters_ = const_cast< ::google::api::SystemParameters*>(
      ::google::api::SystemParameters::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->source_info_ = const_cast< ::google::api::SourceInfo*>(
      ::google::api::SourceInfo::internal_default_instance());
  ::google::api::_Service_default_instance_._instance.get_mutable()->experimental_ = const_cast< ::google::api::Experimental*>(
      ::google::api::Experimental::internal_default_instance());
}
void Service::clear_config_version() {
  if (GetArenaNoVirtual() == NULL && config_version_ != NULL) {
    delete config_version_;
  }
  config_version_ = NULL;
}
void Service::clear_apis() {
  apis_.Clear();
}
void Service::clear_types() {
  types_.Clear();
}
void Service::clear_enums() {
  enums_.Clear();
}
void Service::clear_documentation() {
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) {
    delete documentation_;
  }
  documentation_ = NULL;
}
void Service::clear_backend() {
  if (GetArenaNoVirtual() == NULL && backend_ != NULL) {
    delete backend_;
  }
  backend_ = NULL;
}
void Service::clear_http() {
  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
}
void Service::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) {
    delete quota_;
  }
  quota_ = NULL;
}
void Service::clear_authentication() {
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) {
    delete authentication_;
  }
  authentication_ = NULL;
}
void Service::clear_context() {
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
}
void Service::clear_usage() {
  if (GetArenaNoVirtual() == NULL && usage_ != NULL) {
    delete usage_;
  }
  usage_ = NULL;
}
void Service::clear_endpoints() {
  endpoints_.Clear();
}
void Service::clear_control() {
  if (GetArenaNoVirtual() == NULL && control_ != NULL) {
    delete control_;
  }
  control_ = NULL;
}
void Service::clear_logs() {
  logs_.Clear();
}
void Service::clear_metrics() {
  metrics_.Clear();
}
void Service::clear_monitored_resources() {
  monitored_resources_.Clear();
}
void Service::clear_billing() {
  if (GetArenaNoVirtual() == NULL && billing_ != NULL) {
    delete billing_;
  }
  billing_ = NULL;
}
void Service::clear_logging() {
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
}
void Service::clear_monitoring() {
  if (GetArenaNoVirtual() == NULL && monitoring_ != NULL) {
    delete monitoring_;
  }
  monitoring_ = NULL;
}
void Service::clear_system_parameters() {
  if (GetArenaNoVirtual() == NULL && system_parameters_ != NULL) {
    delete system_parameters_;
  }
  system_parameters_ = NULL;
}
void Service::clear_source_info() {
  if (GetArenaNoVirtual() == NULL && source_info_ != NULL) {
    delete source_info_;
  }
  source_info_ = NULL;
}
void Service::clear_experimental() {
  if (GetArenaNoVirtual() == NULL && experimental_ != NULL) {
    delete experimental_;
  }
  experimental_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Service::kConfigVersionFieldNumber;
const int Service::kNameFieldNumber;
const int Service::kIdFieldNumber;
const int Service::kTitleFieldNumber;
const int Service::kProducerProjectIdFieldNumber;
const int Service::kApisFieldNumber;
const int Service::kTypesFieldNumber;
const int Service::kEnumsFieldNumber;
const int Service::kDocumentationFieldNumber;
const int Service::kBackendFieldNumber;
const int Service::kHttpFieldNumber;
const int Service::kQuotaFieldNumber;
const int Service::kAuthenticationFieldNumber;
const int Service::kContextFieldNumber;
const int Service::kUsageFieldNumber;
const int Service::kEndpointsFieldNumber;
const int Service::kControlFieldNumber;
const int Service::kLogsFieldNumber;
const int Service::kMetricsFieldNumber;
const int Service::kMonitoredResourcesFieldNumber;
const int Service::kBillingFieldNumber;
const int Service::kLoggingFieldNumber;
const int Service::kMonitoringFieldNumber;
const int Service::kSystemParametersFieldNumber;
const int Service::kSourceInfoFieldNumber;
const int Service::kExperimentalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Service::Service()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservice_2eproto::scc_info_Service.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Service)
}
Service::Service(const Service& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      apis_(from.apis_),
      types_(from.types_),
      enums_(from.enums_),
      endpoints_(from.endpoints_),
      logs_(from.logs_),
      metrics_(from.metrics_),
      monitored_resources_(from.monitored_resources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  producer_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.producer_project_id().size() > 0) {
    producer_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_documentation()) {
    documentation_ = new ::google::api::Documentation(*from.documentation_);
  } else {
    documentation_ = NULL;
  }
  if (from.has_backend()) {
    backend_ = new ::google::api::Backend(*from.backend_);
  } else {
    backend_ = NULL;
  }
  if (from.has_http()) {
    http_ = new ::google::api::Http(*from.http_);
  } else {
    http_ = NULL;
  }
  if (from.has_quota()) {
    quota_ = new ::google::api::Quota(*from.quota_);
  } else {
    quota_ = NULL;
  }
  if (from.has_authentication()) {
    authentication_ = new ::google::api::Authentication(*from.authentication_);
  } else {
    authentication_ = NULL;
  }
  if (from.has_context()) {
    context_ = new ::google::api::Context(*from.context_);
  } else {
    context_ = NULL;
  }
  if (from.has_usage()) {
    usage_ = new ::google::api::Usage(*from.usage_);
  } else {
    usage_ = NULL;
  }
  if (from.has_config_version()) {
    config_version_ = new ::google::protobuf::UInt32Value(*from.config_version_);
  } else {
    config_version_ = NULL;
  }
  if (from.has_control()) {
    control_ = new ::google::api::Control(*from.control_);
  } else {
    control_ = NULL;
  }
  if (from.has_billing()) {
    billing_ = new ::google::api::Billing(*from.billing_);
  } else {
    billing_ = NULL;
  }
  if (from.has_logging()) {
    logging_ = new ::google::api::Logging(*from.logging_);
  } else {
    logging_ = NULL;
  }
  if (from.has_monitoring()) {
    monitoring_ = new ::google::api::Monitoring(*from.monitoring_);
  } else {
    monitoring_ = NULL;
  }
  if (from.has_system_parameters()) {
    system_parameters_ = new ::google::api::SystemParameters(*from.system_parameters_);
  } else {
    system_parameters_ = NULL;
  }
  if (from.has_source_info()) {
    source_info_ = new ::google::api::SourceInfo(*from.source_info_);
  } else {
    source_info_ = NULL;
  }
  if (from.has_experimental()) {
    experimental_ = new ::google::api::Experimental(*from.experimental_);
  } else {
    experimental_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Service)
}

void Service::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&documentation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&experimental_) -
      reinterpret_cast<char*>(&documentation_)) + sizeof(experimental_));
}

Service::~Service() {
  // @@protoc_insertion_point(destructor:google.api.Service)
  SharedDtor();
}

void Service::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete documentation_;
  if (this != internal_default_instance()) delete backend_;
  if (this != internal_default_instance()) delete http_;
  if (this != internal_default_instance()) delete quota_;
  if (this != internal_default_instance()) delete authentication_;
  if (this != internal_default_instance()) delete context_;
  if (this != internal_default_instance()) delete usage_;
  if (this != internal_default_instance()) delete config_version_;
  if (this != internal_default_instance()) delete control_;
  if (this != internal_default_instance()) delete billing_;
  if (this != internal_default_instance()) delete logging_;
  if (this != internal_default_instance()) delete monitoring_;
  if (this != internal_default_instance()) delete system_parameters_;
  if (this != internal_default_instance()) delete source_info_;
  if (this != internal_default_instance()) delete experimental_;
}

void Service::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Service::descriptor() {
  ::protobuf_google_2fapi_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Service& Service::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservice_2eproto::scc_info_Service.base);
  return *internal_default_instance();
}


void Service::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apis_.Clear();
  types_.Clear();
  enums_.Clear();
  endpoints_.Clear();
  logs_.Clear();
  metrics_.Clear();
  monitored_resources_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && documentation_ != NULL) {
    delete documentation_;
  }
  documentation_ = NULL;
  if (GetArenaNoVirtual() == NULL && backend_ != NULL) {
    delete backend_;
  }
  backend_ = NULL;
  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) {
    delete quota_;
  }
  quota_ = NULL;
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) {
    delete authentication_;
  }
  authentication_ = NULL;
  if (GetArenaNoVirtual() == NULL && context_ != NULL) {
    delete context_;
  }
  context_ = NULL;
  if (GetArenaNoVirtual() == NULL && usage_ != NULL) {
    delete usage_;
  }
  usage_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_version_ != NULL) {
    delete config_version_;
  }
  config_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && control_ != NULL) {
    delete control_;
  }
  control_ = NULL;
  if (GetArenaNoVirtual() == NULL && billing_ != NULL) {
    delete billing_;
  }
  billing_ = NULL;
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
  if (GetArenaNoVirtual() == NULL && monitoring_ != NULL) {
    delete monitoring_;
  }
  monitoring_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_parameters_ != NULL) {
    delete system_parameters_;
  }
  system_parameters_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_info_ != NULL) {
    delete source_info_;
  }
  source_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && experimental_ != NULL) {
    delete experimental_;
  }
  experimental_ = NULL;
  _internal_metadata_.Clear();
}

bool Service::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Service)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Api apis = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_apis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Type types = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Enum enums = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_enums()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Documentation documentation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_documentation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Backend backend = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_backend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Http http = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Quota quota = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quota()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Authentication authentication = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_authentication()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Context context = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Usage usage = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_usage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.Endpoint endpoints = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.UInt32Value config_version = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Control control = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string producer_project_id = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_project_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.producer_project_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.LogDescriptor logs = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_logs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.MetricDescriptor metrics = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_monitored_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Billing billing = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_billing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Logging logging = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Monitoring monitoring = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_monitoring()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.SystemParameters system_parameters = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Service.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.SourceInfo source_info = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Experimental experimental = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_experimental()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Service)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Service)
  return false;
#undef DO_
}

void Service::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apis_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->apis(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Type types = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->types(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Enum enums = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enums_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->enums(static_cast<int>(i)),
      output);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_documentation(), output);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_backend(), output);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_http(), output);
  }

  // .google.api.Quota quota = 10;
  if (this->has_quota()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_quota(), output);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_authentication(), output);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_context(), output);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_usage(), output);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18,
      this->endpoints(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_config_version(), output);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_control(), output);
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.producer_project_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->producer_project_id(), output);
  }

  // repeated .google.api.LogDescriptor logs = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23,
      this->logs(static_cast<int>(i)),
      output);
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24,
      this->metrics(static_cast<int>(i)),
      output);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monitored_resources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25,
      this->monitored_resources(static_cast<int>(i)),
      output);
  }

  // .google.api.Billing billing = 26;
  if (this->has_billing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->_internal_billing(), output);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->_internal_logging(), output);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->_internal_monitoring(), output);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->_internal_system_parameters(), output);
  }

  // string id = 33;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      33, this->id(), output);
  }

  // .google.api.SourceInfo source_info = 37;
  if (this->has_source_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->_internal_source_info(), output);
  }

  // .google.api.Experimental experimental = 101;
  if (this->has_experimental()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, this->_internal_experimental(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Service)
}

::google::protobuf::uint8* Service::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Service)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // repeated .google.protobuf.Api apis = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->apis_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->apis(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Type types = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->types(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Enum enums = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->enums_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->enums(static_cast<int>(i)), deterministic, target);
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_documentation(), deterministic, target);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_backend(), deterministic, target);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_http(), deterministic, target);
  }

  // .google.api.Quota quota = 10;
  if (this->has_quota()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_quota(), deterministic, target);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_authentication(), deterministic, target);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_context(), deterministic, target);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_usage(), deterministic, target);
  }

  // repeated .google.api.Endpoint endpoints = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->endpoints(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_config_version(), deterministic, target);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_control(), deterministic, target);
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_project_id().data(), static_cast<int>(this->producer_project_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.producer_project_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->producer_project_id(), target);
  }

  // repeated .google.api.LogDescriptor logs = 23;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->logs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23, this->logs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24, this->metrics(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monitored_resources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25, this->monitored_resources(static_cast<int>(i)), deterministic, target);
  }

  // .google.api.Billing billing = 26;
  if (this->has_billing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26, this->_internal_billing(), deterministic, target);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27, this->_internal_logging(), deterministic, target);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, this->_internal_monitoring(), deterministic, target);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29, this->_internal_system_parameters(), deterministic, target);
  }

  // string id = 33;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Service.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->id(), target);
  }

  // .google.api.SourceInfo source_info = 37;
  if (this->has_source_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37, this->_internal_source_info(), deterministic, target);
  }

  // .google.api.Experimental experimental = 101;
  if (this->has_experimental()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101, this->_internal_experimental(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Service)
  return target;
}

size_t Service::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Service)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Api apis = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->apis_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->apis(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Type types = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->types(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Enum enums = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->enums_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->enums(static_cast<int>(i)));
    }
  }

  // repeated .google.api.Endpoint endpoints = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->endpoints_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->endpoints(static_cast<int>(i)));
    }
  }

  // repeated .google.api.LogDescriptor logs = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->logs_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->logs(static_cast<int>(i)));
    }
  }

  // repeated .google.api.MetricDescriptor metrics = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->metrics_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metrics(static_cast<int>(i)));
    }
  }

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  {
    unsigned int count = static_cast<unsigned int>(this->monitored_resources_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->monitored_resources(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string producer_project_id = 22;
  if (this->producer_project_id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->producer_project_id());
  }

  // string id = 33;
  if (this->id().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.api.Documentation documentation = 6;
  if (this->has_documentation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *documentation_);
  }

  // .google.api.Backend backend = 8;
  if (this->has_backend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *backend_);
  }

  // .google.api.Http http = 9;
  if (this->has_http()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *http_);
  }

  // .google.api.Quota quota = 10;
  if (this->has_quota()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *quota_);
  }

  // .google.api.Authentication authentication = 11;
  if (this->has_authentication()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *authentication_);
  }

  // .google.api.Context context = 12;
  if (this->has_context()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *context_);
  }

  // .google.api.Usage usage = 15;
  if (this->has_usage()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *usage_);
  }

  // .google.protobuf.UInt32Value config_version = 20;
  if (this->has_config_version()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *config_version_);
  }

  // .google.api.Control control = 21;
  if (this->has_control()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *control_);
  }

  // .google.api.Billing billing = 26;
  if (this->has_billing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *billing_);
  }

  // .google.api.Logging logging = 27;
  if (this->has_logging()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logging_);
  }

  // .google.api.Monitoring monitoring = 28;
  if (this->has_monitoring()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *monitoring_);
  }

  // .google.api.SystemParameters system_parameters = 29;
  if (this->has_system_parameters()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *system_parameters_);
  }

  // .google.api.SourceInfo source_info = 37;
  if (this->has_source_info()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_info_);
  }

  // .google.api.Experimental experimental = 101;
  if (this->has_experimental()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *experimental_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Service::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Service)
  GOOGLE_DCHECK_NE(&from, this);
  const Service* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Service>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Service)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Service)
    MergeFrom(*source);
  }
}

void Service::MergeFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Service)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apis_.MergeFrom(from.apis_);
  types_.MergeFrom(from.types_);
  enums_.MergeFrom(from.enums_);
  endpoints_.MergeFrom(from.endpoints_);
  logs_.MergeFrom(from.logs_);
  metrics_.MergeFrom(from.metrics_);
  monitored_resources_.MergeFrom(from.monitored_resources_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.producer_project_id().size() > 0) {

    producer_project_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_documentation()) {
    mutable_documentation()->::google::api::Documentation::MergeFrom(from.documentation());
  }
  if (from.has_backend()) {
    mutable_backend()->::google::api::Backend::MergeFrom(from.backend());
  }
  if (from.has_http()) {
    mutable_http()->::google::api::Http::MergeFrom(from.http());
  }
  if (from.has_quota()) {
    mutable_quota()->::google::api::Quota::MergeFrom(from.quota());
  }
  if (from.has_authentication()) {
    mutable_authentication()->::google::api::Authentication::MergeFrom(from.authentication());
  }
  if (from.has_context()) {
    mutable_context()->::google::api::Context::MergeFrom(from.context());
  }
  if (from.has_usage()) {
    mutable_usage()->::google::api::Usage::MergeFrom(from.usage());
  }
  if (from.has_config_version()) {
    mutable_config_version()->::google::protobuf::UInt32Value::MergeFrom(from.config_version());
  }
  if (from.has_control()) {
    mutable_control()->::google::api::Control::MergeFrom(from.control());
  }
  if (from.has_billing()) {
    mutable_billing()->::google::api::Billing::MergeFrom(from.billing());
  }
  if (from.has_logging()) {
    mutable_logging()->::google::api::Logging::MergeFrom(from.logging());
  }
  if (from.has_monitoring()) {
    mutable_monitoring()->::google::api::Monitoring::MergeFrom(from.monitoring());
  }
  if (from.has_system_parameters()) {
    mutable_system_parameters()->::google::api::SystemParameters::MergeFrom(from.system_parameters());
  }
  if (from.has_source_info()) {
    mutable_source_info()->::google::api::SourceInfo::MergeFrom(from.source_info());
  }
  if (from.has_experimental()) {
    mutable_experimental()->::google::api::Experimental::MergeFrom(from.experimental());
  }
}

void Service::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Service::CopyFrom(const Service& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Service)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Service::IsInitialized() const {
  return true;
}

void Service::Swap(Service* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Service::InternalSwap(Service* other) {
  using std::swap;
  CastToBase(&apis_)->InternalSwap(CastToBase(&other->apis_));
  CastToBase(&types_)->InternalSwap(CastToBase(&other->types_));
  CastToBase(&enums_)->InternalSwap(CastToBase(&other->enums_));
  CastToBase(&endpoints_)->InternalSwap(CastToBase(&other->endpoints_));
  CastToBase(&logs_)->InternalSwap(CastToBase(&other->logs_));
  CastToBase(&metrics_)->InternalSwap(CastToBase(&other->metrics_));
  CastToBase(&monitored_resources_)->InternalSwap(CastToBase(&other->monitored_resources_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  producer_project_id_.Swap(&other->producer_project_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(documentation_, other->documentation_);
  swap(backend_, other->backend_);
  swap(http_, other->http_);
  swap(quota_, other->quota_);
  swap(authentication_, other->authentication_);
  swap(context_, other->context_);
  swap(usage_, other->usage_);
  swap(config_version_, other->config_version_);
  swap(control_, other->control_);
  swap(billing_, other->billing_);
  swap(logging_, other->logging_);
  swap(monitoring_, other->monitoring_);
  swap(system_parameters_, other->system_parameters_);
  swap(source_info_, other->source_info_);
  swap(experimental_, other->experimental_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Service::GetMetadata() const {
  protobuf_google_2fapi_2fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Service* Arena::CreateMaybeMessage< ::google::api::Service >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Service >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
