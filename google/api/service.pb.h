// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/service.proto

#ifndef PROTOBUF_INCLUDED_google_2fapi_2fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fapi_2fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/auth.pb.h"
#include "google/api/backend.pb.h"
#include "google/api/billing.pb.h"
#include "google/api/context.pb.h"
#include "google/api/control.pb.h"
#include "google/api/documentation.pb.h"
#include "google/api/endpoint.pb.h"
#include "google/api/experimental/experimental.pb.h"
#include "google/api/http.pb.h"
#include "google/api/label.pb.h"
#include "google/api/log.pb.h"
#include "google/api/logging.pb.h"
#include "google/api/metric.pb.h"
#include "google/api/monitored_resource.pb.h"
#include "google/api/monitoring.pb.h"
#include "google/api/quota.pb.h"
#include "google/api/source_info.pb.h"
#include "google/api/system_parameter.pb.h"
#include "google/api/usage.pb.h"
#include <google/protobuf/any.pb.h>
#include <google/protobuf/api.pb.h>
#include <google/protobuf/type.pb.h>
#include <google/protobuf/wrappers.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservice_2eproto 

namespace protobuf_google_2fapi_2fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fapi_2fservice_2eproto
namespace google {
namespace api {
class Service;
class ServiceDefaultTypeInternal;
extern ServiceDefaultTypeInternal _Service_default_instance_;
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::api::Service* Arena::CreateMaybeMessage<::google::api::Service>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace api {

// ===================================================================

class Service : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Service) */ {
 public:
  Service();
  virtual ~Service();

  Service(const Service& from);

  inline Service& operator=(const Service& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Service(Service&& from) noexcept
    : Service() {
    *this = ::std::move(from);
  }

  inline Service& operator=(Service&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Service& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Service* internal_default_instance() {
    return reinterpret_cast<const Service*>(
               &_Service_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Service* other);
  friend void swap(Service& a, Service& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Service* New() const final {
    return CreateMaybeMessage<Service>(NULL);
  }

  Service* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Service>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Service& from);
  void MergeFrom(const Service& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Service* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Api apis = 3;
  int apis_size() const;
  void clear_apis();
  static const int kApisFieldNumber = 3;
  ::google::protobuf::Api* mutable_apis(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Api >*
      mutable_apis();
  const ::google::protobuf::Api& apis(int index) const;
  ::google::protobuf::Api* add_apis();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Api >&
      apis() const;

  // repeated .google.protobuf.Type types = 4;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 4;
  ::google::protobuf::Type* mutable_types(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Type >*
      mutable_types();
  const ::google::protobuf::Type& types(int index) const;
  ::google::protobuf::Type* add_types();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Type >&
      types() const;

  // repeated .google.protobuf.Enum enums = 5;
  int enums_size() const;
  void clear_enums();
  static const int kEnumsFieldNumber = 5;
  ::google::protobuf::Enum* mutable_enums(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum >*
      mutable_enums();
  const ::google::protobuf::Enum& enums(int index) const;
  ::google::protobuf::Enum* add_enums();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum >&
      enums() const;

  // repeated .google.api.Endpoint endpoints = 18;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 18;
  ::google::api::Endpoint* mutable_endpoints(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::Endpoint >*
      mutable_endpoints();
  const ::google::api::Endpoint& endpoints(int index) const;
  ::google::api::Endpoint* add_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Endpoint >&
      endpoints() const;

  // repeated .google.api.LogDescriptor logs = 23;
  int logs_size() const;
  void clear_logs();
  static const int kLogsFieldNumber = 23;
  ::google::api::LogDescriptor* mutable_logs(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor >*
      mutable_logs();
  const ::google::api::LogDescriptor& logs(int index) const;
  ::google::api::LogDescriptor* add_logs();
  const ::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor >&
      logs() const;

  // repeated .google.api.MetricDescriptor metrics = 24;
  int metrics_size() const;
  void clear_metrics();
  static const int kMetricsFieldNumber = 24;
  ::google::api::MetricDescriptor* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >*
      mutable_metrics();
  const ::google::api::MetricDescriptor& metrics(int index) const;
  ::google::api::MetricDescriptor* add_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >&
      metrics() const;

  // repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
  int monitored_resources_size() const;
  void clear_monitored_resources();
  static const int kMonitoredResourcesFieldNumber = 25;
  ::google::api::MonitoredResourceDescriptor* mutable_monitored_resources(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
      mutable_monitored_resources();
  const ::google::api::MonitoredResourceDescriptor& monitored_resources(int index) const;
  ::google::api::MonitoredResourceDescriptor* add_monitored_resources();
  const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
      monitored_resources() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string producer_project_id = 22;
  void clear_producer_project_id();
  static const int kProducerProjectIdFieldNumber = 22;
  const ::std::string& producer_project_id() const;
  void set_producer_project_id(const ::std::string& value);
  #if LANG_CXX11
  void set_producer_project_id(::std::string&& value);
  #endif
  void set_producer_project_id(const char* value);
  void set_producer_project_id(const char* value, size_t size);
  ::std::string* mutable_producer_project_id();
  ::std::string* release_producer_project_id();
  void set_allocated_producer_project_id(::std::string* producer_project_id);

  // string id = 33;
  void clear_id();
  static const int kIdFieldNumber = 33;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .google.api.Documentation documentation = 6;
  bool has_documentation() const;
  void clear_documentation();
  static const int kDocumentationFieldNumber = 6;
  private:
  const ::google::api::Documentation& _internal_documentation() const;
  public:
  const ::google::api::Documentation& documentation() const;
  ::google::api::Documentation* release_documentation();
  ::google::api::Documentation* mutable_documentation();
  void set_allocated_documentation(::google::api::Documentation* documentation);

  // .google.api.Backend backend = 8;
  bool has_backend() const;
  void clear_backend();
  static const int kBackendFieldNumber = 8;
  private:
  const ::google::api::Backend& _internal_backend() const;
  public:
  const ::google::api::Backend& backend() const;
  ::google::api::Backend* release_backend();
  ::google::api::Backend* mutable_backend();
  void set_allocated_backend(::google::api::Backend* backend);

  // .google.api.Http http = 9;
  bool has_http() const;
  void clear_http();
  static const int kHttpFieldNumber = 9;
  private:
  const ::google::api::Http& _internal_http() const;
  public:
  const ::google::api::Http& http() const;
  ::google::api::Http* release_http();
  ::google::api::Http* mutable_http();
  void set_allocated_http(::google::api::Http* http);

  // .google.api.Quota quota = 10;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 10;
  private:
  const ::google::api::Quota& _internal_quota() const;
  public:
  const ::google::api::Quota& quota() const;
  ::google::api::Quota* release_quota();
  ::google::api::Quota* mutable_quota();
  void set_allocated_quota(::google::api::Quota* quota);

  // .google.api.Authentication authentication = 11;
  bool has_authentication() const;
  void clear_authentication();
  static const int kAuthenticationFieldNumber = 11;
  private:
  const ::google::api::Authentication& _internal_authentication() const;
  public:
  const ::google::api::Authentication& authentication() const;
  ::google::api::Authentication* release_authentication();
  ::google::api::Authentication* mutable_authentication();
  void set_allocated_authentication(::google::api::Authentication* authentication);

  // .google.api.Context context = 12;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 12;
  private:
  const ::google::api::Context& _internal_context() const;
  public:
  const ::google::api::Context& context() const;
  ::google::api::Context* release_context();
  ::google::api::Context* mutable_context();
  void set_allocated_context(::google::api::Context* context);

  // .google.api.Usage usage = 15;
  bool has_usage() const;
  void clear_usage();
  static const int kUsageFieldNumber = 15;
  private:
  const ::google::api::Usage& _internal_usage() const;
  public:
  const ::google::api::Usage& usage() const;
  ::google::api::Usage* release_usage();
  ::google::api::Usage* mutable_usage();
  void set_allocated_usage(::google::api::Usage* usage);

  // .google.protobuf.UInt32Value config_version = 20;
  bool has_config_version() const;
  void clear_config_version();
  static const int kConfigVersionFieldNumber = 20;
  private:
  const ::google::protobuf::UInt32Value& _internal_config_version() const;
  public:
  const ::google::protobuf::UInt32Value& config_version() const;
  ::google::protobuf::UInt32Value* release_config_version();
  ::google::protobuf::UInt32Value* mutable_config_version();
  void set_allocated_config_version(::google::protobuf::UInt32Value* config_version);

  // .google.api.Control control = 21;
  bool has_control() const;
  void clear_control();
  static const int kControlFieldNumber = 21;
  private:
  const ::google::api::Control& _internal_control() const;
  public:
  const ::google::api::Control& control() const;
  ::google::api::Control* release_control();
  ::google::api::Control* mutable_control();
  void set_allocated_control(::google::api::Control* control);

  // .google.api.Billing billing = 26;
  bool has_billing() const;
  void clear_billing();
  static const int kBillingFieldNumber = 26;
  private:
  const ::google::api::Billing& _internal_billing() const;
  public:
  const ::google::api::Billing& billing() const;
  ::google::api::Billing* release_billing();
  ::google::api::Billing* mutable_billing();
  void set_allocated_billing(::google::api::Billing* billing);

  // .google.api.Logging logging = 27;
  bool has_logging() const;
  void clear_logging();
  static const int kLoggingFieldNumber = 27;
  private:
  const ::google::api::Logging& _internal_logging() const;
  public:
  const ::google::api::Logging& logging() const;
  ::google::api::Logging* release_logging();
  ::google::api::Logging* mutable_logging();
  void set_allocated_logging(::google::api::Logging* logging);

  // .google.api.Monitoring monitoring = 28;
  bool has_monitoring() const;
  void clear_monitoring();
  static const int kMonitoringFieldNumber = 28;
  private:
  const ::google::api::Monitoring& _internal_monitoring() const;
  public:
  const ::google::api::Monitoring& monitoring() const;
  ::google::api::Monitoring* release_monitoring();
  ::google::api::Monitoring* mutable_monitoring();
  void set_allocated_monitoring(::google::api::Monitoring* monitoring);

  // .google.api.SystemParameters system_parameters = 29;
  bool has_system_parameters() const;
  void clear_system_parameters();
  static const int kSystemParametersFieldNumber = 29;
  private:
  const ::google::api::SystemParameters& _internal_system_parameters() const;
  public:
  const ::google::api::SystemParameters& system_parameters() const;
  ::google::api::SystemParameters* release_system_parameters();
  ::google::api::SystemParameters* mutable_system_parameters();
  void set_allocated_system_parameters(::google::api::SystemParameters* system_parameters);

  // .google.api.SourceInfo source_info = 37;
  bool has_source_info() const;
  void clear_source_info();
  static const int kSourceInfoFieldNumber = 37;
  private:
  const ::google::api::SourceInfo& _internal_source_info() const;
  public:
  const ::google::api::SourceInfo& source_info() const;
  ::google::api::SourceInfo* release_source_info();
  ::google::api::SourceInfo* mutable_source_info();
  void set_allocated_source_info(::google::api::SourceInfo* source_info);

  // .google.api.Experimental experimental = 101;
  bool has_experimental() const;
  void clear_experimental();
  static const int kExperimentalFieldNumber = 101;
  private:
  const ::google::api::Experimental& _internal_experimental() const;
  public:
  const ::google::api::Experimental& experimental() const;
  ::google::api::Experimental* release_experimental();
  ::google::api::Experimental* mutable_experimental();
  void set_allocated_experimental(::google::api::Experimental* experimental);

  // @@protoc_insertion_point(class_scope:google.api.Service)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Api > apis_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Type > types_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum > enums_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Endpoint > endpoints_;
  ::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor > logs_;
  ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor > metrics_;
  ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor > monitored_resources_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr producer_project_id_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::api::Documentation* documentation_;
  ::google::api::Backend* backend_;
  ::google::api::Http* http_;
  ::google::api::Quota* quota_;
  ::google::api::Authentication* authentication_;
  ::google::api::Context* context_;
  ::google::api::Usage* usage_;
  ::google::protobuf::UInt32Value* config_version_;
  ::google::api::Control* control_;
  ::google::api::Billing* billing_;
  ::google::api::Logging* logging_;
  ::google::api::Monitoring* monitoring_;
  ::google::api::SystemParameters* system_parameters_;
  ::google::api::SourceInfo* source_info_;
  ::google::api::Experimental* experimental_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Service

// .google.protobuf.UInt32Value config_version = 20;
inline bool Service::has_config_version() const {
  return this != internal_default_instance() && config_version_ != NULL;
}
inline const ::google::protobuf::UInt32Value& Service::_internal_config_version() const {
  return *config_version_;
}
inline const ::google::protobuf::UInt32Value& Service::config_version() const {
  const ::google::protobuf::UInt32Value* p = config_version_;
  // @@protoc_insertion_point(field_get:google.api.Service.config_version)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::UInt32Value*>(
      &::google::protobuf::_UInt32Value_default_instance_);
}
inline ::google::protobuf::UInt32Value* Service::release_config_version() {
  // @@protoc_insertion_point(field_release:google.api.Service.config_version)
  
  ::google::protobuf::UInt32Value* temp = config_version_;
  config_version_ = NULL;
  return temp;
}
inline ::google::protobuf::UInt32Value* Service::mutable_config_version() {
  
  if (config_version_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::UInt32Value>(GetArenaNoVirtual());
    config_version_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.config_version)
  return config_version_;
}
inline void Service::set_allocated_config_version(::google::protobuf::UInt32Value* config_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_version_);
  }
  if (config_version) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(config_version)->GetArena();
    if (message_arena != submessage_arena) {
      config_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_version, submessage_arena);
    }
    
  } else {
    
  }
  config_version_ = config_version;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.config_version)
}

// string name = 1;
inline void Service::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Service::name() const {
  // @@protoc_insertion_point(field_get:google.api.Service.name)
  return name_.GetNoArena();
}
inline void Service::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.name)
}
#if LANG_CXX11
inline void Service::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.Service.name)
}
#endif
inline void Service::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.name)
}
inline void Service::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.name)
}
inline ::std::string* Service::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Service::release_name() {
  // @@protoc_insertion_point(field_release:google.api.Service.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Service::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.name)
}

// string id = 33;
inline void Service::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Service::id() const {
  // @@protoc_insertion_point(field_get:google.api.Service.id)
  return id_.GetNoArena();
}
inline void Service::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.id)
}
#if LANG_CXX11
inline void Service::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.Service.id)
}
#endif
inline void Service::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.id)
}
inline void Service::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.id)
}
inline ::std::string* Service::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Service::release_id() {
  // @@protoc_insertion_point(field_release:google.api.Service.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Service::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.id)
}

// string title = 2;
inline void Service::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Service::title() const {
  // @@protoc_insertion_point(field_get:google.api.Service.title)
  return title_.GetNoArena();
}
inline void Service::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.title)
}
#if LANG_CXX11
inline void Service::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.Service.title)
}
#endif
inline void Service::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.title)
}
inline void Service::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.title)
}
inline ::std::string* Service::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Service::release_title() {
  // @@protoc_insertion_point(field_release:google.api.Service.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Service::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.title)
}

// string producer_project_id = 22;
inline void Service::clear_producer_project_id() {
  producer_project_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Service::producer_project_id() const {
  // @@protoc_insertion_point(field_get:google.api.Service.producer_project_id)
  return producer_project_id_.GetNoArena();
}
inline void Service::set_producer_project_id(const ::std::string& value) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.api.Service.producer_project_id)
}
#if LANG_CXX11
inline void Service::set_producer_project_id(::std::string&& value) {
  
  producer_project_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.api.Service.producer_project_id)
}
#endif
inline void Service::set_producer_project_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.api.Service.producer_project_id)
}
inline void Service::set_producer_project_id(const char* value, size_t size) {
  
  producer_project_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.api.Service.producer_project_id)
}
inline ::std::string* Service::mutable_producer_project_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.Service.producer_project_id)
  return producer_project_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Service::release_producer_project_id() {
  // @@protoc_insertion_point(field_release:google.api.Service.producer_project_id)
  
  return producer_project_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Service::set_allocated_producer_project_id(::std::string* producer_project_id) {
  if (producer_project_id != NULL) {
    
  } else {
    
  }
  producer_project_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_project_id);
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.producer_project_id)
}

// repeated .google.protobuf.Api apis = 3;
inline int Service::apis_size() const {
  return apis_.size();
}
inline ::google::protobuf::Api* Service::mutable_apis(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.apis)
  return apis_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Api >*
Service::mutable_apis() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.apis)
  return &apis_;
}
inline const ::google::protobuf::Api& Service::apis(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.apis)
  return apis_.Get(index);
}
inline ::google::protobuf::Api* Service::add_apis() {
  // @@protoc_insertion_point(field_add:google.api.Service.apis)
  return apis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Api >&
Service::apis() const {
  // @@protoc_insertion_point(field_list:google.api.Service.apis)
  return apis_;
}

// repeated .google.protobuf.Type types = 4;
inline int Service::types_size() const {
  return types_.size();
}
inline ::google::protobuf::Type* Service::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.types)
  return types_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Type >*
Service::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.types)
  return &types_;
}
inline const ::google::protobuf::Type& Service::types(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.types)
  return types_.Get(index);
}
inline ::google::protobuf::Type* Service::add_types() {
  // @@protoc_insertion_point(field_add:google.api.Service.types)
  return types_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Type >&
Service::types() const {
  // @@protoc_insertion_point(field_list:google.api.Service.types)
  return types_;
}

// repeated .google.protobuf.Enum enums = 5;
inline int Service::enums_size() const {
  return enums_.size();
}
inline ::google::protobuf::Enum* Service::mutable_enums(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.enums)
  return enums_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum >*
Service::mutable_enums() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.enums)
  return &enums_;
}
inline const ::google::protobuf::Enum& Service::enums(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.enums)
  return enums_.Get(index);
}
inline ::google::protobuf::Enum* Service::add_enums() {
  // @@protoc_insertion_point(field_add:google.api.Service.enums)
  return enums_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Enum >&
Service::enums() const {
  // @@protoc_insertion_point(field_list:google.api.Service.enums)
  return enums_;
}

// .google.api.Documentation documentation = 6;
inline bool Service::has_documentation() const {
  return this != internal_default_instance() && documentation_ != NULL;
}
inline const ::google::api::Documentation& Service::_internal_documentation() const {
  return *documentation_;
}
inline const ::google::api::Documentation& Service::documentation() const {
  const ::google::api::Documentation* p = documentation_;
  // @@protoc_insertion_point(field_get:google.api.Service.documentation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Documentation*>(
      &::google::api::_Documentation_default_instance_);
}
inline ::google::api::Documentation* Service::release_documentation() {
  // @@protoc_insertion_point(field_release:google.api.Service.documentation)
  
  ::google::api::Documentation* temp = documentation_;
  documentation_ = NULL;
  return temp;
}
inline ::google::api::Documentation* Service::mutable_documentation() {
  
  if (documentation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Documentation>(GetArenaNoVirtual());
    documentation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.documentation)
  return documentation_;
}
inline void Service::set_allocated_documentation(::google::api::Documentation* documentation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(documentation_);
  }
  if (documentation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      documentation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, documentation, submessage_arena);
    }
    
  } else {
    
  }
  documentation_ = documentation;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.documentation)
}

// .google.api.Backend backend = 8;
inline bool Service::has_backend() const {
  return this != internal_default_instance() && backend_ != NULL;
}
inline const ::google::api::Backend& Service::_internal_backend() const {
  return *backend_;
}
inline const ::google::api::Backend& Service::backend() const {
  const ::google::api::Backend* p = backend_;
  // @@protoc_insertion_point(field_get:google.api.Service.backend)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Backend*>(
      &::google::api::_Backend_default_instance_);
}
inline ::google::api::Backend* Service::release_backend() {
  // @@protoc_insertion_point(field_release:google.api.Service.backend)
  
  ::google::api::Backend* temp = backend_;
  backend_ = NULL;
  return temp;
}
inline ::google::api::Backend* Service::mutable_backend() {
  
  if (backend_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Backend>(GetArenaNoVirtual());
    backend_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.backend)
  return backend_;
}
inline void Service::set_allocated_backend(::google::api::Backend* backend) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(backend_);
  }
  if (backend) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      backend = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, backend, submessage_arena);
    }
    
  } else {
    
  }
  backend_ = backend;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.backend)
}

// .google.api.Http http = 9;
inline bool Service::has_http() const {
  return this != internal_default_instance() && http_ != NULL;
}
inline const ::google::api::Http& Service::_internal_http() const {
  return *http_;
}
inline const ::google::api::Http& Service::http() const {
  const ::google::api::Http* p = http_;
  // @@protoc_insertion_point(field_get:google.api.Service.http)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Http*>(
      &::google::api::_Http_default_instance_);
}
inline ::google::api::Http* Service::release_http() {
  // @@protoc_insertion_point(field_release:google.api.Service.http)
  
  ::google::api::Http* temp = http_;
  http_ = NULL;
  return temp;
}
inline ::google::api::Http* Service::mutable_http() {
  
  if (http_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Http>(GetArenaNoVirtual());
    http_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.http)
  return http_;
}
inline void Service::set_allocated_http(::google::api::Http* http) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(http_);
  }
  if (http) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(http)->GetArena();
    if (message_arena != submessage_arena) {
      http = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, http, submessage_arena);
    }
    
  } else {
    
  }
  http_ = http;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.http)
}

// .google.api.Quota quota = 10;
inline bool Service::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline const ::google::api::Quota& Service::_internal_quota() const {
  return *quota_;
}
inline const ::google::api::Quota& Service::quota() const {
  const ::google::api::Quota* p = quota_;
  // @@protoc_insertion_point(field_get:google.api.Service.quota)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Quota*>(
      &::google::api::_Quota_default_instance_);
}
inline ::google::api::Quota* Service::release_quota() {
  // @@protoc_insertion_point(field_release:google.api.Service.quota)
  
  ::google::api::Quota* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline ::google::api::Quota* Service::mutable_quota() {
  
  if (quota_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Quota>(GetArenaNoVirtual());
    quota_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.quota)
  return quota_;
}
inline void Service::set_allocated_quota(::google::api::Quota* quota) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(quota_);
  }
  if (quota) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quota = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quota, submessage_arena);
    }
    
  } else {
    
  }
  quota_ = quota;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.quota)
}

// .google.api.Authentication authentication = 11;
inline bool Service::has_authentication() const {
  return this != internal_default_instance() && authentication_ != NULL;
}
inline const ::google::api::Authentication& Service::_internal_authentication() const {
  return *authentication_;
}
inline const ::google::api::Authentication& Service::authentication() const {
  const ::google::api::Authentication* p = authentication_;
  // @@protoc_insertion_point(field_get:google.api.Service.authentication)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Authentication*>(
      &::google::api::_Authentication_default_instance_);
}
inline ::google::api::Authentication* Service::release_authentication() {
  // @@protoc_insertion_point(field_release:google.api.Service.authentication)
  
  ::google::api::Authentication* temp = authentication_;
  authentication_ = NULL;
  return temp;
}
inline ::google::api::Authentication* Service::mutable_authentication() {
  
  if (authentication_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Authentication>(GetArenaNoVirtual());
    authentication_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.authentication)
  return authentication_;
}
inline void Service::set_allocated_authentication(::google::api::Authentication* authentication) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(authentication_);
  }
  if (authentication) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authentication = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authentication, submessage_arena);
    }
    
  } else {
    
  }
  authentication_ = authentication;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.authentication)
}

// .google.api.Context context = 12;
inline bool Service::has_context() const {
  return this != internal_default_instance() && context_ != NULL;
}
inline const ::google::api::Context& Service::_internal_context() const {
  return *context_;
}
inline const ::google::api::Context& Service::context() const {
  const ::google::api::Context* p = context_;
  // @@protoc_insertion_point(field_get:google.api.Service.context)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Context*>(
      &::google::api::_Context_default_instance_);
}
inline ::google::api::Context* Service::release_context() {
  // @@protoc_insertion_point(field_release:google.api.Service.context)
  
  ::google::api::Context* temp = context_;
  context_ = NULL;
  return temp;
}
inline ::google::api::Context* Service::mutable_context() {
  
  if (context_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Context>(GetArenaNoVirtual());
    context_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.context)
  return context_;
}
inline void Service::set_allocated_context(::google::api::Context* context) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(context_);
  }
  if (context) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      context = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, context, submessage_arena);
    }
    
  } else {
    
  }
  context_ = context;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.context)
}

// .google.api.Usage usage = 15;
inline bool Service::has_usage() const {
  return this != internal_default_instance() && usage_ != NULL;
}
inline const ::google::api::Usage& Service::_internal_usage() const {
  return *usage_;
}
inline const ::google::api::Usage& Service::usage() const {
  const ::google::api::Usage* p = usage_;
  // @@protoc_insertion_point(field_get:google.api.Service.usage)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Usage*>(
      &::google::api::_Usage_default_instance_);
}
inline ::google::api::Usage* Service::release_usage() {
  // @@protoc_insertion_point(field_release:google.api.Service.usage)
  
  ::google::api::Usage* temp = usage_;
  usage_ = NULL;
  return temp;
}
inline ::google::api::Usage* Service::mutable_usage() {
  
  if (usage_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Usage>(GetArenaNoVirtual());
    usage_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.usage)
  return usage_;
}
inline void Service::set_allocated_usage(::google::api::Usage* usage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(usage_);
  }
  if (usage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      usage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, usage, submessage_arena);
    }
    
  } else {
    
  }
  usage_ = usage;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.usage)
}

// repeated .google.api.Endpoint endpoints = 18;
inline int Service::endpoints_size() const {
  return endpoints_.size();
}
inline ::google::api::Endpoint* Service::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.endpoints)
  return endpoints_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Endpoint >*
Service::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.endpoints)
  return &endpoints_;
}
inline const ::google::api::Endpoint& Service::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.endpoints)
  return endpoints_.Get(index);
}
inline ::google::api::Endpoint* Service::add_endpoints() {
  // @@protoc_insertion_point(field_add:google.api.Service.endpoints)
  return endpoints_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Endpoint >&
Service::endpoints() const {
  // @@protoc_insertion_point(field_list:google.api.Service.endpoints)
  return endpoints_;
}

// .google.api.Control control = 21;
inline bool Service::has_control() const {
  return this != internal_default_instance() && control_ != NULL;
}
inline const ::google::api::Control& Service::_internal_control() const {
  return *control_;
}
inline const ::google::api::Control& Service::control() const {
  const ::google::api::Control* p = control_;
  // @@protoc_insertion_point(field_get:google.api.Service.control)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Control*>(
      &::google::api::_Control_default_instance_);
}
inline ::google::api::Control* Service::release_control() {
  // @@protoc_insertion_point(field_release:google.api.Service.control)
  
  ::google::api::Control* temp = control_;
  control_ = NULL;
  return temp;
}
inline ::google::api::Control* Service::mutable_control() {
  
  if (control_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Control>(GetArenaNoVirtual());
    control_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.control)
  return control_;
}
inline void Service::set_allocated_control(::google::api::Control* control) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(control_);
  }
  if (control) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      control = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, control, submessage_arena);
    }
    
  } else {
    
  }
  control_ = control;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.control)
}

// repeated .google.api.LogDescriptor logs = 23;
inline int Service::logs_size() const {
  return logs_.size();
}
inline ::google::api::LogDescriptor* Service::mutable_logs(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.logs)
  return logs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor >*
Service::mutable_logs() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.logs)
  return &logs_;
}
inline const ::google::api::LogDescriptor& Service::logs(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.logs)
  return logs_.Get(index);
}
inline ::google::api::LogDescriptor* Service::add_logs() {
  // @@protoc_insertion_point(field_add:google.api.Service.logs)
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::LogDescriptor >&
Service::logs() const {
  // @@protoc_insertion_point(field_list:google.api.Service.logs)
  return logs_;
}

// repeated .google.api.MetricDescriptor metrics = 24;
inline int Service::metrics_size() const {
  return metrics_.size();
}
inline ::google::api::MetricDescriptor* Service::mutable_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.metrics)
  return metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >*
Service::mutable_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.metrics)
  return &metrics_;
}
inline const ::google::api::MetricDescriptor& Service::metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.metrics)
  return metrics_.Get(index);
}
inline ::google::api::MetricDescriptor* Service::add_metrics() {
  // @@protoc_insertion_point(field_add:google.api.Service.metrics)
  return metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::MetricDescriptor >&
Service::metrics() const {
  // @@protoc_insertion_point(field_list:google.api.Service.metrics)
  return metrics_;
}

// repeated .google.api.MonitoredResourceDescriptor monitored_resources = 25;
inline int Service::monitored_resources_size() const {
  return monitored_resources_.size();
}
inline ::google::api::MonitoredResourceDescriptor* Service::mutable_monitored_resources(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Service.monitored_resources)
  return monitored_resources_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >*
Service::mutable_monitored_resources() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Service.monitored_resources)
  return &monitored_resources_;
}
inline const ::google::api::MonitoredResourceDescriptor& Service::monitored_resources(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Service.monitored_resources)
  return monitored_resources_.Get(index);
}
inline ::google::api::MonitoredResourceDescriptor* Service::add_monitored_resources() {
  // @@protoc_insertion_point(field_add:google.api.Service.monitored_resources)
  return monitored_resources_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::MonitoredResourceDescriptor >&
Service::monitored_resources() const {
  // @@protoc_insertion_point(field_list:google.api.Service.monitored_resources)
  return monitored_resources_;
}

// .google.api.Billing billing = 26;
inline bool Service::has_billing() const {
  return this != internal_default_instance() && billing_ != NULL;
}
inline const ::google::api::Billing& Service::_internal_billing() const {
  return *billing_;
}
inline const ::google::api::Billing& Service::billing() const {
  const ::google::api::Billing* p = billing_;
  // @@protoc_insertion_point(field_get:google.api.Service.billing)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Billing*>(
      &::google::api::_Billing_default_instance_);
}
inline ::google::api::Billing* Service::release_billing() {
  // @@protoc_insertion_point(field_release:google.api.Service.billing)
  
  ::google::api::Billing* temp = billing_;
  billing_ = NULL;
  return temp;
}
inline ::google::api::Billing* Service::mutable_billing() {
  
  if (billing_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Billing>(GetArenaNoVirtual());
    billing_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.billing)
  return billing_;
}
inline void Service::set_allocated_billing(::google::api::Billing* billing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(billing_);
  }
  if (billing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      billing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, billing, submessage_arena);
    }
    
  } else {
    
  }
  billing_ = billing;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.billing)
}

// .google.api.Logging logging = 27;
inline bool Service::has_logging() const {
  return this != internal_default_instance() && logging_ != NULL;
}
inline const ::google::api::Logging& Service::_internal_logging() const {
  return *logging_;
}
inline const ::google::api::Logging& Service::logging() const {
  const ::google::api::Logging* p = logging_;
  // @@protoc_insertion_point(field_get:google.api.Service.logging)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Logging*>(
      &::google::api::_Logging_default_instance_);
}
inline ::google::api::Logging* Service::release_logging() {
  // @@protoc_insertion_point(field_release:google.api.Service.logging)
  
  ::google::api::Logging* temp = logging_;
  logging_ = NULL;
  return temp;
}
inline ::google::api::Logging* Service::mutable_logging() {
  
  if (logging_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Logging>(GetArenaNoVirtual());
    logging_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.logging)
  return logging_;
}
inline void Service::set_allocated_logging(::google::api::Logging* logging) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(logging_);
  }
  if (logging) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logging = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logging, submessage_arena);
    }
    
  } else {
    
  }
  logging_ = logging;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.logging)
}

// .google.api.Monitoring monitoring = 28;
inline bool Service::has_monitoring() const {
  return this != internal_default_instance() && monitoring_ != NULL;
}
inline const ::google::api::Monitoring& Service::_internal_monitoring() const {
  return *monitoring_;
}
inline const ::google::api::Monitoring& Service::monitoring() const {
  const ::google::api::Monitoring* p = monitoring_;
  // @@protoc_insertion_point(field_get:google.api.Service.monitoring)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Monitoring*>(
      &::google::api::_Monitoring_default_instance_);
}
inline ::google::api::Monitoring* Service::release_monitoring() {
  // @@protoc_insertion_point(field_release:google.api.Service.monitoring)
  
  ::google::api::Monitoring* temp = monitoring_;
  monitoring_ = NULL;
  return temp;
}
inline ::google::api::Monitoring* Service::mutable_monitoring() {
  
  if (monitoring_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Monitoring>(GetArenaNoVirtual());
    monitoring_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.monitoring)
  return monitoring_;
}
inline void Service::set_allocated_monitoring(::google::api::Monitoring* monitoring) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(monitoring_);
  }
  if (monitoring) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      monitoring = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, monitoring, submessage_arena);
    }
    
  } else {
    
  }
  monitoring_ = monitoring;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.monitoring)
}

// .google.api.SystemParameters system_parameters = 29;
inline bool Service::has_system_parameters() const {
  return this != internal_default_instance() && system_parameters_ != NULL;
}
inline const ::google::api::SystemParameters& Service::_internal_system_parameters() const {
  return *system_parameters_;
}
inline const ::google::api::SystemParameters& Service::system_parameters() const {
  const ::google::api::SystemParameters* p = system_parameters_;
  // @@protoc_insertion_point(field_get:google.api.Service.system_parameters)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::SystemParameters*>(
      &::google::api::_SystemParameters_default_instance_);
}
inline ::google::api::SystemParameters* Service::release_system_parameters() {
  // @@protoc_insertion_point(field_release:google.api.Service.system_parameters)
  
  ::google::api::SystemParameters* temp = system_parameters_;
  system_parameters_ = NULL;
  return temp;
}
inline ::google::api::SystemParameters* Service::mutable_system_parameters() {
  
  if (system_parameters_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::SystemParameters>(GetArenaNoVirtual());
    system_parameters_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.system_parameters)
  return system_parameters_;
}
inline void Service::set_allocated_system_parameters(::google::api::SystemParameters* system_parameters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(system_parameters_);
  }
  if (system_parameters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      system_parameters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, system_parameters, submessage_arena);
    }
    
  } else {
    
  }
  system_parameters_ = system_parameters;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.system_parameters)
}

// .google.api.SourceInfo source_info = 37;
inline bool Service::has_source_info() const {
  return this != internal_default_instance() && source_info_ != NULL;
}
inline const ::google::api::SourceInfo& Service::_internal_source_info() const {
  return *source_info_;
}
inline const ::google::api::SourceInfo& Service::source_info() const {
  const ::google::api::SourceInfo* p = source_info_;
  // @@protoc_insertion_point(field_get:google.api.Service.source_info)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::SourceInfo*>(
      &::google::api::_SourceInfo_default_instance_);
}
inline ::google::api::SourceInfo* Service::release_source_info() {
  // @@protoc_insertion_point(field_release:google.api.Service.source_info)
  
  ::google::api::SourceInfo* temp = source_info_;
  source_info_ = NULL;
  return temp;
}
inline ::google::api::SourceInfo* Service::mutable_source_info() {
  
  if (source_info_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::SourceInfo>(GetArenaNoVirtual());
    source_info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.source_info)
  return source_info_;
}
inline void Service::set_allocated_source_info(::google::api::SourceInfo* source_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_info_);
  }
  if (source_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_info, submessage_arena);
    }
    
  } else {
    
  }
  source_info_ = source_info;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.source_info)
}

// .google.api.Experimental experimental = 101;
inline bool Service::has_experimental() const {
  return this != internal_default_instance() && experimental_ != NULL;
}
inline const ::google::api::Experimental& Service::_internal_experimental() const {
  return *experimental_;
}
inline const ::google::api::Experimental& Service::experimental() const {
  const ::google::api::Experimental* p = experimental_;
  // @@protoc_insertion_point(field_get:google.api.Service.experimental)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Experimental*>(
      &::google::api::_Experimental_default_instance_);
}
inline ::google::api::Experimental* Service::release_experimental() {
  // @@protoc_insertion_point(field_release:google.api.Service.experimental)
  
  ::google::api::Experimental* temp = experimental_;
  experimental_ = NULL;
  return temp;
}
inline ::google::api::Experimental* Service::mutable_experimental() {
  
  if (experimental_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Experimental>(GetArenaNoVirtual());
    experimental_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Service.experimental)
  return experimental_;
}
inline void Service::set_allocated_experimental(::google::api::Experimental* experimental) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(experimental_);
  }
  if (experimental) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      experimental = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, experimental, submessage_arena);
    }
    
  } else {
    
  }
  experimental_ = experimental;
  // @@protoc_insertion_point(field_set_allocated:google.api.Service.experimental)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fapi_2fservice_2eproto
