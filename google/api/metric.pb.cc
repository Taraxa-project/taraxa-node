// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/metric.proto

#include "google/api/metric.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2flabel_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2flabel_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LabelDescriptor;
}  // namespace protobuf_google_2fapi_2flabel_2eproto
namespace protobuf_google_2fapi_2fmetric_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmetric_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Metric_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fmetric_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MetricDescriptor_MetricDescriptorMetadata;
}  // namespace protobuf_google_2fapi_2fmetric_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace google {
namespace api {
class MetricDescriptor_MetricDescriptorMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricDescriptor_MetricDescriptorMetadata>
      _instance;
} _MetricDescriptor_MetricDescriptorMetadata_default_instance_;
class MetricDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetricDescriptor>
      _instance;
} _MetricDescriptor_default_instance_;
class Metric_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metric_LabelsEntry_DoNotUse>
      _instance;
} _Metric_LabelsEntry_DoNotUse_default_instance_;
class MetricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Metric>
      _instance;
} _Metric_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fmetric_2eproto {
static void InitDefaultsMetricDescriptor_MetricDescriptorMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MetricDescriptor_MetricDescriptorMetadata_default_instance_;
    new (ptr) ::google::api::MetricDescriptor_MetricDescriptorMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MetricDescriptor_MetricDescriptorMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetricDescriptor_MetricDescriptorMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetricDescriptor_MetricDescriptorMetadata}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsMetricDescriptor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_MetricDescriptor_default_instance_;
    new (ptr) ::google::api::MetricDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::MetricDescriptor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MetricDescriptor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMetricDescriptor}, {
      &protobuf_google_2fapi_2flabel_2eproto::scc_info_LabelDescriptor.base,
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor_MetricDescriptorMetadata.base,}};

static void InitDefaultsMetric_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Metric_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::Metric_LabelsEntry_DoNotUse();
  }
  ::google::api::Metric_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Metric_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetric_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsMetric() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Metric_default_instance_;
    new (ptr) ::google::api::Metric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Metric::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Metric =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetric}, {
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_Metric_LabelsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MetricDescriptor_MetricDescriptorMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetricDescriptor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metric_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Metric.base);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor_MetricDescriptorMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor_MetricDescriptorMetadata, launch_stage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor_MetricDescriptorMetadata, sample_period_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor_MetricDescriptorMetadata, ingest_delay_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, metric_kind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, value_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::MetricDescriptor, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Metric, labels_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::MetricDescriptor_MetricDescriptorMetadata)},
  { 8, -1, sizeof(::google::api::MetricDescriptor)},
  { 22, 29, sizeof(::google::api::Metric_LabelsEntry_DoNotUse)},
  { 31, -1, sizeof(::google::api::Metric)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_MetricDescriptor_MetricDescriptorMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_MetricDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Metric_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Metric_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/metric.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027google/api/metric.proto\022\ngoogle.api\032\026g"
      "oogle/api/label.proto\032\035google/api/launch"
      "_stage.proto\032\036google/protobuf/duration.p"
      "roto\"\312\005\n\020MetricDescriptor\022\014\n\004name\030\001 \001(\t\022"
      "\014\n\004type\030\010 \001(\t\022+\n\006labels\030\002 \003(\0132\033.google.a"
      "pi.LabelDescriptor\022<\n\013metric_kind\030\003 \001(\0162"
      "\'.google.api.MetricDescriptor.MetricKind"
      "\022:\n\nvalue_type\030\004 \001(\0162&.google.api.Metric"
      "Descriptor.ValueType\022\014\n\004unit\030\005 \001(\t\022\023\n\013de"
      "scription\030\006 \001(\t\022\024\n\014display_name\030\007 \001(\t\022G\n"
      "\010metadata\030\n \001(\01325.google.api.MetricDescr"
      "iptor.MetricDescriptorMetadata\032\254\001\n\030Metri"
      "cDescriptorMetadata\022-\n\014launch_stage\030\001 \001("
      "\0162\027.google.api.LaunchStage\0220\n\rsample_per"
      "iod\030\002 \001(\0132\031.google.protobuf.Duration\022/\n\014"
      "ingest_delay\030\003 \001(\0132\031.google.protobuf.Dur"
      "ation\"O\n\nMetricKind\022\033\n\027METRIC_KIND_UNSPE"
      "CIFIED\020\000\022\t\n\005GAUGE\020\001\022\t\n\005DELTA\020\002\022\016\n\nCUMULA"
      "TIVE\020\003\"q\n\tValueType\022\032\n\026VALUE_TYPE_UNSPEC"
      "IFIED\020\000\022\010\n\004BOOL\020\001\022\t\n\005INT64\020\002\022\n\n\006DOUBLE\020\003"
      "\022\n\n\006STRING\020\004\022\020\n\014DISTRIBUTION\020\005\022\t\n\005MONEY\020"
      "\006\"u\n\006Metric\022\014\n\004type\030\003 \001(\t\022.\n\006labels\030\002 \003("
      "\0132\036.google.api.Metric.LabelsEntry\032-\n\013Lab"
      "elsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001"
      "B_\n\016com.google.apiB\013MetricProtoP\001Z7googl"
      "e.golang.org/genproto/googleapis/api/met"
      "ric;metric\242\002\004GAPIb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1065);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/metric.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2flabel_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2flaunch_5fstage_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fmetric_2eproto
namespace google {
namespace api {
const ::google::protobuf::EnumDescriptor* MetricDescriptor_MetricKind_descriptor() {
  protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fmetric_2eproto::file_level_enum_descriptors[0];
}
bool MetricDescriptor_MetricKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetricDescriptor_MetricKind MetricDescriptor::METRIC_KIND_UNSPECIFIED;
const MetricDescriptor_MetricKind MetricDescriptor::GAUGE;
const MetricDescriptor_MetricKind MetricDescriptor::DELTA;
const MetricDescriptor_MetricKind MetricDescriptor::CUMULATIVE;
const MetricDescriptor_MetricKind MetricDescriptor::MetricKind_MIN;
const MetricDescriptor_MetricKind MetricDescriptor::MetricKind_MAX;
const int MetricDescriptor::MetricKind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MetricDescriptor_ValueType_descriptor() {
  protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fmetric_2eproto::file_level_enum_descriptors[1];
}
bool MetricDescriptor_ValueType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MetricDescriptor_ValueType MetricDescriptor::VALUE_TYPE_UNSPECIFIED;
const MetricDescriptor_ValueType MetricDescriptor::BOOL;
const MetricDescriptor_ValueType MetricDescriptor::INT64;
const MetricDescriptor_ValueType MetricDescriptor::DOUBLE;
const MetricDescriptor_ValueType MetricDescriptor::STRING;
const MetricDescriptor_ValueType MetricDescriptor::DISTRIBUTION;
const MetricDescriptor_ValueType MetricDescriptor::MONEY;
const MetricDescriptor_ValueType MetricDescriptor::ValueType_MIN;
const MetricDescriptor_ValueType MetricDescriptor::ValueType_MAX;
const int MetricDescriptor::ValueType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MetricDescriptor_MetricDescriptorMetadata::InitAsDefaultInstance() {
  ::google::api::_MetricDescriptor_MetricDescriptorMetadata_default_instance_._instance.get_mutable()->sample_period_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::google::api::_MetricDescriptor_MetricDescriptorMetadata_default_instance_._instance.get_mutable()->ingest_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void MetricDescriptor_MetricDescriptorMetadata::clear_sample_period() {
  if (GetArenaNoVirtual() == NULL && sample_period_ != NULL) {
    delete sample_period_;
  }
  sample_period_ = NULL;
}
void MetricDescriptor_MetricDescriptorMetadata::clear_ingest_delay() {
  if (GetArenaNoVirtual() == NULL && ingest_delay_ != NULL) {
    delete ingest_delay_;
  }
  ingest_delay_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricDescriptor_MetricDescriptorMetadata::kLaunchStageFieldNumber;
const int MetricDescriptor_MetricDescriptorMetadata::kSamplePeriodFieldNumber;
const int MetricDescriptor_MetricDescriptorMetadata::kIngestDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricDescriptor_MetricDescriptorMetadata::MetricDescriptor_MetricDescriptorMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor_MetricDescriptorMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MetricDescriptor.MetricDescriptorMetadata)
}
MetricDescriptor_MetricDescriptorMetadata::MetricDescriptor_MetricDescriptorMetadata(const MetricDescriptor_MetricDescriptorMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sample_period()) {
    sample_period_ = new ::google::protobuf::Duration(*from.sample_period_);
  } else {
    sample_period_ = NULL;
  }
  if (from.has_ingest_delay()) {
    ingest_delay_ = new ::google::protobuf::Duration(*from.ingest_delay_);
  } else {
    ingest_delay_ = NULL;
  }
  launch_stage_ = from.launch_stage_;
  // @@protoc_insertion_point(copy_constructor:google.api.MetricDescriptor.MetricDescriptorMetadata)
}

void MetricDescriptor_MetricDescriptorMetadata::SharedCtor() {
  ::memset(&sample_period_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&launch_stage_) -
      reinterpret_cast<char*>(&sample_period_)) + sizeof(launch_stage_));
}

MetricDescriptor_MetricDescriptorMetadata::~MetricDescriptor_MetricDescriptorMetadata() {
  // @@protoc_insertion_point(destructor:google.api.MetricDescriptor.MetricDescriptorMetadata)
  SharedDtor();
}

void MetricDescriptor_MetricDescriptorMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete sample_period_;
  if (this != internal_default_instance()) delete ingest_delay_;
}

void MetricDescriptor_MetricDescriptorMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetricDescriptor_MetricDescriptorMetadata::descriptor() {
  ::protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetricDescriptor_MetricDescriptorMetadata& MetricDescriptor_MetricDescriptorMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor_MetricDescriptorMetadata.base);
  return *internal_default_instance();
}


void MetricDescriptor_MetricDescriptorMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sample_period_ != NULL) {
    delete sample_period_;
  }
  sample_period_ = NULL;
  if (GetArenaNoVirtual() == NULL && ingest_delay_ != NULL) {
    delete ingest_delay_;
  }
  ingest_delay_ = NULL;
  launch_stage_ = 0;
  _internal_metadata_.Clear();
}

bool MetricDescriptor_MetricDescriptorMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.LaunchStage launch_stage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_launch_stage(static_cast< ::google::api::LaunchStage >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration sample_period = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sample_period()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration ingest_delay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ingest_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MetricDescriptor.MetricDescriptorMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MetricDescriptor.MetricDescriptorMetadata)
  return false;
#undef DO_
}

void MetricDescriptor_MetricDescriptorMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.LaunchStage launch_stage = 1;
  if (this->launch_stage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->launch_stage(), output);
  }

  // .google.protobuf.Duration sample_period = 2;
  if (this->has_sample_period()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_sample_period(), output);
  }

  // .google.protobuf.Duration ingest_delay = 3;
  if (this->has_ingest_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_ingest_delay(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.MetricDescriptor.MetricDescriptorMetadata)
}

::google::protobuf::uint8* MetricDescriptor_MetricDescriptorMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.LaunchStage launch_stage = 1;
  if (this->launch_stage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->launch_stage(), target);
  }

  // .google.protobuf.Duration sample_period = 2;
  if (this->has_sample_period()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_sample_period(), deterministic, target);
  }

  // .google.protobuf.Duration ingest_delay = 3;
  if (this->has_ingest_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_ingest_delay(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MetricDescriptor.MetricDescriptorMetadata)
  return target;
}

size_t MetricDescriptor_MetricDescriptorMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration sample_period = 2;
  if (this->has_sample_period()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sample_period_);
  }

  // .google.protobuf.Duration ingest_delay = 3;
  if (this->has_ingest_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ingest_delay_);
  }

  // .google.api.LaunchStage launch_stage = 1;
  if (this->launch_stage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->launch_stage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricDescriptor_MetricDescriptorMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricDescriptor_MetricDescriptorMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricDescriptor_MetricDescriptorMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MetricDescriptor.MetricDescriptorMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MetricDescriptor.MetricDescriptorMetadata)
    MergeFrom(*source);
  }
}

void MetricDescriptor_MetricDescriptorMetadata::MergeFrom(const MetricDescriptor_MetricDescriptorMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sample_period()) {
    mutable_sample_period()->::google::protobuf::Duration::MergeFrom(from.sample_period());
  }
  if (from.has_ingest_delay()) {
    mutable_ingest_delay()->::google::protobuf::Duration::MergeFrom(from.ingest_delay());
  }
  if (from.launch_stage() != 0) {
    set_launch_stage(from.launch_stage());
  }
}

void MetricDescriptor_MetricDescriptorMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricDescriptor_MetricDescriptorMetadata::CopyFrom(const MetricDescriptor_MetricDescriptorMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MetricDescriptor.MetricDescriptorMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricDescriptor_MetricDescriptorMetadata::IsInitialized() const {
  return true;
}

void MetricDescriptor_MetricDescriptorMetadata::Swap(MetricDescriptor_MetricDescriptorMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricDescriptor_MetricDescriptorMetadata::InternalSwap(MetricDescriptor_MetricDescriptorMetadata* other) {
  using std::swap;
  swap(sample_period_, other->sample_period_);
  swap(ingest_delay_, other->ingest_delay_);
  swap(launch_stage_, other->launch_stage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetricDescriptor_MetricDescriptorMetadata::GetMetadata() const {
  protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MetricDescriptor::InitAsDefaultInstance() {
  ::google::api::_MetricDescriptor_default_instance_._instance.get_mutable()->metadata_ = const_cast< ::google::api::MetricDescriptor_MetricDescriptorMetadata*>(
      ::google::api::MetricDescriptor_MetricDescriptorMetadata::internal_default_instance());
}
void MetricDescriptor::clear_labels() {
  labels_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetricDescriptor::kNameFieldNumber;
const int MetricDescriptor::kTypeFieldNumber;
const int MetricDescriptor::kLabelsFieldNumber;
const int MetricDescriptor::kMetricKindFieldNumber;
const int MetricDescriptor::kValueTypeFieldNumber;
const int MetricDescriptor::kUnitFieldNumber;
const int MetricDescriptor::kDescriptionFieldNumber;
const int MetricDescriptor::kDisplayNameFieldNumber;
const int MetricDescriptor::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetricDescriptor::MetricDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.MetricDescriptor)
}
MetricDescriptor::MetricDescriptor(const MetricDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      labels_(from.labels_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unit().size() > 0) {
    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_metadata()) {
    metadata_ = new ::google::api::MetricDescriptor_MetricDescriptorMetadata(*from.metadata_);
  } else {
    metadata_ = NULL;
  }
  ::memcpy(&metric_kind_, &from.metric_kind_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_type_) -
    reinterpret_cast<char*>(&metric_kind_)) + sizeof(value_type_));
  // @@protoc_insertion_point(copy_constructor:google.api.MetricDescriptor)
}

void MetricDescriptor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_type_) -
      reinterpret_cast<char*>(&metadata_)) + sizeof(value_type_));
}

MetricDescriptor::~MetricDescriptor() {
  // @@protoc_insertion_point(destructor:google.api.MetricDescriptor)
  SharedDtor();
}

void MetricDescriptor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metadata_;
}

void MetricDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetricDescriptor::descriptor() {
  ::protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetricDescriptor& MetricDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmetric_2eproto::scc_info_MetricDescriptor.base);
  return *internal_default_instance();
}


void MetricDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.MetricDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && metadata_ != NULL) {
    delete metadata_;
  }
  metadata_ = NULL;
  ::memset(&metric_kind_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_type_) -
      reinterpret_cast<char*>(&metric_kind_)) + sizeof(value_type_));
  _internal_metadata_.Clear();
}

bool MetricDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.MetricDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MetricDescriptor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.LabelDescriptor labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_labels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.MetricDescriptor.MetricKind metric_kind = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_metric_kind(static_cast< ::google::api::MetricDescriptor_MetricKind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.MetricDescriptor.ValueType value_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value_type(static_cast< ::google::api::MetricDescriptor_ValueType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unit = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unit().data(), static_cast<int>(this->unit().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MetricDescriptor.unit"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MetricDescriptor.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MetricDescriptor.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.MetricDescriptor.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.MetricDescriptor.MetricDescriptorMetadata metadata = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.MetricDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.MetricDescriptor)
  return false;
#undef DO_
}

void MetricDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.MetricDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .google.api.LabelDescriptor labels = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->labels_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->labels(static_cast<int>(i)),
      output);
  }

  // .google.api.MetricDescriptor.MetricKind metric_kind = 3;
  if (this->metric_kind() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->metric_kind(), output);
  }

  // .google.api.MetricDescriptor.ValueType value_type = 4;
  if (this->value_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->value_type(), output);
  }

  // string unit = 5;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->unit(), output);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // string display_name = 7;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->display_name(), output);
  }

  // string type = 8;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->type(), output);
  }

  // .google.api.MetricDescriptor.MetricDescriptorMetadata metadata = 10;
  if (this->has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_metadata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.MetricDescriptor)
}

::google::protobuf::uint8* MetricDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.MetricDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .google.api.LabelDescriptor labels = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->labels_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->labels(static_cast<int>(i)), deterministic, target);
  }

  // .google.api.MetricDescriptor.MetricKind metric_kind = 3;
  if (this->metric_kind() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->metric_kind(), target);
  }

  // .google.api.MetricDescriptor.ValueType value_type = 4;
  if (this->value_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->value_type(), target);
  }

  // string unit = 5;
  if (this->unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unit().data(), static_cast<int>(this->unit().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->unit(), target);
  }

  // string description = 6;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // string display_name = 7;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->display_name(), target);
  }

  // string type = 8;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.MetricDescriptor.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->type(), target);
  }

  // .google.api.MetricDescriptor.MetricDescriptorMetadata metadata = 10;
  if (this->has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_metadata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.MetricDescriptor)
  return target;
}

size_t MetricDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.MetricDescriptor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.LabelDescriptor labels = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->labels_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->labels(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string unit = 5;
  if (this->unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unit());
  }

  // string description = 6;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string display_name = 7;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string type = 8;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .google.api.MetricDescriptor.MetricDescriptorMetadata metadata = 10;
  if (this->has_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *metadata_);
  }

  // .google.api.MetricDescriptor.MetricKind metric_kind = 3;
  if (this->metric_kind() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->metric_kind());
  }

  // .google.api.MetricDescriptor.ValueType value_type = 4;
  if (this->value_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.MetricDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetricDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.MetricDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.MetricDescriptor)
    MergeFrom(*source);
  }
}

void MetricDescriptor::MergeFrom(const MetricDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.MetricDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.unit().size() > 0) {

    unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unit_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_metadata()) {
    mutable_metadata()->::google::api::MetricDescriptor_MetricDescriptorMetadata::MergeFrom(from.metadata());
  }
  if (from.metric_kind() != 0) {
    set_metric_kind(from.metric_kind());
  }
  if (from.value_type() != 0) {
    set_value_type(from.value_type());
  }
}

void MetricDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.MetricDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricDescriptor::CopyFrom(const MetricDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.MetricDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricDescriptor::IsInitialized() const {
  return true;
}

void MetricDescriptor::Swap(MetricDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetricDescriptor::InternalSwap(MetricDescriptor* other) {
  using std::swap;
  CastToBase(&labels_)->InternalSwap(CastToBase(&other->labels_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unit_.Swap(&other->unit_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metadata_, other->metadata_);
  swap(metric_kind_, other->metric_kind_);
  swap(value_type_, other->value_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetricDescriptor::GetMetadata() const {
  protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse() {}
Metric_LabelsEntry_DoNotUse::Metric_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Metric_LabelsEntry_DoNotUse::MergeFrom(const Metric_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Metric_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[2];
}
void Metric_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Metric::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metric::kTypeFieldNumber;
const int Metric::kLabelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metric::Metric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fmetric_2eproto::scc_info_Metric.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Metric)
}
Metric::Metric(const Metric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Metric)
}

void Metric::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Metric::~Metric() {
  // @@protoc_insertion_point(destructor:google.api.Metric)
  SharedDtor();
}

void Metric::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Metric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Metric::descriptor() {
  ::protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metric& Metric::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fmetric_2eproto::scc_info_Metric.base);
  return *internal_default_instance();
}


void Metric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Metric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Metric)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> labels = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Metric_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Metric_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Metric.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Metric.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Metric.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Metric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Metric)
  return false;
#undef DO_
}

void Metric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.Metric.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.Metric.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Metric_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Metric_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Metric.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Metric)
}

::google::protobuf::uint8* Metric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Metric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> labels = 2;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.Metric.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.Metric.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Metric_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Metric_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Metric.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Metric)
  return target;
}

size_t Metric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Metric)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<Metric_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Metric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  const Metric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Metric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Metric)
    MergeFrom(*source);
  }
}

void Metric::MergeFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Metric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void Metric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metric::CopyFrom(const Metric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Metric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metric::IsInitialized() const {
  return true;
}

void Metric::Swap(Metric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metric::InternalSwap(Metric* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Metric::GetMetadata() const {
  protobuf_google_2fapi_2fmetric_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fmetric_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MetricDescriptor_MetricDescriptorMetadata* Arena::CreateMaybeMessage< ::google::api::MetricDescriptor_MetricDescriptorMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::MetricDescriptor_MetricDescriptorMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::MetricDescriptor* Arena::CreateMaybeMessage< ::google::api::MetricDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::MetricDescriptor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Metric_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::Metric_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Metric_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Metric* Arena::CreateMaybeMessage< ::google::api::Metric >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Metric >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
