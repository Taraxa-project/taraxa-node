// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/config_change.proto

#include "google/api/config_change.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fconfig_5fchange_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fconfig_5fchange_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Advice;
}  // namespace protobuf_google_2fapi_2fconfig_5fchange_2eproto
namespace google {
namespace api {
class ConfigChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigChange>
      _instance;
} _ConfigChange_default_instance_;
class AdviceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Advice>
      _instance;
} _Advice_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fconfig_5fchange_2eproto {
static void InitDefaultsConfigChange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_ConfigChange_default_instance_;
    new (ptr) ::google::api::ConfigChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::ConfigChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConfigChange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConfigChange}, {
      &protobuf_google_2fapi_2fconfig_5fchange_2eproto::scc_info_Advice.base,}};

static void InitDefaultsAdvice() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Advice_default_instance_;
    new (ptr) ::google::api::Advice();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Advice::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Advice =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAdvice}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ConfigChange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Advice.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::ConfigChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::ConfigChange, element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::ConfigChange, old_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::ConfigChange, new_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::ConfigChange, change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::ConfigChange, advices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Advice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Advice, description_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::ConfigChange)},
  { 10, -1, sizeof(::google::api::Advice)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_ConfigChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Advice_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/config_change.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036google/api/config_change.proto\022\ngoogle"
      ".api\"\227\001\n\014ConfigChange\022\017\n\007element\030\001 \001(\t\022\021"
      "\n\told_value\030\002 \001(\t\022\021\n\tnew_value\030\003 \001(\t\022+\n\013"
      "change_type\030\004 \001(\0162\026.google.api.ChangeTyp"
      "e\022#\n\007advices\030\005 \003(\0132\022.google.api.Advice\"\035"
      "\n\006Advice\022\023\n\013description\030\002 \001(\t*O\n\nChangeT"
      "ype\022\033\n\027CHANGE_TYPE_UNSPECIFIED\020\000\022\t\n\005ADDE"
      "D\020\001\022\013\n\007REMOVED\020\002\022\014\n\010MODIFIED\020\003Bq\n\016com.go"
      "ogle.apiB\021ConfigChangeProtoP\001ZCgoogle.go"
      "lang.org/genproto/googleapis/api/configc"
      "hange;configchange\242\002\004GAPIb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 433);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/config_change.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fconfig_5fchange_2eproto
namespace google {
namespace api {
const ::google::protobuf::EnumDescriptor* ChangeType_descriptor() {
  protobuf_google_2fapi_2fconfig_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fconfig_5fchange_2eproto::file_level_enum_descriptors[0];
}
bool ChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ConfigChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigChange::kElementFieldNumber;
const int ConfigChange::kOldValueFieldNumber;
const int ConfigChange::kNewValueFieldNumber;
const int ConfigChange::kChangeTypeFieldNumber;
const int ConfigChange::kAdvicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigChange::ConfigChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fconfig_5fchange_2eproto::scc_info_ConfigChange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.ConfigChange)
}
ConfigChange::ConfigChange(const ConfigChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      advices_(from.advices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.element().size() > 0) {
    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
  old_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.old_value().size() > 0) {
    old_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_value_);
  }
  new_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.new_value().size() > 0) {
    new_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_value_);
  }
  change_type_ = from.change_type_;
  // @@protoc_insertion_point(copy_constructor:google.api.ConfigChange)
}

void ConfigChange::SharedCtor() {
  element_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_type_ = 0;
}

ConfigChange::~ConfigChange() {
  // @@protoc_insertion_point(destructor:google.api.ConfigChange)
  SharedDtor();
}

void ConfigChange::SharedDtor() {
  element_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfigChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConfigChange::descriptor() {
  ::protobuf_google_2fapi_2fconfig_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fconfig_5fchange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigChange& ConfigChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fconfig_5fchange_2eproto::scc_info_ConfigChange.base);
  return *internal_default_instance();
}


void ConfigChange::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.ConfigChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  advices_.Clear();
  element_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_type_ = 0;
  _internal_metadata_.Clear();
}

bool ConfigChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.ConfigChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_element()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->element().data(), static_cast<int>(this->element().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ConfigChange.element"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string old_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->old_value().data(), static_cast<int>(this->old_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ConfigChange.old_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string new_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_value().data(), static_cast<int>(this->new_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.ConfigChange.new_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.ChangeType change_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_change_type(static_cast< ::google::api::ChangeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.Advice advices = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_advices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.ConfigChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.ConfigChange)
  return false;
#undef DO_
}

void ConfigChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.ConfigChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string element = 1;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element().data(), static_cast<int>(this->element().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.element");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->element(), output);
  }

  // string old_value = 2;
  if (this->old_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_value().data(), static_cast<int>(this->old_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.old_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->old_value(), output);
  }

  // string new_value = 3;
  if (this->new_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_value().data(), static_cast<int>(this->new_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.new_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_value(), output);
  }

  // .google.api.ChangeType change_type = 4;
  if (this->change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->change_type(), output);
  }

  // repeated .google.api.Advice advices = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->advices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.ConfigChange)
}

::google::protobuf::uint8* ConfigChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.ConfigChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string element = 1;
  if (this->element().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element().data(), static_cast<int>(this->element().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.element");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->element(), target);
  }

  // string old_value = 2;
  if (this->old_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->old_value().data(), static_cast<int>(this->old_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.old_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->old_value(), target);
  }

  // string new_value = 3;
  if (this->new_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_value().data(), static_cast<int>(this->new_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.ConfigChange.new_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_value(), target);
  }

  // .google.api.ChangeType change_type = 4;
  if (this->change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->change_type(), target);
  }

  // repeated .google.api.Advice advices = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->advices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->advices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.ConfigChange)
  return target;
}

size_t ConfigChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.ConfigChange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.Advice advices = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->advices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->advices(static_cast<int>(i)));
    }
  }

  // string element = 1;
  if (this->element().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->element());
  }

  // string old_value = 2;
  if (this->old_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->old_value());
  }

  // string new_value = 3;
  if (this->new_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_value());
  }

  // .google.api.ChangeType change_type = 4;
  if (this->change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.ConfigChange)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.ConfigChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.ConfigChange)
    MergeFrom(*source);
  }
}

void ConfigChange::MergeFrom(const ConfigChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.ConfigChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  advices_.MergeFrom(from.advices_);
  if (from.element().size() > 0) {

    element_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.element_);
  }
  if (from.old_value().size() > 0) {

    old_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_value_);
  }
  if (from.new_value().size() > 0) {

    new_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_value_);
  }
  if (from.change_type() != 0) {
    set_change_type(from.change_type());
  }
}

void ConfigChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.ConfigChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigChange::CopyFrom(const ConfigChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.ConfigChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigChange::IsInitialized() const {
  return true;
}

void ConfigChange::Swap(ConfigChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigChange::InternalSwap(ConfigChange* other) {
  using std::swap;
  CastToBase(&advices_)->InternalSwap(CastToBase(&other->advices_));
  element_.Swap(&other->element_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  old_value_.Swap(&other->old_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_value_.Swap(&other->new_value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(change_type_, other->change_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConfigChange::GetMetadata() const {
  protobuf_google_2fapi_2fconfig_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fconfig_5fchange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Advice::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Advice::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Advice::Advice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fconfig_5fchange_2eproto::scc_info_Advice.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Advice)
}
Advice::Advice(const Advice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Advice)
}

void Advice::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Advice::~Advice() {
  // @@protoc_insertion_point(destructor:google.api.Advice)
  SharedDtor();
}

void Advice::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Advice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Advice::descriptor() {
  ::protobuf_google_2fapi_2fconfig_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fconfig_5fchange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Advice& Advice::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fconfig_5fchange_2eproto::scc_info_Advice.base);
  return *internal_default_instance();
}


void Advice::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Advice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Advice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Advice)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Advice.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Advice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Advice)
  return false;
#undef DO_
}

void Advice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Advice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Advice.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Advice)
}

::google::protobuf::uint8* Advice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Advice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Advice.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Advice)
  return target;
}

size_t Advice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Advice)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Advice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Advice)
  GOOGLE_DCHECK_NE(&from, this);
  const Advice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Advice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Advice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Advice)
    MergeFrom(*source);
  }
}

void Advice::MergeFrom(const Advice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Advice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void Advice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Advice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Advice::CopyFrom(const Advice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Advice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Advice::IsInitialized() const {
  return true;
}

void Advice::Swap(Advice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Advice::InternalSwap(Advice* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Advice::GetMetadata() const {
  protobuf_google_2fapi_2fconfig_5fchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fconfig_5fchange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::ConfigChange* Arena::CreateMaybeMessage< ::google::api::ConfigChange >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::ConfigChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Advice* Arena::CreateMaybeMessage< ::google::api::Advice >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Advice >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
