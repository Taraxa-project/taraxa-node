// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/distribution.proto

#ifndef PROTOBUF_INCLUDED_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto
#define PROTOBUF_INCLUDED_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto 

namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class Distribution;
class DistributionDefaultTypeInternal;
extern DistributionDefaultTypeInternal _Distribution_default_instance_;
class Distribution_ExplicitBuckets;
class Distribution_ExplicitBucketsDefaultTypeInternal;
extern Distribution_ExplicitBucketsDefaultTypeInternal _Distribution_ExplicitBuckets_default_instance_;
class Distribution_ExponentialBuckets;
class Distribution_ExponentialBucketsDefaultTypeInternal;
extern Distribution_ExponentialBucketsDefaultTypeInternal _Distribution_ExponentialBuckets_default_instance_;
class Distribution_LinearBuckets;
class Distribution_LinearBucketsDefaultTypeInternal;
extern Distribution_LinearBucketsDefaultTypeInternal _Distribution_LinearBuckets_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::api::servicecontrol::v1::Distribution* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::Distribution>(Arena*);
template<> ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::Distribution_ExplicitBuckets>(Arena*);
template<> ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::Distribution_ExponentialBuckets>(Arena*);
template<> ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::Distribution_LinearBuckets>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

// ===================================================================

class Distribution_LinearBuckets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.Distribution.LinearBuckets) */ {
 public:
  Distribution_LinearBuckets();
  virtual ~Distribution_LinearBuckets();

  Distribution_LinearBuckets(const Distribution_LinearBuckets& from);

  inline Distribution_LinearBuckets& operator=(const Distribution_LinearBuckets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_LinearBuckets(Distribution_LinearBuckets&& from) noexcept
    : Distribution_LinearBuckets() {
    *this = ::std::move(from);
  }

  inline Distribution_LinearBuckets& operator=(Distribution_LinearBuckets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_LinearBuckets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_LinearBuckets* internal_default_instance() {
    return reinterpret_cast<const Distribution_LinearBuckets*>(
               &_Distribution_LinearBuckets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Distribution_LinearBuckets* other);
  void Swap(Distribution_LinearBuckets* other);
  friend void swap(Distribution_LinearBuckets& a, Distribution_LinearBuckets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_LinearBuckets* New() const final {
    return CreateMaybeMessage<Distribution_LinearBuckets>(NULL);
  }

  Distribution_LinearBuckets* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_LinearBuckets>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_LinearBuckets& from);
  void MergeFrom(const Distribution_LinearBuckets& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_LinearBuckets* other);
  protected:
  explicit Distribution_LinearBuckets(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  double width() const;
  void set_width(double value);

  // double offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  double offset() const;
  void set_offset(double value);

  // int32 num_finite_buckets = 1;
  void clear_num_finite_buckets();
  static const int kNumFiniteBucketsFieldNumber = 1;
  ::google::protobuf::int32 num_finite_buckets() const;
  void set_num_finite_buckets(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution.LinearBuckets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double width_;
  double offset_;
  ::google::protobuf::int32 num_finite_buckets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_ExponentialBuckets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.Distribution.ExponentialBuckets) */ {
 public:
  Distribution_ExponentialBuckets();
  virtual ~Distribution_ExponentialBuckets();

  Distribution_ExponentialBuckets(const Distribution_ExponentialBuckets& from);

  inline Distribution_ExponentialBuckets& operator=(const Distribution_ExponentialBuckets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_ExponentialBuckets(Distribution_ExponentialBuckets&& from) noexcept
    : Distribution_ExponentialBuckets() {
    *this = ::std::move(from);
  }

  inline Distribution_ExponentialBuckets& operator=(Distribution_ExponentialBuckets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_ExponentialBuckets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_ExponentialBuckets* internal_default_instance() {
    return reinterpret_cast<const Distribution_ExponentialBuckets*>(
               &_Distribution_ExponentialBuckets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(Distribution_ExponentialBuckets* other);
  void Swap(Distribution_ExponentialBuckets* other);
  friend void swap(Distribution_ExponentialBuckets& a, Distribution_ExponentialBuckets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_ExponentialBuckets* New() const final {
    return CreateMaybeMessage<Distribution_ExponentialBuckets>(NULL);
  }

  Distribution_ExponentialBuckets* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_ExponentialBuckets>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_ExponentialBuckets& from);
  void MergeFrom(const Distribution_ExponentialBuckets& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_ExponentialBuckets* other);
  protected:
  explicit Distribution_ExponentialBuckets(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double growth_factor = 2;
  void clear_growth_factor();
  static const int kGrowthFactorFieldNumber = 2;
  double growth_factor() const;
  void set_growth_factor(double value);

  // double scale = 3;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  double scale() const;
  void set_scale(double value);

  // int32 num_finite_buckets = 1;
  void clear_num_finite_buckets();
  static const int kNumFiniteBucketsFieldNumber = 1;
  ::google::protobuf::int32 num_finite_buckets() const;
  void set_num_finite_buckets(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double growth_factor_;
  double scale_;
  ::google::protobuf::int32 num_finite_buckets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_ExplicitBuckets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.Distribution.ExplicitBuckets) */ {
 public:
  Distribution_ExplicitBuckets();
  virtual ~Distribution_ExplicitBuckets();

  Distribution_ExplicitBuckets(const Distribution_ExplicitBuckets& from);

  inline Distribution_ExplicitBuckets& operator=(const Distribution_ExplicitBuckets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_ExplicitBuckets(Distribution_ExplicitBuckets&& from) noexcept
    : Distribution_ExplicitBuckets() {
    *this = ::std::move(from);
  }

  inline Distribution_ExplicitBuckets& operator=(Distribution_ExplicitBuckets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_ExplicitBuckets& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_ExplicitBuckets* internal_default_instance() {
    return reinterpret_cast<const Distribution_ExplicitBuckets*>(
               &_Distribution_ExplicitBuckets_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Distribution_ExplicitBuckets* other);
  void Swap(Distribution_ExplicitBuckets* other);
  friend void swap(Distribution_ExplicitBuckets& a, Distribution_ExplicitBuckets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_ExplicitBuckets* New() const final {
    return CreateMaybeMessage<Distribution_ExplicitBuckets>(NULL);
  }

  Distribution_ExplicitBuckets* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_ExplicitBuckets>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_ExplicitBuckets& from);
  void MergeFrom(const Distribution_ExplicitBuckets& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_ExplicitBuckets* other);
  protected:
  explicit Distribution_ExplicitBuckets(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double bounds = 1;
  int bounds_size() const;
  void clear_bounds();
  static const int kBoundsFieldNumber = 1;
  double bounds(int index) const;
  void set_bounds(int index, double value);
  void add_bounds(double value);
  const ::google::protobuf::RepeatedField< double >&
      bounds() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_bounds();

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< double > bounds_;
  mutable int _bounds_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.Distribution) */ {
 public:
  Distribution();
  virtual ~Distribution();

  Distribution(const Distribution& from);

  inline Distribution& operator=(const Distribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution(Distribution&& from) noexcept
    : Distribution() {
    *this = ::std::move(from);
  }

  inline Distribution& operator=(Distribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution& default_instance();

  enum BucketOptionCase {
    kLinearBuckets = 7,
    kExponentialBuckets = 8,
    kExplicitBuckets = 9,
    BUCKET_OPTION_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution* internal_default_instance() {
    return reinterpret_cast<const Distribution*>(
               &_Distribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(Distribution* other);
  void Swap(Distribution* other);
  friend void swap(Distribution& a, Distribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution* New() const final {
    return CreateMaybeMessage<Distribution>(NULL);
  }

  Distribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution& from);
  void MergeFrom(const Distribution& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution* other);
  protected:
  explicit Distribution(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Distribution_LinearBuckets LinearBuckets;
  typedef Distribution_ExponentialBuckets ExponentialBuckets;
  typedef Distribution_ExplicitBuckets ExplicitBuckets;

  // accessors -------------------------------------------------------

  // repeated int64 bucket_counts = 6;
  int bucket_counts_size() const;
  void clear_bucket_counts();
  static const int kBucketCountsFieldNumber = 6;
  ::google::protobuf::int64 bucket_counts(int index) const;
  void set_bucket_counts(int index, ::google::protobuf::int64 value);
  void add_bucket_counts(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bucket_counts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bucket_counts();

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // double mean = 2;
  void clear_mean();
  static const int kMeanFieldNumber = 2;
  double mean() const;
  void set_mean(double value);

  // double minimum = 3;
  void clear_minimum();
  static const int kMinimumFieldNumber = 3;
  double minimum() const;
  void set_minimum(double value);

  // double maximum = 4;
  void clear_maximum();
  static const int kMaximumFieldNumber = 4;
  double maximum() const;
  void set_maximum(double value);

  // double sum_of_squared_deviation = 5;
  void clear_sum_of_squared_deviation();
  static const int kSumOfSquaredDeviationFieldNumber = 5;
  double sum_of_squared_deviation() const;
  void set_sum_of_squared_deviation(double value);

  // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  bool has_linear_buckets() const;
  void clear_linear_buckets();
  static const int kLinearBucketsFieldNumber = 7;
  private:
  const ::google::api::servicecontrol::v1::Distribution_LinearBuckets& _internal_linear_buckets() const;
  public:
  const ::google::api::servicecontrol::v1::Distribution_LinearBuckets& linear_buckets() const;
  ::google::api::servicecontrol::v1::Distribution_LinearBuckets* release_linear_buckets();
  ::google::api::servicecontrol::v1::Distribution_LinearBuckets* mutable_linear_buckets();
  void set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets);
  void unsafe_arena_set_allocated_linear_buckets(
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets);
  ::google::api::servicecontrol::v1::Distribution_LinearBuckets* unsafe_arena_release_linear_buckets();

  // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  bool has_exponential_buckets() const;
  void clear_exponential_buckets();
  static const int kExponentialBucketsFieldNumber = 8;
  private:
  const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets& _internal_exponential_buckets() const;
  public:
  const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets& exponential_buckets() const;
  ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* release_exponential_buckets();
  ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* mutable_exponential_buckets();
  void set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets);
  void unsafe_arena_set_allocated_exponential_buckets(
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets);
  ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* unsafe_arena_release_exponential_buckets();

  // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  bool has_explicit_buckets() const;
  void clear_explicit_buckets();
  static const int kExplicitBucketsFieldNumber = 9;
  private:
  const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets& _internal_explicit_buckets() const;
  public:
  const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets& explicit_buckets() const;
  ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* release_explicit_buckets();
  ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* mutable_explicit_buckets();
  void set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets);
  void unsafe_arena_set_allocated_explicit_buckets(
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets);
  ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* unsafe_arena_release_explicit_buckets();

  void clear_bucket_option();
  BucketOptionCase bucket_option_case() const;
  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.Distribution)
 private:
  void set_has_linear_buckets();
  void set_has_exponential_buckets();
  void set_has_explicit_buckets();

  inline bool has_bucket_option() const;
  inline void clear_has_bucket_option();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bucket_counts_;
  mutable int _bucket_counts_cached_byte_size_;
  ::google::protobuf::int64 count_;
  double mean_;
  double minimum_;
  double maximum_;
  double sum_of_squared_deviation_;
  union BucketOptionUnion {
    BucketOptionUnion() {}
    ::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets_;
    ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets_;
    ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets_;
  } bucket_option_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Distribution_LinearBuckets

// int32 num_finite_buckets = 1;
inline void Distribution_LinearBuckets::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
inline ::google::protobuf::int32 Distribution_LinearBuckets::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.num_finite_buckets)
  return num_finite_buckets_;
}
inline void Distribution_LinearBuckets::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.num_finite_buckets)
}

// double width = 2;
inline void Distribution_LinearBuckets::clear_width() {
  width_ = 0;
}
inline double Distribution_LinearBuckets::width() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.width)
  return width_;
}
inline void Distribution_LinearBuckets::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.width)
}

// double offset = 3;
inline void Distribution_LinearBuckets::clear_offset() {
  offset_ = 0;
}
inline double Distribution_LinearBuckets::offset() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.LinearBuckets.offset)
  return offset_;
}
inline void Distribution_LinearBuckets::set_offset(double value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.LinearBuckets.offset)
}

// -------------------------------------------------------------------

// Distribution_ExponentialBuckets

// int32 num_finite_buckets = 1;
inline void Distribution_ExponentialBuckets::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
inline ::google::protobuf::int32 Distribution_ExponentialBuckets::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.num_finite_buckets)
  return num_finite_buckets_;
}
inline void Distribution_ExponentialBuckets::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.num_finite_buckets)
}

// double growth_factor = 2;
inline void Distribution_ExponentialBuckets::clear_growth_factor() {
  growth_factor_ = 0;
}
inline double Distribution_ExponentialBuckets::growth_factor() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.growth_factor)
  return growth_factor_;
}
inline void Distribution_ExponentialBuckets::set_growth_factor(double value) {
  
  growth_factor_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.growth_factor)
}

// double scale = 3;
inline void Distribution_ExponentialBuckets::clear_scale() {
  scale_ = 0;
}
inline double Distribution_ExponentialBuckets::scale() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.scale)
  return scale_;
}
inline void Distribution_ExponentialBuckets::set_scale(double value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExponentialBuckets.scale)
}

// -------------------------------------------------------------------

// Distribution_ExplicitBuckets

// repeated double bounds = 1;
inline int Distribution_ExplicitBuckets::bounds_size() const {
  return bounds_.size();
}
inline void Distribution_ExplicitBuckets::clear_bounds() {
  bounds_.Clear();
}
inline double Distribution_ExplicitBuckets::bounds(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return bounds_.Get(index);
}
inline void Distribution_ExplicitBuckets::set_bounds(int index, double value) {
  bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
}
inline void Distribution_ExplicitBuckets::add_bounds(double value) {
  bounds_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
}
inline const ::google::protobuf::RepeatedField< double >&
Distribution_ExplicitBuckets::bounds() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return bounds_;
}
inline ::google::protobuf::RepeatedField< double >*
Distribution_ExplicitBuckets::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.Distribution.ExplicitBuckets.bounds)
  return &bounds_;
}

// -------------------------------------------------------------------

// Distribution

// int64 count = 1;
inline void Distribution::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Distribution::count() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.count)
  return count_;
}
inline void Distribution::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.count)
}

// double mean = 2;
inline void Distribution::clear_mean() {
  mean_ = 0;
}
inline double Distribution::mean() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.mean)
  return mean_;
}
inline void Distribution::set_mean(double value) {
  
  mean_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.mean)
}

// double minimum = 3;
inline void Distribution::clear_minimum() {
  minimum_ = 0;
}
inline double Distribution::minimum() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.minimum)
  return minimum_;
}
inline void Distribution::set_minimum(double value) {
  
  minimum_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.minimum)
}

// double maximum = 4;
inline void Distribution::clear_maximum() {
  maximum_ = 0;
}
inline double Distribution::maximum() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.maximum)
  return maximum_;
}
inline void Distribution::set_maximum(double value) {
  
  maximum_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.maximum)
}

// double sum_of_squared_deviation = 5;
inline void Distribution::clear_sum_of_squared_deviation() {
  sum_of_squared_deviation_ = 0;
}
inline double Distribution::sum_of_squared_deviation() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.sum_of_squared_deviation)
  return sum_of_squared_deviation_;
}
inline void Distribution::set_sum_of_squared_deviation(double value) {
  
  sum_of_squared_deviation_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.sum_of_squared_deviation)
}

// repeated int64 bucket_counts = 6;
inline int Distribution::bucket_counts_size() const {
  return bucket_counts_.size();
}
inline void Distribution::clear_bucket_counts() {
  bucket_counts_.Clear();
}
inline ::google::protobuf::int64 Distribution::bucket_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return bucket_counts_.Get(index);
}
inline void Distribution::set_bucket_counts(int index, ::google::protobuf::int64 value) {
  bucket_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.Distribution.bucket_counts)
}
inline void Distribution::add_bucket_counts(::google::protobuf::int64 value) {
  bucket_counts_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.Distribution.bucket_counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Distribution::bucket_counts() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return bucket_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Distribution::mutable_bucket_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.Distribution.bucket_counts)
  return &bucket_counts_;
}

// .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
inline bool Distribution::has_linear_buckets() const {
  return bucket_option_case() == kLinearBuckets;
}
inline void Distribution::set_has_linear_buckets() {
  _oneof_case_[0] = kLinearBuckets;
}
inline void Distribution::clear_linear_buckets() {
  if (has_linear_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.linear_buckets_;
    }
    clear_has_bucket_option();
  }
}
inline const ::google::api::servicecontrol::v1::Distribution_LinearBuckets& Distribution::_internal_linear_buckets() const {
  return *bucket_option_.linear_buckets_;
}
inline ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::release_linear_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_bucket_option();
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = bucket_option_.linear_buckets_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    bucket_option_.linear_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::servicecontrol::v1::Distribution_LinearBuckets& Distribution::linear_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.linear_buckets)
  return has_linear_buckets()
      ? *bucket_option_.linear_buckets_
      : *reinterpret_cast< ::google::api::servicecontrol::v1::Distribution_LinearBuckets*>(&::google::api::servicecontrol::v1::_Distribution_LinearBuckets_default_instance_);
}
inline ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::unsafe_arena_release_linear_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_LinearBuckets* temp = bucket_option_.linear_buckets_;
    bucket_option_.linear_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Distribution::unsafe_arena_set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets) {
  clear_bucket_option();
  if (linear_buckets) {
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.linear_buckets)
}
inline ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Distribution::mutable_linear_buckets() {
  if (!has_linear_buckets()) {
    clear_bucket_option();
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.linear_buckets)
  return bucket_option_.linear_buckets_;
}

// .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
inline bool Distribution::has_exponential_buckets() const {
  return bucket_option_case() == kExponentialBuckets;
}
inline void Distribution::set_has_exponential_buckets() {
  _oneof_case_[0] = kExponentialBuckets;
}
inline void Distribution::clear_exponential_buckets() {
  if (has_exponential_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.exponential_buckets_;
    }
    clear_has_bucket_option();
  }
}
inline const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets& Distribution::_internal_exponential_buckets() const {
  return *bucket_option_.exponential_buckets_;
}
inline ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::release_exponential_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_bucket_option();
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = bucket_option_.exponential_buckets_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    bucket_option_.exponential_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets& Distribution::exponential_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  return has_exponential_buckets()
      ? *bucket_option_.exponential_buckets_
      : *reinterpret_cast< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets*>(&::google::api::servicecontrol::v1::_Distribution_ExponentialBuckets_default_instance_);
}
inline ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::unsafe_arena_release_exponential_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* temp = bucket_option_.exponential_buckets_;
    bucket_option_.exponential_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Distribution::unsafe_arena_set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets) {
  clear_bucket_option();
  if (exponential_buckets) {
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.exponential_buckets)
}
inline ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Distribution::mutable_exponential_buckets() {
  if (!has_exponential_buckets()) {
    clear_bucket_option();
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.exponential_buckets)
  return bucket_option_.exponential_buckets_;
}

// .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
inline bool Distribution::has_explicit_buckets() const {
  return bucket_option_case() == kExplicitBuckets;
}
inline void Distribution::set_has_explicit_buckets() {
  _oneof_case_[0] = kExplicitBuckets;
}
inline void Distribution::clear_explicit_buckets() {
  if (has_explicit_buckets()) {
    if (GetArenaNoVirtual() == NULL) {
      delete bucket_option_.explicit_buckets_;
    }
    clear_has_bucket_option();
  }
}
inline const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets& Distribution::_internal_explicit_buckets() const {
  return *bucket_option_.explicit_buckets_;
}
inline ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::release_explicit_buckets() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_bucket_option();
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = bucket_option_.explicit_buckets_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    bucket_option_.explicit_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets& Distribution::explicit_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  return has_explicit_buckets()
      ? *bucket_option_.explicit_buckets_
      : *reinterpret_cast< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets*>(&::google::api::servicecontrol::v1::_Distribution_ExplicitBuckets_default_instance_);
}
inline ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::unsafe_arena_release_explicit_buckets() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_bucket_option();
    ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* temp = bucket_option_.explicit_buckets_;
    bucket_option_.explicit_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Distribution::unsafe_arena_set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets) {
  clear_bucket_option();
  if (explicit_buckets) {
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.Distribution.explicit_buckets)
}
inline ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Distribution::mutable_explicit_buckets() {
  if (!has_explicit_buckets()) {
    clear_bucket_option();
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.Distribution.explicit_buckets)
  return bucket_option_.explicit_buckets_;
}

inline bool Distribution::has_bucket_option() const {
  return bucket_option_case() != BUCKET_OPTION_NOT_SET;
}
inline void Distribution::clear_has_bucket_option() {
  _oneof_case_[0] = BUCKET_OPTION_NOT_SET;
}
inline Distribution::BucketOptionCase Distribution::bucket_option_case() const {
  return Distribution::BucketOptionCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto
