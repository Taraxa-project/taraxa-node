// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/service_controller.proto

#include "google/api/servicecontrol/v1/service_controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CheckError;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto
namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Operation;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto
namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CheckResponse_ConsumerInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckResponse_CheckInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReportResponse_ReportError;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class CheckRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckRequest>
      _instance;
} _CheckRequest_default_instance_;
class CheckResponse_CheckInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse_CheckInfo>
      _instance;
} _CheckResponse_CheckInfo_default_instance_;
class CheckResponse_ConsumerInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse_ConsumerInfo>
      _instance;
} _CheckResponse_ConsumerInfo_default_instance_;
class CheckResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse>
      _instance;
} _CheckResponse_default_instance_;
class ReportRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportRequest>
      _instance;
} _ReportRequest_default_instance_;
class ReportResponse_ReportErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportResponse_ReportError>
      _instance;
} _ReportResponse_ReportError_default_instance_;
class ReportResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportResponse>
      _instance;
} _ReportResponse_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto {
static void InitDefaultsCheckRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_CheckRequest_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::CheckRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::CheckRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckRequest}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto::scc_info_Operation.base,}};

static void InitDefaultsCheckResponse_CheckInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_CheckResponse_CheckInfo_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::CheckResponse_CheckInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::CheckResponse_CheckInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckResponse_CheckInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckResponse_CheckInfo}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_ConsumerInfo.base,}};

static void InitDefaultsCheckResponse_ConsumerInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_CheckResponse_ConsumerInfo_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckResponse_ConsumerInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckResponse_ConsumerInfo}, {}};

static void InitDefaultsCheckResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_CheckResponse_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::CheckResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::CheckResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CheckResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCheckResponse}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto::scc_info_CheckError.base,
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_CheckInfo.base,}};

static void InitDefaultsReportRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_ReportRequest_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::ReportRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::ReportRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportRequest}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto::scc_info_Operation.base,}};

static void InitDefaultsReportResponse_ReportError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_ReportResponse_ReportError_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::ReportResponse_ReportError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::ReportResponse_ReportError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportResponse_ReportError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportResponse_ReportError}, {
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsReportResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_ReportResponse_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::ReportResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::ReportResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportResponse}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse_ReportError.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CheckRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse_CheckInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse_ConsumerInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportResponse_ReportError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportResponse.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckRequest, service_config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_CheckInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_CheckInfo, consumer_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo, project_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, check_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, service_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::CheckResponse, check_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, operations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportRequest, service_config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse_ReportError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse_ReportError, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse_ReportError, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, report_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::ReportResponse, service_config_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::servicecontrol::v1::CheckRequest)},
  { 8, -1, sizeof(::google::api::servicecontrol::v1::CheckResponse_CheckInfo)},
  { 14, -1, sizeof(::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo)},
  { 20, -1, sizeof(::google::api::servicecontrol::v1::CheckResponse)},
  { 29, -1, sizeof(::google::api::servicecontrol::v1::ReportRequest)},
  { 37, -1, sizeof(::google::api::servicecontrol::v1::ReportResponse_ReportError)},
  { 44, -1, sizeof(::google::api::servicecontrol::v1::ReportResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_CheckRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_CheckResponse_CheckInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_CheckResponse_ConsumerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_CheckResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_ReportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_ReportResponse_ReportError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_ReportResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/servicecontrol/v1/service_controller.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5google/api/servicecontrol/v1/service_c"
      "ontroller.proto\022\034google.api.servicecontr"
      "ol.v1\032\034google/api/annotations.proto\032.goo"
      "gle/api/servicecontrol/v1/check_error.pr"
      "oto\032,google/api/servicecontrol/v1/operat"
      "ion.proto\032\027google/rpc/status.proto\"{\n\014Ch"
      "eckRequest\022\024\n\014service_name\030\001 \001(\t\022:\n\toper"
      "ation\030\002 \001(\0132\'.google.api.servicecontrol."
      "v1.Operation\022\031\n\021service_config_id\030\004 \001(\t\""
      "\321\002\n\rCheckResponse\022\024\n\014operation_id\030\001 \001(\t\022"
      ">\n\014check_errors\030\002 \003(\0132(.google.api.servi"
      "cecontrol.v1.CheckError\022\031\n\021service_confi"
      "g_id\030\005 \001(\t\022I\n\ncheck_info\030\006 \001(\01325.google."
      "api.servicecontrol.v1.CheckResponse.Chec"
      "kInfo\032\\\n\tCheckInfo\022O\n\rconsumer_info\030\002 \001("
      "\01328.google.api.servicecontrol.v1.CheckRe"
      "sponse.ConsumerInfo\032&\n\014ConsumerInfo\022\026\n\016p"
      "roject_number\030\001 \001(\003\"}\n\rReportRequest\022\024\n\014"
      "service_name\030\001 \001(\t\022;\n\noperations\030\002 \003(\0132\'"
      ".google.api.servicecontrol.v1.Operation\022"
      "\031\n\021service_config_id\030\003 \001(\t\"\305\001\n\016ReportRes"
      "ponse\022O\n\rreport_errors\030\001 \003(\01328.google.ap"
      "i.servicecontrol.v1.ReportResponse.Repor"
      "tError\022\031\n\021service_config_id\030\002 \001(\t\032G\n\013Rep"
      "ortError\022\024\n\014operation_id\030\001 \001(\t\022\"\n\006status"
      "\030\002 \001(\0132\022.google.rpc.Status2\271\002\n\021ServiceCo"
      "ntroller\022\216\001\n\005Check\022*.google.api.servicec"
      "ontrol.v1.CheckRequest\032+.google.api.serv"
      "icecontrol.v1.CheckResponse\",\202\323\344\223\002&\"!/v1"
      "/services/{service_name}:check:\001*\022\222\001\n\006Re"
      "port\022+.google.api.servicecontrol.v1.Repo"
      "rtRequest\032,.google.api.servicecontrol.v1"
      ".ReportResponse\"-\202\323\344\223\002\'\"\"/v1/services/{s"
      "ervice_name}:report:\001*B\222\001\n com.google.ap"
      "i.servicecontrol.v1B\026ServiceControllerPr"
      "otoP\001ZJgoogle.golang.org/genproto/google"
      "apis/api/servicecontrol/v1;servicecontro"
      "l\370\001\001\242\002\004GASCb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1499);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/service_controller.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fcheck_5ferror_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2foperation_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

// ===================================================================

void CheckRequest::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_CheckRequest_default_instance_._instance.get_mutable()->operation_ = const_cast< ::google::api::servicecontrol::v1::Operation*>(
      ::google::api::servicecontrol::v1::Operation::internal_default_instance());
}
void CheckRequest::unsafe_arena_set_allocated_operation(
    ::google::api::servicecontrol::v1::Operation* operation) {
  if (GetArenaNoVirtual() == NULL) {
    delete operation_;
  }
  operation_ = operation;
  if (operation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckRequest.operation)
}
void CheckRequest::clear_operation() {
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckRequest::kServiceNameFieldNumber;
const int CheckRequest::kOperationFieldNumber;
const int CheckRequest::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckRequest::CheckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.CheckRequest)
}
CheckRequest::CheckRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name(),
      GetArenaNoVirtual());
  }
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_config_id().size() > 0) {
    service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_config_id(),
      GetArenaNoVirtual());
  }
  if (from.has_operation()) {
    operation_ = new ::google::api::servicecontrol::v1::Operation(*from.operation_);
  } else {
    operation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckRequest)
}

void CheckRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_ = NULL;
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckRequest)
  SharedDtor();
}

void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete operation_;
}

void CheckRequest::ArenaDtor(void* object) {
  CheckRequest* _this = reinterpret_cast< CheckRequest* >(object);
  (void)_this;
}
void CheckRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckRequest& CheckRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckRequest.base);
  return *internal_default_instance();
}


void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && operation_ != NULL) {
    delete operation_;
  }
  operation_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.CheckRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Operation operation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_config_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckRequest.service_config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.CheckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.CheckRequest)
  return false;
#undef DO_
}

void CheckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_operation(), output);
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->service_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.CheckRequest)
}

::google::protobuf::uint8* CheckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_operation(), deterministic, target);
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckRequest.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->service_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  // .google.api.servicecontrol.v1.Operation operation = 2;
  if (this->has_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *operation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.CheckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.CheckRequest)
    MergeFrom(*source);
  }
}

void CheckRequest::MergeFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {
    set_service_name(from.service_name());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
  if (from.has_operation()) {
    mutable_operation()->::google::api::servicecontrol::v1::Operation::MergeFrom(from.operation());
  }
}

void CheckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::Swap(CheckRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckRequest::UnsafeArenaSwap(CheckRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_config_id_.Swap(&other->service_config_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operation_, other->operation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckResponse_CheckInfo::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_CheckResponse_CheckInfo_default_instance_._instance.get_mutable()->consumer_info_ = const_cast< ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo*>(
      ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo::internal_default_instance());
}
void CheckResponse_CheckInfo::unsafe_arena_set_allocated_consumer_info(
    ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo* consumer_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete consumer_info_;
  }
  consumer_info_ = consumer_info;
  if (consumer_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckResponse.CheckInfo.consumer_info)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse_CheckInfo::kConsumerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse_CheckInfo::CheckResponse_CheckInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_CheckInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
}
CheckResponse_CheckInfo::CheckResponse_CheckInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_CheckInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
}
CheckResponse_CheckInfo::CheckResponse_CheckInfo(const CheckResponse_CheckInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_consumer_info()) {
    consumer_info_ = new ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo(*from.consumer_info_);
  } else {
    consumer_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
}

void CheckResponse_CheckInfo::SharedCtor() {
  consumer_info_ = NULL;
}

CheckResponse_CheckInfo::~CheckResponse_CheckInfo() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  SharedDtor();
}

void CheckResponse_CheckInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete consumer_info_;
}

void CheckResponse_CheckInfo::ArenaDtor(void* object) {
  CheckResponse_CheckInfo* _this = reinterpret_cast< CheckResponse_CheckInfo* >(object);
  (void)_this;
}
void CheckResponse_CheckInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse_CheckInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse_CheckInfo::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse_CheckInfo& CheckResponse_CheckInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_CheckInfo.base);
  return *internal_default_instance();
}


void CheckResponse_CheckInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && consumer_info_ != NULL) {
    delete consumer_info_;
  }
  consumer_info_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckResponse_CheckInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consumer_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  return false;
#undef DO_
}

void CheckResponse_CheckInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
  if (this->has_consumer_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_consumer_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
}

::google::protobuf::uint8* CheckResponse_CheckInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
  if (this->has_consumer_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_consumer_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  return target;
}

size_t CheckResponse_CheckInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.servicecontrol.v1.CheckResponse.ConsumerInfo consumer_info = 2;
  if (this->has_consumer_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *consumer_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse_CheckInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse_CheckInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse_CheckInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
    MergeFrom(*source);
  }
}

void CheckResponse_CheckInfo::MergeFrom(const CheckResponse_CheckInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_consumer_info()) {
    mutable_consumer_info()->::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo::MergeFrom(from.consumer_info());
  }
}

void CheckResponse_CheckInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse_CheckInfo::CopyFrom(const CheckResponse_CheckInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse.CheckInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse_CheckInfo::IsInitialized() const {
  return true;
}

void CheckResponse_CheckInfo::Swap(CheckResponse_CheckInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse_CheckInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse_CheckInfo::UnsafeArenaSwap(CheckResponse_CheckInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse_CheckInfo::InternalSwap(CheckResponse_CheckInfo* other) {
  using std::swap;
  swap(consumer_info_, other->consumer_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse_CheckInfo::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckResponse_ConsumerInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse_ConsumerInfo::kProjectNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse_ConsumerInfo::CheckResponse_ConsumerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_ConsumerInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
}
CheckResponse_ConsumerInfo::CheckResponse_ConsumerInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_ConsumerInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
}
CheckResponse_ConsumerInfo::CheckResponse_ConsumerInfo(const CheckResponse_ConsumerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  project_number_ = from.project_number_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
}

void CheckResponse_ConsumerInfo::SharedCtor() {
  project_number_ = GOOGLE_LONGLONG(0);
}

CheckResponse_ConsumerInfo::~CheckResponse_ConsumerInfo() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  SharedDtor();
}

void CheckResponse_ConsumerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CheckResponse_ConsumerInfo::ArenaDtor(void* object) {
  CheckResponse_ConsumerInfo* _this = reinterpret_cast< CheckResponse_ConsumerInfo* >(object);
  (void)_this;
}
void CheckResponse_ConsumerInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse_ConsumerInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse_ConsumerInfo::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse_ConsumerInfo& CheckResponse_ConsumerInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse_ConsumerInfo.base);
  return *internal_default_instance();
}


void CheckResponse_ConsumerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_number_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CheckResponse_ConsumerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 project_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &project_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  return false;
#undef DO_
}

void CheckResponse_ConsumerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 project_number = 1;
  if (this->project_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->project_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
}

::google::protobuf::uint8* CheckResponse_ConsumerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 project_number = 1;
  if (this->project_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->project_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  return target;
}

size_t CheckResponse_ConsumerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 project_number = 1;
  if (this->project_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->project_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse_ConsumerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse_ConsumerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse_ConsumerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
    MergeFrom(*source);
  }
}

void CheckResponse_ConsumerInfo::MergeFrom(const CheckResponse_ConsumerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.project_number() != 0) {
    set_project_number(from.project_number());
  }
}

void CheckResponse_ConsumerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse_ConsumerInfo::CopyFrom(const CheckResponse_ConsumerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse.ConsumerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse_ConsumerInfo::IsInitialized() const {
  return true;
}

void CheckResponse_ConsumerInfo::Swap(CheckResponse_ConsumerInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse_ConsumerInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse_ConsumerInfo::UnsafeArenaSwap(CheckResponse_ConsumerInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse_ConsumerInfo::InternalSwap(CheckResponse_ConsumerInfo* other) {
  using std::swap;
  swap(project_number_, other->project_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse_ConsumerInfo::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckResponse::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_CheckResponse_default_instance_._instance.get_mutable()->check_info_ = const_cast< ::google::api::servicecontrol::v1::CheckResponse_CheckInfo*>(
      ::google::api::servicecontrol::v1::CheckResponse_CheckInfo::internal_default_instance());
}
void CheckResponse::clear_check_errors() {
  check_errors_.Clear();
}
void CheckResponse::unsafe_arena_set_allocated_check_info(
    ::google::api::servicecontrol::v1::CheckResponse_CheckInfo* check_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete check_info_;
  }
  check_info_ = check_info;
  if (check_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.CheckResponse.check_info)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse::kOperationIdFieldNumber;
const int CheckResponse::kCheckErrorsFieldNumber;
const int CheckResponse::kServiceConfigIdFieldNumber;
const int CheckResponse::kCheckInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse::CheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.CheckResponse)
}
CheckResponse::CheckResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  check_errors_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      check_errors_(from.check_errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id(),
      GetArenaNoVirtual());
  }
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_config_id().size() > 0) {
    service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_config_id(),
      GetArenaNoVirtual());
  }
  if (from.has_check_info()) {
    check_info_ = new ::google::api::servicecontrol::v1::CheckResponse_CheckInfo(*from.check_info_);
  } else {
    check_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.CheckResponse)
}

void CheckResponse::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  check_info_ = NULL;
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.CheckResponse)
  SharedDtor();
}

void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete check_info_;
}

void CheckResponse::ArenaDtor(void* object) {
  CheckResponse* _this = reinterpret_cast< CheckResponse* >(object);
  (void)_this;
}
void CheckResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse& CheckResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_CheckResponse.base);
  return *internal_default_instance();
}


void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  check_errors_.Clear();
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && check_info_ != NULL) {
    delete check_info_;
  }
  check_info_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.CheckResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckResponse.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_check_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_config_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.CheckResponse.service_config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_check_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.CheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.CheckResponse)
  return false;
#undef DO_
}

void CheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->check_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->check_errors(static_cast<int>(i)),
      output);
  }

  // string service_config_id = 5;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->service_config_id(), output);
  }

  // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
  if (this->has_check_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_check_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.CheckResponse)
}

::google::protobuf::uint8* CheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->check_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->check_errors(static_cast<int>(i)), deterministic, target);
  }

  // string service_config_id = 5;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.CheckResponse.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->service_config_id(), target);
  }

  // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
  if (this->has_check_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_check_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.CheckResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicecontrol.v1.CheckError check_errors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->check_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->check_errors(static_cast<int>(i)));
    }
  }

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string service_config_id = 5;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  // .google.api.servicecontrol.v1.CheckResponse.CheckInfo check_info = 6;
  if (this->has_check_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *check_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.CheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.CheckResponse)
    MergeFrom(*source);
  }
}

void CheckResponse::MergeFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  check_errors_.MergeFrom(from.check_errors_);
  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
  if (from.has_check_info()) {
    mutable_check_info()->::google::api::servicecontrol::v1::CheckResponse_CheckInfo::MergeFrom(from.check_info());
  }
}

void CheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::Swap(CheckResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse::UnsafeArenaSwap(CheckResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  CastToBase(&check_errors_)->InternalSwap(CastToBase(&other->check_errors_));
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_config_id_.Swap(&other->service_config_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(check_info_, other->check_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportRequest::InitAsDefaultInstance() {
}
void ReportRequest::clear_operations() {
  operations_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportRequest::kServiceNameFieldNumber;
const int ReportRequest::kOperationsFieldNumber;
const int ReportRequest::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportRequest::ReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.ReportRequest)
}
ReportRequest::ReportRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  operations_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportRequest)
}
ReportRequest::ReportRequest(const ReportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      operations_(from.operations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name(),
      GetArenaNoVirtual());
  }
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_config_id().size() > 0) {
    service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_config_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportRequest)
}

void ReportRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReportRequest::~ReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportRequest)
  SharedDtor();
}

void ReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReportRequest::ArenaDtor(void* object) {
  ReportRequest* _this = reinterpret_cast< ReportRequest* >(object);
  (void)_this;
}
void ReportRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportRequest& ReportRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportRequest.base);
  return *internal_default_instance();
}


void ReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operations_.Clear();
  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.ReportRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicecontrol.v1.Operation operations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportRequest.service_config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.ReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.ReportRequest)
  return false;
#undef DO_
}

void ReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->operations(static_cast<int>(i)),
      output);
  }

  // string service_config_id = 3;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.ReportRequest)
}

::google::protobuf::uint8* ReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->operations(static_cast<int>(i)), deterministic, target);
  }

  // string service_config_id = 3;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportRequest.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportRequest)
  return target;
}

size_t ReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicecontrol.v1.Operation operations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->operations(static_cast<int>(i)));
    }
  }

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string service_config_id = 3;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.ReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.ReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.ReportRequest)
    MergeFrom(*source);
  }
}

void ReportRequest::MergeFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  operations_.MergeFrom(from.operations_);
  if (from.service_name().size() > 0) {
    set_service_name(from.service_name());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void ReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportRequest::CopyFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportRequest::IsInitialized() const {
  return true;
}

void ReportRequest::Swap(ReportRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReportRequest::UnsafeArenaSwap(ReportRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportRequest::InternalSwap(ReportRequest* other) {
  using std::swap;
  CastToBase(&operations_)->InternalSwap(CastToBase(&other->operations_));
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_config_id_.Swap(&other->service_config_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportResponse_ReportError::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_ReportResponse_ReportError_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void ReportResponse_ReportError::unsafe_arena_set_allocated_status(
    ::google::rpc::Status* status) {
  if (GetArenaNoVirtual() == NULL) {
    delete status_;
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.ReportResponse.ReportError.status)
}
void ReportResponse_ReportError::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportResponse_ReportError::kOperationIdFieldNumber;
const int ReportResponse_ReportError::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportResponse_ReportError::ReportResponse_ReportError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse_ReportError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}
ReportResponse_ReportError::ReportResponse_ReportError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse_ReportError.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}
ReportResponse_ReportError::ReportResponse_ReportError(const ReportResponse_ReportError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id(),
      GetArenaNoVirtual());
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
}

void ReportResponse_ReportError::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
}

ReportResponse_ReportError::~ReportResponse_ReportError() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportResponse.ReportError)
  SharedDtor();
}

void ReportResponse_ReportError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void ReportResponse_ReportError::ArenaDtor(void* object) {
  ReportResponse_ReportError* _this = reinterpret_cast< ReportResponse_ReportError* >(object);
  (void)_this;
}
void ReportResponse_ReportError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportResponse_ReportError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportResponse_ReportError::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportResponse_ReportError& ReportResponse_ReportError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse_ReportError.base);
  return *internal_default_instance();
}


void ReportResponse_ReportError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ReportResponse_ReportError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return false;
#undef DO_
}

void ReportResponse_ReportError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.ReportResponse.ReportError)
}

::google::protobuf::uint8* ReportResponse_ReportError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.ReportError.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportResponse.ReportError)
  return target;
}

size_t ReportResponse_ReportError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportResponse_ReportError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportResponse_ReportError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportResponse_ReportError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.ReportResponse.ReportError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.ReportResponse.ReportError)
    MergeFrom(*source);
  }
}

void ReportResponse_ReportError::MergeFrom(const ReportResponse_ReportError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void ReportResponse_ReportError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportResponse_ReportError::CopyFrom(const ReportResponse_ReportError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportResponse.ReportError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportResponse_ReportError::IsInitialized() const {
  return true;
}

void ReportResponse_ReportError::Swap(ReportResponse_ReportError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportResponse_ReportError* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReportResponse_ReportError::UnsafeArenaSwap(ReportResponse_ReportError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportResponse_ReportError::InternalSwap(ReportResponse_ReportError* other) {
  using std::swap;
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportResponse_ReportError::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportResponse::kReportErrorsFieldNumber;
const int ReportResponse::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportResponse::ReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.ReportResponse)
}
ReportResponse::ReportResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  report_errors_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.ReportResponse)
}
ReportResponse::ReportResponse(const ReportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      report_errors_(from.report_errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_config_id().size() > 0) {
    service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_config_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.ReportResponse)
}

void ReportResponse::SharedCtor() {
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReportResponse::~ReportResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.ReportResponse)
  SharedDtor();
}

void ReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  service_config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReportResponse::ArenaDtor(void* object) {
  ReportResponse* _this = reinterpret_cast< ReportResponse* >(object);
  (void)_this;
}
void ReportResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportResponse& ReportResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::scc_info_ReportResponse.base);
  return *internal_default_instance();
}


void ReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  report_errors_.Clear();
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool ReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.ReportResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_report_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.ReportResponse.service_config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.ReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.ReportResponse)
  return false;
#undef DO_
}

void ReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->report_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->report_errors(static_cast<int>(i)),
      output);
  }

  // string service_config_id = 2;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.ReportResponse)
}

::google::protobuf::uint8* ReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->report_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->report_errors(static_cast<int>(i)), deterministic, target);
  }

  // string service_config_id = 2;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.ReportResponse.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.ReportResponse)
  return target;
}

size_t ReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.ReportResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicecontrol.v1.ReportResponse.ReportError report_errors = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->report_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->report_errors(static_cast<int>(i)));
    }
  }

  // string service_config_id = 2;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.ReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.ReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.ReportResponse)
    MergeFrom(*source);
  }
}

void ReportResponse::MergeFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.ReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  report_errors_.MergeFrom(from.report_errors_);
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void ReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportResponse::CopyFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportResponse::IsInitialized() const {
  return true;
}

void ReportResponse::Swap(ReportResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReportResponse::UnsafeArenaSwap(ReportResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportResponse::InternalSwap(ReportResponse* other) {
  using std::swap;
  CastToBase(&report_errors_)->InternalSwap(CastToBase(&other->report_errors_));
  service_config_id_.Swap(&other->service_config_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fservice_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::CheckRequest* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::CheckResponse_CheckInfo* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckResponse_CheckInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckResponse_CheckInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckResponse_ConsumerInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::CheckResponse* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::CheckResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::ReportRequest* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::ReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::ReportRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::ReportResponse_ReportError* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::ReportResponse_ReportError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::ReportResponse_ReportError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::ReportResponse* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::ReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::ReportResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
