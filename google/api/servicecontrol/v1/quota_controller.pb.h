// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/quota_controller.proto

#ifndef PROTOBUF_INCLUDED_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto
#define PROTOBUF_INCLUDED_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/api/servicecontrol/v1/metric_value.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto 

namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class AllocateQuotaRequest;
class AllocateQuotaRequestDefaultTypeInternal;
extern AllocateQuotaRequestDefaultTypeInternal _AllocateQuotaRequest_default_instance_;
class AllocateQuotaResponse;
class AllocateQuotaResponseDefaultTypeInternal;
extern AllocateQuotaResponseDefaultTypeInternal _AllocateQuotaResponse_default_instance_;
class QuotaError;
class QuotaErrorDefaultTypeInternal;
extern QuotaErrorDefaultTypeInternal _QuotaError_default_instance_;
class QuotaOperation;
class QuotaOperationDefaultTypeInternal;
extern QuotaOperationDefaultTypeInternal _QuotaOperation_default_instance_;
class QuotaOperation_LabelsEntry_DoNotUse;
class QuotaOperation_LabelsEntry_DoNotUseDefaultTypeInternal;
extern QuotaOperation_LabelsEntry_DoNotUseDefaultTypeInternal _QuotaOperation_LabelsEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::api::servicecontrol::v1::AllocateQuotaRequest* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::AllocateQuotaRequest>(Arena*);
template<> ::google::api::servicecontrol::v1::AllocateQuotaResponse* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::AllocateQuotaResponse>(Arena*);
template<> ::google::api::servicecontrol::v1::QuotaError* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::QuotaError>(Arena*);
template<> ::google::api::servicecontrol::v1::QuotaOperation* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::QuotaOperation>(Arena*);
template<> ::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

enum QuotaOperation_QuotaMode {
  QuotaOperation_QuotaMode_UNSPECIFIED = 0,
  QuotaOperation_QuotaMode_NORMAL = 1,
  QuotaOperation_QuotaMode_BEST_EFFORT = 2,
  QuotaOperation_QuotaMode_CHECK_ONLY = 3,
  QuotaOperation_QuotaMode_QuotaOperation_QuotaMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuotaOperation_QuotaMode_QuotaOperation_QuotaMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuotaOperation_QuotaMode_IsValid(int value);
const QuotaOperation_QuotaMode QuotaOperation_QuotaMode_QuotaMode_MIN = QuotaOperation_QuotaMode_UNSPECIFIED;
const QuotaOperation_QuotaMode QuotaOperation_QuotaMode_QuotaMode_MAX = QuotaOperation_QuotaMode_CHECK_ONLY;
const int QuotaOperation_QuotaMode_QuotaMode_ARRAYSIZE = QuotaOperation_QuotaMode_QuotaMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuotaOperation_QuotaMode_descriptor();
inline const ::std::string& QuotaOperation_QuotaMode_Name(QuotaOperation_QuotaMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuotaOperation_QuotaMode_descriptor(), value);
}
inline bool QuotaOperation_QuotaMode_Parse(
    const ::std::string& name, QuotaOperation_QuotaMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuotaOperation_QuotaMode>(
    QuotaOperation_QuotaMode_descriptor(), name, value);
}
enum QuotaError_Code {
  QuotaError_Code_UNSPECIFIED = 0,
  QuotaError_Code_RESOURCE_EXHAUSTED = 8,
  QuotaError_Code_BILLING_NOT_ACTIVE = 107,
  QuotaError_Code_PROJECT_DELETED = 108,
  QuotaError_Code_API_KEY_INVALID = 105,
  QuotaError_Code_API_KEY_EXPIRED = 112,
  QuotaError_Code_QuotaError_Code_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  QuotaError_Code_QuotaError_Code_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool QuotaError_Code_IsValid(int value);
const QuotaError_Code QuotaError_Code_Code_MIN = QuotaError_Code_UNSPECIFIED;
const QuotaError_Code QuotaError_Code_Code_MAX = QuotaError_Code_API_KEY_EXPIRED;
const int QuotaError_Code_Code_ARRAYSIZE = QuotaError_Code_Code_MAX + 1;

const ::google::protobuf::EnumDescriptor* QuotaError_Code_descriptor();
inline const ::std::string& QuotaError_Code_Name(QuotaError_Code value) {
  return ::google::protobuf::internal::NameOfEnum(
    QuotaError_Code_descriptor(), value);
}
inline bool QuotaError_Code_Parse(
    const ::std::string& name, QuotaError_Code* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QuotaError_Code>(
    QuotaError_Code_descriptor(), name, value);
}
// ===================================================================

class AllocateQuotaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.AllocateQuotaRequest) */ {
 public:
  AllocateQuotaRequest();
  virtual ~AllocateQuotaRequest();

  AllocateQuotaRequest(const AllocateQuotaRequest& from);

  inline AllocateQuotaRequest& operator=(const AllocateQuotaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllocateQuotaRequest(AllocateQuotaRequest&& from) noexcept
    : AllocateQuotaRequest() {
    *this = ::std::move(from);
  }

  inline AllocateQuotaRequest& operator=(AllocateQuotaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocateQuotaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllocateQuotaRequest* internal_default_instance() {
    return reinterpret_cast<const AllocateQuotaRequest*>(
               &_AllocateQuotaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(AllocateQuotaRequest* other);
  void Swap(AllocateQuotaRequest* other);
  friend void swap(AllocateQuotaRequest& a, AllocateQuotaRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllocateQuotaRequest* New() const final {
    return CreateMaybeMessage<AllocateQuotaRequest>(NULL);
  }

  AllocateQuotaRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllocateQuotaRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllocateQuotaRequest& from);
  void MergeFrom(const AllocateQuotaRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllocateQuotaRequest* other);
  protected:
  explicit AllocateQuotaRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string service_name = 1;
  void clear_service_name();
  static const int kServiceNameFieldNumber = 1;
  const ::std::string& service_name() const;
  void set_service_name(const ::std::string& value);
  #if LANG_CXX11
  void set_service_name(::std::string&& value);
  #endif
  void set_service_name(const char* value);
  void set_service_name(const char* value, size_t size);
  ::std::string* mutable_service_name();
  ::std::string* release_service_name();
  void set_allocated_service_name(::std::string* service_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_service_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_service_name(
      ::std::string* service_name);

  // string service_config_id = 4;
  void clear_service_config_id();
  static const int kServiceConfigIdFieldNumber = 4;
  const ::std::string& service_config_id() const;
  void set_service_config_id(const ::std::string& value);
  #if LANG_CXX11
  void set_service_config_id(::std::string&& value);
  #endif
  void set_service_config_id(const char* value);
  void set_service_config_id(const char* value, size_t size);
  ::std::string* mutable_service_config_id();
  ::std::string* release_service_config_id();
  void set_allocated_service_config_id(::std::string* service_config_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_service_config_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_service_config_id(
      ::std::string* service_config_id);

  // .google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
  bool has_allocate_operation() const;
  void clear_allocate_operation();
  static const int kAllocateOperationFieldNumber = 2;
  private:
  const ::google::api::servicecontrol::v1::QuotaOperation& _internal_allocate_operation() const;
  public:
  const ::google::api::servicecontrol::v1::QuotaOperation& allocate_operation() const;
  ::google::api::servicecontrol::v1::QuotaOperation* release_allocate_operation();
  ::google::api::servicecontrol::v1::QuotaOperation* mutable_allocate_operation();
  void set_allocated_allocate_operation(::google::api::servicecontrol::v1::QuotaOperation* allocate_operation);
  void unsafe_arena_set_allocated_allocate_operation(
      ::google::api::servicecontrol::v1::QuotaOperation* allocate_operation);
  ::google::api::servicecontrol::v1::QuotaOperation* unsafe_arena_release_allocate_operation();

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.AllocateQuotaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr service_name_;
  ::google::protobuf::internal::ArenaStringPtr service_config_id_;
  ::google::api::servicecontrol::v1::QuotaOperation* allocate_operation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuotaOperation_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<QuotaOperation_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<QuotaOperation_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  QuotaOperation_LabelsEntry_DoNotUse();
  QuotaOperation_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const QuotaOperation_LabelsEntry_DoNotUse& other);
  static const QuotaOperation_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const QuotaOperation_LabelsEntry_DoNotUse*>(&_QuotaOperation_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class QuotaOperation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.QuotaOperation) */ {
 public:
  QuotaOperation();
  virtual ~QuotaOperation();

  QuotaOperation(const QuotaOperation& from);

  inline QuotaOperation& operator=(const QuotaOperation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuotaOperation(QuotaOperation&& from) noexcept
    : QuotaOperation() {
    *this = ::std::move(from);
  }

  inline QuotaOperation& operator=(QuotaOperation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaOperation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaOperation* internal_default_instance() {
    return reinterpret_cast<const QuotaOperation*>(
               &_QuotaOperation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(QuotaOperation* other);
  void Swap(QuotaOperation* other);
  friend void swap(QuotaOperation& a, QuotaOperation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuotaOperation* New() const final {
    return CreateMaybeMessage<QuotaOperation>(NULL);
  }

  QuotaOperation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuotaOperation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuotaOperation& from);
  void MergeFrom(const QuotaOperation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuotaOperation* other);
  protected:
  explicit QuotaOperation(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  typedef QuotaOperation_QuotaMode QuotaMode;
  static const QuotaMode UNSPECIFIED =
    QuotaOperation_QuotaMode_UNSPECIFIED;
  static const QuotaMode NORMAL =
    QuotaOperation_QuotaMode_NORMAL;
  static const QuotaMode BEST_EFFORT =
    QuotaOperation_QuotaMode_BEST_EFFORT;
  static const QuotaMode CHECK_ONLY =
    QuotaOperation_QuotaMode_CHECK_ONLY;
  static inline bool QuotaMode_IsValid(int value) {
    return QuotaOperation_QuotaMode_IsValid(value);
  }
  static const QuotaMode QuotaMode_MIN =
    QuotaOperation_QuotaMode_QuotaMode_MIN;
  static const QuotaMode QuotaMode_MAX =
    QuotaOperation_QuotaMode_QuotaMode_MAX;
  static const int QuotaMode_ARRAYSIZE =
    QuotaOperation_QuotaMode_QuotaMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  QuotaMode_descriptor() {
    return QuotaOperation_QuotaMode_descriptor();
  }
  static inline const ::std::string& QuotaMode_Name(QuotaMode value) {
    return QuotaOperation_QuotaMode_Name(value);
  }
  static inline bool QuotaMode_Parse(const ::std::string& name,
      QuotaMode* value) {
    return QuotaOperation_QuotaMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, string> labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
  int quota_metrics_size() const;
  void clear_quota_metrics();
  static const int kQuotaMetricsFieldNumber = 5;
  ::google::api::servicecontrol::v1::MetricValueSet* mutable_quota_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >*
      mutable_quota_metrics();
  const ::google::api::servicecontrol::v1::MetricValueSet& quota_metrics(int index) const;
  ::google::api::servicecontrol::v1::MetricValueSet* add_quota_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >&
      quota_metrics() const;

  // string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_operation_id(::std::string&& value);
  #endif
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_operation_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_operation_id(
      ::std::string* operation_id);

  // string method_name = 2;
  void clear_method_name();
  static const int kMethodNameFieldNumber = 2;
  const ::std::string& method_name() const;
  void set_method_name(const ::std::string& value);
  #if LANG_CXX11
  void set_method_name(::std::string&& value);
  #endif
  void set_method_name(const char* value);
  void set_method_name(const char* value, size_t size);
  ::std::string* mutable_method_name();
  ::std::string* release_method_name();
  void set_allocated_method_name(::std::string* method_name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_method_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_method_name(
      ::std::string* method_name);

  // string consumer_id = 3;
  void clear_consumer_id();
  static const int kConsumerIdFieldNumber = 3;
  const ::std::string& consumer_id() const;
  void set_consumer_id(const ::std::string& value);
  #if LANG_CXX11
  void set_consumer_id(::std::string&& value);
  #endif
  void set_consumer_id(const char* value);
  void set_consumer_id(const char* value, size_t size);
  ::std::string* mutable_consumer_id();
  ::std::string* release_consumer_id();
  void set_allocated_consumer_id(::std::string* consumer_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_consumer_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_consumer_id(
      ::std::string* consumer_id);

  // .google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
  void clear_quota_mode();
  static const int kQuotaModeFieldNumber = 6;
  ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode quota_mode() const;
  void set_quota_mode(::google::api::servicecontrol::v1::QuotaOperation_QuotaMode value);

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.QuotaOperation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::MapField<
      QuotaOperation_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet > quota_metrics_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr method_name_;
  ::google::protobuf::internal::ArenaStringPtr consumer_id_;
  int quota_mode_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllocateQuotaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.AllocateQuotaResponse) */ {
 public:
  AllocateQuotaResponse();
  virtual ~AllocateQuotaResponse();

  AllocateQuotaResponse(const AllocateQuotaResponse& from);

  inline AllocateQuotaResponse& operator=(const AllocateQuotaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllocateQuotaResponse(AllocateQuotaResponse&& from) noexcept
    : AllocateQuotaResponse() {
    *this = ::std::move(from);
  }

  inline AllocateQuotaResponse& operator=(AllocateQuotaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocateQuotaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AllocateQuotaResponse* internal_default_instance() {
    return reinterpret_cast<const AllocateQuotaResponse*>(
               &_AllocateQuotaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(AllocateQuotaResponse* other);
  void Swap(AllocateQuotaResponse* other);
  friend void swap(AllocateQuotaResponse& a, AllocateQuotaResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllocateQuotaResponse* New() const final {
    return CreateMaybeMessage<AllocateQuotaResponse>(NULL);
  }

  AllocateQuotaResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AllocateQuotaResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AllocateQuotaResponse& from);
  void MergeFrom(const AllocateQuotaResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AllocateQuotaResponse* other);
  protected:
  explicit AllocateQuotaResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
  int allocate_errors_size() const;
  void clear_allocate_errors();
  static const int kAllocateErrorsFieldNumber = 2;
  ::google::api::servicecontrol::v1::QuotaError* mutable_allocate_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::QuotaError >*
      mutable_allocate_errors();
  const ::google::api::servicecontrol::v1::QuotaError& allocate_errors(int index) const;
  ::google::api::servicecontrol::v1::QuotaError* add_allocate_errors();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::QuotaError >&
      allocate_errors() const;

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
  int quota_metrics_size() const;
  void clear_quota_metrics();
  static const int kQuotaMetricsFieldNumber = 3;
  ::google::api::servicecontrol::v1::MetricValueSet* mutable_quota_metrics(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >*
      mutable_quota_metrics();
  const ::google::api::servicecontrol::v1::MetricValueSet& quota_metrics(int index) const;
  ::google::api::servicecontrol::v1::MetricValueSet* add_quota_metrics();
  const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >&
      quota_metrics() const;

  // string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_operation_id(::std::string&& value);
  #endif
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_operation_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_operation_id(
      ::std::string* operation_id);

  // string service_config_id = 4;
  void clear_service_config_id();
  static const int kServiceConfigIdFieldNumber = 4;
  const ::std::string& service_config_id() const;
  void set_service_config_id(const ::std::string& value);
  #if LANG_CXX11
  void set_service_config_id(::std::string&& value);
  #endif
  void set_service_config_id(const char* value);
  void set_service_config_id(const char* value, size_t size);
  ::std::string* mutable_service_config_id();
  ::std::string* release_service_config_id();
  void set_allocated_service_config_id(::std::string* service_config_id);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_service_config_id();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_service_config_id(
      ::std::string* service_config_id);

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.AllocateQuotaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::QuotaError > allocate_errors_;
  ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet > quota_metrics_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr service_config_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QuotaError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.servicecontrol.v1.QuotaError) */ {
 public:
  QuotaError();
  virtual ~QuotaError();

  QuotaError(const QuotaError& from);

  inline QuotaError& operator=(const QuotaError& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QuotaError(QuotaError&& from) noexcept
    : QuotaError() {
    *this = ::std::move(from);
  }

  inline QuotaError& operator=(QuotaError&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const QuotaError& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QuotaError* internal_default_instance() {
    return reinterpret_cast<const QuotaError*>(
               &_QuotaError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(QuotaError* other);
  void Swap(QuotaError* other);
  friend void swap(QuotaError& a, QuotaError& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QuotaError* New() const final {
    return CreateMaybeMessage<QuotaError>(NULL);
  }

  QuotaError* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<QuotaError>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const QuotaError& from);
  void MergeFrom(const QuotaError& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QuotaError* other);
  protected:
  explicit QuotaError(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef QuotaError_Code Code;
  static const Code UNSPECIFIED =
    QuotaError_Code_UNSPECIFIED;
  static const Code RESOURCE_EXHAUSTED =
    QuotaError_Code_RESOURCE_EXHAUSTED;
  static const Code BILLING_NOT_ACTIVE =
    QuotaError_Code_BILLING_NOT_ACTIVE;
  static const Code PROJECT_DELETED =
    QuotaError_Code_PROJECT_DELETED;
  static const Code API_KEY_INVALID =
    QuotaError_Code_API_KEY_INVALID;
  static const Code API_KEY_EXPIRED =
    QuotaError_Code_API_KEY_EXPIRED;
  static inline bool Code_IsValid(int value) {
    return QuotaError_Code_IsValid(value);
  }
  static const Code Code_MIN =
    QuotaError_Code_Code_MIN;
  static const Code Code_MAX =
    QuotaError_Code_Code_MAX;
  static const int Code_ARRAYSIZE =
    QuotaError_Code_Code_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Code_descriptor() {
    return QuotaError_Code_descriptor();
  }
  static inline const ::std::string& Code_Name(Code value) {
    return QuotaError_Code_Name(value);
  }
  static inline bool Code_Parse(const ::std::string& name,
      Code* value) {
    return QuotaError_Code_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string subject = 2;
  void clear_subject();
  static const int kSubjectFieldNumber = 2;
  const ::std::string& subject() const;
  void set_subject(const ::std::string& value);
  #if LANG_CXX11
  void set_subject(::std::string&& value);
  #endif
  void set_subject(const char* value);
  void set_subject(const char* value, size_t size);
  ::std::string* mutable_subject();
  ::std::string* release_subject();
  void set_allocated_subject(::std::string* subject);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_subject();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_subject(
      ::std::string* subject);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_description();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_description(
      ::std::string* description);

  // .google.api.servicecontrol.v1.QuotaError.Code code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::api::servicecontrol::v1::QuotaError_Code code() const;
  void set_code(::google::api::servicecontrol::v1::QuotaError_Code value);

  // @@protoc_insertion_point(class_scope:google.api.servicecontrol.v1.QuotaError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr subject_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  int code_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AllocateQuotaRequest

// string service_name = 1;
inline void AllocateQuotaRequest::clear_service_name() {
  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AllocateQuotaRequest::service_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
  return service_name_.Get();
}
inline void AllocateQuotaRequest::set_service_name(const ::std::string& value) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
}
#if LANG_CXX11
inline void AllocateQuotaRequest::set_service_name(::std::string&& value) {
  
  service_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
}
#endif
inline void AllocateQuotaRequest::set_service_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
}
inline void AllocateQuotaRequest::set_service_name(const char* value,
    size_t size) {
  
  service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
}
inline ::std::string* AllocateQuotaRequest::mutable_service_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
  return service_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AllocateQuotaRequest::release_service_name() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
  
  return service_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AllocateQuotaRequest::set_allocated_service_name(::std::string* service_name) {
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
}
inline ::std::string* AllocateQuotaRequest::unsafe_arena_release_service_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AllocateQuotaRequest::unsafe_arena_set_allocated_service_name(
    ::std::string* service_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_name != NULL) {
    
  } else {
    
  }
  service_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.AllocateQuotaRequest.service_name)
}

// .google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
inline bool AllocateQuotaRequest::has_allocate_operation() const {
  return this != internal_default_instance() && allocate_operation_ != NULL;
}
inline void AllocateQuotaRequest::clear_allocate_operation() {
  if (GetArenaNoVirtual() == NULL && allocate_operation_ != NULL) {
    delete allocate_operation_;
  }
  allocate_operation_ = NULL;
}
inline const ::google::api::servicecontrol::v1::QuotaOperation& AllocateQuotaRequest::_internal_allocate_operation() const {
  return *allocate_operation_;
}
inline const ::google::api::servicecontrol::v1::QuotaOperation& AllocateQuotaRequest::allocate_operation() const {
  const ::google::api::servicecontrol::v1::QuotaOperation* p = allocate_operation_;
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::servicecontrol::v1::QuotaOperation*>(
      &::google::api::servicecontrol::v1::_QuotaOperation_default_instance_);
}
inline ::google::api::servicecontrol::v1::QuotaOperation* AllocateQuotaRequest::release_allocate_operation() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation)
  
  ::google::api::servicecontrol::v1::QuotaOperation* temp = allocate_operation_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  allocate_operation_ = NULL;
  return temp;
}
inline ::google::api::servicecontrol::v1::QuotaOperation* AllocateQuotaRequest::unsafe_arena_release_allocate_operation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation)
  
  ::google::api::servicecontrol::v1::QuotaOperation* temp = allocate_operation_;
  allocate_operation_ = NULL;
  return temp;
}
inline ::google::api::servicecontrol::v1::QuotaOperation* AllocateQuotaRequest::mutable_allocate_operation() {
  
  if (allocate_operation_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::servicecontrol::v1::QuotaOperation>(GetArenaNoVirtual());
    allocate_operation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation)
  return allocate_operation_;
}
inline void AllocateQuotaRequest::set_allocated_allocate_operation(::google::api::servicecontrol::v1::QuotaOperation* allocate_operation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete allocate_operation_;
  }
  if (allocate_operation) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(allocate_operation);
    if (message_arena != submessage_arena) {
      allocate_operation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, allocate_operation, submessage_arena);
    }
    
  } else {
    
  }
  allocate_operation_ = allocate_operation;
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation)
}

// string service_config_id = 4;
inline void AllocateQuotaRequest::clear_service_config_id() {
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AllocateQuotaRequest::service_config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
  return service_config_id_.Get();
}
inline void AllocateQuotaRequest::set_service_config_id(const ::std::string& value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
}
#if LANG_CXX11
inline void AllocateQuotaRequest::set_service_config_id(::std::string&& value) {
  
  service_config_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
}
#endif
inline void AllocateQuotaRequest::set_service_config_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
}
inline void AllocateQuotaRequest::set_service_config_id(const char* value,
    size_t size) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
}
inline ::std::string* AllocateQuotaRequest::mutable_service_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
  return service_config_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AllocateQuotaRequest::release_service_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
  
  return service_config_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AllocateQuotaRequest::set_allocated_service_config_id(::std::string* service_config_id) {
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_config_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
}
inline ::std::string* AllocateQuotaRequest::unsafe_arena_release_service_config_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_config_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AllocateQuotaRequest::unsafe_arena_set_allocated_service_config_id(
    ::std::string* service_config_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_config_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QuotaOperation

// string operation_id = 1;
inline void QuotaOperation::clear_operation_id() {
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QuotaOperation::operation_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaOperation.operation_id)
  return operation_id_.Get();
}
inline void QuotaOperation::set_operation_id(const ::std::string& value) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaOperation.operation_id)
}
#if LANG_CXX11
inline void QuotaOperation::set_operation_id(::std::string&& value) {
  
  operation_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.QuotaOperation.operation_id)
}
#endif
inline void QuotaOperation::set_operation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.QuotaOperation.operation_id)
}
inline void QuotaOperation::set_operation_id(const char* value,
    size_t size) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.QuotaOperation.operation_id)
}
inline ::std::string* QuotaOperation::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.QuotaOperation.operation_id)
  return operation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QuotaOperation::release_operation_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.QuotaOperation.operation_id)
  
  return operation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QuotaOperation::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.QuotaOperation.operation_id)
}
inline ::std::string* QuotaOperation::unsafe_arena_release_operation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.QuotaOperation.operation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QuotaOperation::unsafe_arena_set_allocated_operation_id(
    ::std::string* operation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.QuotaOperation.operation_id)
}

// string method_name = 2;
inline void QuotaOperation::clear_method_name() {
  method_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QuotaOperation::method_name() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaOperation.method_name)
  return method_name_.Get();
}
inline void QuotaOperation::set_method_name(const ::std::string& value) {
  
  method_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaOperation.method_name)
}
#if LANG_CXX11
inline void QuotaOperation::set_method_name(::std::string&& value) {
  
  method_name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.QuotaOperation.method_name)
}
#endif
inline void QuotaOperation::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  method_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.QuotaOperation.method_name)
}
inline void QuotaOperation::set_method_name(const char* value,
    size_t size) {
  
  method_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.QuotaOperation.method_name)
}
inline ::std::string* QuotaOperation::mutable_method_name() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.QuotaOperation.method_name)
  return method_name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QuotaOperation::release_method_name() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.QuotaOperation.method_name)
  
  return method_name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QuotaOperation::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    
  } else {
    
  }
  method_name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.QuotaOperation.method_name)
}
inline ::std::string* QuotaOperation::unsafe_arena_release_method_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.QuotaOperation.method_name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return method_name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QuotaOperation::unsafe_arena_set_allocated_method_name(
    ::std::string* method_name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (method_name != NULL) {
    
  } else {
    
  }
  method_name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      method_name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.QuotaOperation.method_name)
}

// string consumer_id = 3;
inline void QuotaOperation::clear_consumer_id() {
  consumer_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QuotaOperation::consumer_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
  return consumer_id_.Get();
}
inline void QuotaOperation::set_consumer_id(const ::std::string& value) {
  
  consumer_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
}
#if LANG_CXX11
inline void QuotaOperation::set_consumer_id(::std::string&& value) {
  
  consumer_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
}
#endif
inline void QuotaOperation::set_consumer_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  consumer_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
}
inline void QuotaOperation::set_consumer_id(const char* value,
    size_t size) {
  
  consumer_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
}
inline ::std::string* QuotaOperation::mutable_consumer_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
  return consumer_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QuotaOperation::release_consumer_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
  
  return consumer_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QuotaOperation::set_allocated_consumer_id(::std::string* consumer_id) {
  if (consumer_id != NULL) {
    
  } else {
    
  }
  consumer_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), consumer_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
}
inline ::std::string* QuotaOperation::unsafe_arena_release_consumer_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return consumer_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QuotaOperation::unsafe_arena_set_allocated_consumer_id(
    ::std::string* consumer_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (consumer_id != NULL) {
    
  } else {
    
  }
  consumer_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      consumer_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.QuotaOperation.consumer_id)
}

// map<string, string> labels = 4;
inline int QuotaOperation::labels_size() const {
  return labels_.size();
}
inline void QuotaOperation::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
QuotaOperation::labels() const {
  // @@protoc_insertion_point(field_map:google.api.servicecontrol.v1.QuotaOperation.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
QuotaOperation::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:google.api.servicecontrol.v1.QuotaOperation.labels)
  return labels_.MutableMap();
}

// repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
inline int QuotaOperation::quota_metrics_size() const {
  return quota_metrics_.size();
}
inline ::google::api::servicecontrol::v1::MetricValueSet* QuotaOperation::mutable_quota_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.QuotaOperation.quota_metrics)
  return quota_metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >*
QuotaOperation::mutable_quota_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.QuotaOperation.quota_metrics)
  return &quota_metrics_;
}
inline const ::google::api::servicecontrol::v1::MetricValueSet& QuotaOperation::quota_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaOperation.quota_metrics)
  return quota_metrics_.Get(index);
}
inline ::google::api::servicecontrol::v1::MetricValueSet* QuotaOperation::add_quota_metrics() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.QuotaOperation.quota_metrics)
  return quota_metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >&
QuotaOperation::quota_metrics() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.QuotaOperation.quota_metrics)
  return quota_metrics_;
}

// .google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
inline void QuotaOperation::clear_quota_mode() {
  quota_mode_ = 0;
}
inline ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode QuotaOperation::quota_mode() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaOperation.quota_mode)
  return static_cast< ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode >(quota_mode_);
}
inline void QuotaOperation::set_quota_mode(::google::api::servicecontrol::v1::QuotaOperation_QuotaMode value) {
  
  quota_mode_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaOperation.quota_mode)
}

// -------------------------------------------------------------------

// AllocateQuotaResponse

// string operation_id = 1;
inline void AllocateQuotaResponse::clear_operation_id() {
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AllocateQuotaResponse::operation_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
  return operation_id_.Get();
}
inline void AllocateQuotaResponse::set_operation_id(const ::std::string& value) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
}
#if LANG_CXX11
inline void AllocateQuotaResponse::set_operation_id(::std::string&& value) {
  
  operation_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
}
#endif
inline void AllocateQuotaResponse::set_operation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
}
inline void AllocateQuotaResponse::set_operation_id(const char* value,
    size_t size) {
  
  operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
}
inline ::std::string* AllocateQuotaResponse::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
  return operation_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AllocateQuotaResponse::release_operation_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
  
  return operation_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AllocateQuotaResponse::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
}
inline ::std::string* AllocateQuotaResponse::unsafe_arena_release_operation_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return operation_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AllocateQuotaResponse::unsafe_arena_set_allocated_operation_id(
    ::std::string* operation_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      operation_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id)
}

// repeated .google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
inline int AllocateQuotaResponse::allocate_errors_size() const {
  return allocate_errors_.size();
}
inline void AllocateQuotaResponse::clear_allocate_errors() {
  allocate_errors_.Clear();
}
inline ::google::api::servicecontrol::v1::QuotaError* AllocateQuotaResponse::mutable_allocate_errors(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaResponse.allocate_errors)
  return allocate_errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::QuotaError >*
AllocateQuotaResponse::mutable_allocate_errors() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.AllocateQuotaResponse.allocate_errors)
  return &allocate_errors_;
}
inline const ::google::api::servicecontrol::v1::QuotaError& AllocateQuotaResponse::allocate_errors(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaResponse.allocate_errors)
  return allocate_errors_.Get(index);
}
inline ::google::api::servicecontrol::v1::QuotaError* AllocateQuotaResponse::add_allocate_errors() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.AllocateQuotaResponse.allocate_errors)
  return allocate_errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::QuotaError >&
AllocateQuotaResponse::allocate_errors() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.AllocateQuotaResponse.allocate_errors)
  return allocate_errors_;
}

// repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
inline int AllocateQuotaResponse::quota_metrics_size() const {
  return quota_metrics_.size();
}
inline ::google::api::servicecontrol::v1::MetricValueSet* AllocateQuotaResponse::mutable_quota_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaResponse.quota_metrics)
  return quota_metrics_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >*
AllocateQuotaResponse::mutable_quota_metrics() {
  // @@protoc_insertion_point(field_mutable_list:google.api.servicecontrol.v1.AllocateQuotaResponse.quota_metrics)
  return &quota_metrics_;
}
inline const ::google::api::servicecontrol::v1::MetricValueSet& AllocateQuotaResponse::quota_metrics(int index) const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaResponse.quota_metrics)
  return quota_metrics_.Get(index);
}
inline ::google::api::servicecontrol::v1::MetricValueSet* AllocateQuotaResponse::add_quota_metrics() {
  // @@protoc_insertion_point(field_add:google.api.servicecontrol.v1.AllocateQuotaResponse.quota_metrics)
  return quota_metrics_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::servicecontrol::v1::MetricValueSet >&
AllocateQuotaResponse::quota_metrics() const {
  // @@protoc_insertion_point(field_list:google.api.servicecontrol.v1.AllocateQuotaResponse.quota_metrics)
  return quota_metrics_;
}

// string service_config_id = 4;
inline void AllocateQuotaResponse::clear_service_config_id() {
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& AllocateQuotaResponse::service_config_id() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
  return service_config_id_.Get();
}
inline void AllocateQuotaResponse::set_service_config_id(const ::std::string& value) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
}
#if LANG_CXX11
inline void AllocateQuotaResponse::set_service_config_id(::std::string&& value) {
  
  service_config_id_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
}
#endif
inline void AllocateQuotaResponse::set_service_config_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
}
inline void AllocateQuotaResponse::set_service_config_id(const char* value,
    size_t size) {
  
  service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
}
inline ::std::string* AllocateQuotaResponse::mutable_service_config_id() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
  return service_config_id_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* AllocateQuotaResponse::release_service_config_id() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
  
  return service_config_id_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void AllocateQuotaResponse::set_allocated_service_config_id(::std::string* service_config_id) {
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_config_id,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
}
inline ::std::string* AllocateQuotaResponse::unsafe_arena_release_service_config_id() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return service_config_id_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void AllocateQuotaResponse::unsafe_arena_set_allocated_service_config_id(
    ::std::string* service_config_id) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (service_config_id != NULL) {
    
  } else {
    
  }
  service_config_id_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      service_config_id, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id)
}

// -------------------------------------------------------------------

// QuotaError

// .google.api.servicecontrol.v1.QuotaError.Code code = 1;
inline void QuotaError::clear_code() {
  code_ = 0;
}
inline ::google::api::servicecontrol::v1::QuotaError_Code QuotaError::code() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaError.code)
  return static_cast< ::google::api::servicecontrol::v1::QuotaError_Code >(code_);
}
inline void QuotaError::set_code(::google::api::servicecontrol::v1::QuotaError_Code value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaError.code)
}

// string subject = 2;
inline void QuotaError::clear_subject() {
  subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QuotaError::subject() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaError.subject)
  return subject_.Get();
}
inline void QuotaError::set_subject(const ::std::string& value) {
  
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaError.subject)
}
#if LANG_CXX11
inline void QuotaError::set_subject(::std::string&& value) {
  
  subject_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.QuotaError.subject)
}
#endif
inline void QuotaError::set_subject(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.QuotaError.subject)
}
inline void QuotaError::set_subject(const char* value,
    size_t size) {
  
  subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.QuotaError.subject)
}
inline ::std::string* QuotaError::mutable_subject() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.QuotaError.subject)
  return subject_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QuotaError::release_subject() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.QuotaError.subject)
  
  return subject_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QuotaError::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    
  } else {
    
  }
  subject_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.QuotaError.subject)
}
inline ::std::string* QuotaError::unsafe_arena_release_subject() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.QuotaError.subject)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return subject_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QuotaError::unsafe_arena_set_allocated_subject(
    ::std::string* subject) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (subject != NULL) {
    
  } else {
    
  }
  subject_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      subject, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.QuotaError.subject)
}

// string description = 3;
inline void QuotaError::clear_description() {
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& QuotaError::description() const {
  // @@protoc_insertion_point(field_get:google.api.servicecontrol.v1.QuotaError.description)
  return description_.Get();
}
inline void QuotaError::set_description(const ::std::string& value) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.servicecontrol.v1.QuotaError.description)
}
#if LANG_CXX11
inline void QuotaError::set_description(::std::string&& value) {
  
  description_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.servicecontrol.v1.QuotaError.description)
}
#endif
inline void QuotaError::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.servicecontrol.v1.QuotaError.description)
}
inline void QuotaError::set_description(const char* value,
    size_t size) {
  
  description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.servicecontrol.v1.QuotaError.description)
}
inline ::std::string* QuotaError::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:google.api.servicecontrol.v1.QuotaError.description)
  return description_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* QuotaError::release_description() {
  // @@protoc_insertion_point(field_release:google.api.servicecontrol.v1.QuotaError.description)
  
  return description_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void QuotaError::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.QuotaError.description)
}
inline ::std::string* QuotaError::unsafe_arena_release_description() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.servicecontrol.v1.QuotaError.description)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return description_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void QuotaError::unsafe_arena_set_allocated_description(
    ::std::string* description) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (description != NULL) {
    
  } else {
    
  }
  description_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      description, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.QuotaError.description)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode>() {
  return ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode_descriptor();
}
template <> struct is_proto_enum< ::google::api::servicecontrol::v1::QuotaError_Code> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::servicecontrol::v1::QuotaError_Code>() {
  return ::google::api::servicecontrol::v1::QuotaError_Code_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto
