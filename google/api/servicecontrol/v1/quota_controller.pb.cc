// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/quota_controller.proto

#include "google/api/servicecontrol/v1/quota_controller.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MetricValueSet;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto
namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QuotaError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QuotaOperation_LabelsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_QuotaOperation;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class AllocateQuotaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateQuotaRequest>
      _instance;
} _AllocateQuotaRequest_default_instance_;
class QuotaOperation_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaOperation_LabelsEntry_DoNotUse>
      _instance;
} _QuotaOperation_LabelsEntry_DoNotUse_default_instance_;
class QuotaOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaOperation>
      _instance;
} _QuotaOperation_default_instance_;
class AllocateQuotaResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllocateQuotaResponse>
      _instance;
} _AllocateQuotaResponse_default_instance_;
class QuotaErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaError>
      _instance;
} _QuotaError_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto {
static void InitDefaultsAllocateQuotaRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_AllocateQuotaRequest_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::AllocateQuotaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::AllocateQuotaRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AllocateQuotaRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAllocateQuotaRequest}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaOperation.base,}};

static void InitDefaultsQuotaOperation_LabelsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_QuotaOperation_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse();
  }
  ::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuotaOperation_LabelsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuotaOperation_LabelsEntry_DoNotUse}, {}};

static void InitDefaultsQuotaOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_QuotaOperation_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::QuotaOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::QuotaOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_QuotaOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsQuotaOperation}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaOperation_LabelsEntry_DoNotUse.base,
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto::scc_info_MetricValueSet.base,}};

static void InitDefaultsAllocateQuotaResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_AllocateQuotaResponse_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::AllocateQuotaResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::AllocateQuotaResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AllocateQuotaResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAllocateQuotaResponse}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaError.base,
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto::scc_info_MetricValueSet.base,}};

static void InitDefaultsQuotaError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_QuotaError_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::QuotaError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::QuotaError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuotaError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuotaError}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AllocateQuotaRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuotaOperation_LabelsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuotaOperation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AllocateQuotaResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QuotaError.base);
}

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaRequest, allocate_operation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaRequest, service_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, consumer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, quota_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaOperation, quota_mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaResponse, operation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaResponse, allocate_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaResponse, quota_metrics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::AllocateQuotaResponse, service_config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaError, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaError, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::QuotaError, description_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::servicecontrol::v1::AllocateQuotaRequest)},
  { 8, 15, sizeof(::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse)},
  { 17, -1, sizeof(::google::api::servicecontrol::v1::QuotaOperation)},
  { 28, -1, sizeof(::google::api::servicecontrol::v1::AllocateQuotaResponse)},
  { 37, -1, sizeof(::google::api::servicecontrol::v1::QuotaError)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_AllocateQuotaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_QuotaOperation_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_QuotaOperation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_AllocateQuotaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_QuotaError_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/servicecontrol/v1/quota_controller.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n3google/api/servicecontrol/v1/quota_con"
      "troller.proto\022\034google.api.servicecontrol"
      ".v1\032\034google/api/annotations.proto\032/googl"
      "e/api/servicecontrol/v1/metric_value.pro"
      "to\"\221\001\n\024AllocateQuotaRequest\022\024\n\014service_n"
      "ame\030\001 \001(\t\022H\n\022allocate_operation\030\002 \001(\0132,."
      "google.api.servicecontrol.v1.QuotaOperat"
      "ion\022\031\n\021service_config_id\030\004 \001(\t\"\245\003\n\016Quota"
      "Operation\022\024\n\014operation_id\030\001 \001(\t\022\023\n\013metho"
      "d_name\030\002 \001(\t\022\023\n\013consumer_id\030\003 \001(\t\022H\n\006lab"
      "els\030\004 \003(\01328.google.api.servicecontrol.v1"
      ".QuotaOperation.LabelsEntry\022C\n\rquota_met"
      "rics\030\005 \003(\0132,.google.api.servicecontrol.v"
      "1.MetricValueSet\022J\n\nquota_mode\030\006 \001(\01626.g"
      "oogle.api.servicecontrol.v1.QuotaOperati"
      "on.QuotaMode\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"I\n\tQuotaMode\022\017\n\013UNSP"
      "ECIFIED\020\000\022\n\n\006NORMAL\020\001\022\017\n\013BEST_EFFORT\020\002\022\016"
      "\n\nCHECK_ONLY\020\003\"\320\001\n\025AllocateQuotaResponse"
      "\022\024\n\014operation_id\030\001 \001(\t\022A\n\017allocate_error"
      "s\030\002 \003(\0132(.google.api.servicecontrol.v1.Q"
      "uotaError\022C\n\rquota_metrics\030\003 \003(\0132,.googl"
      "e.api.servicecontrol.v1.MetricValueSet\022\031"
      "\n\021service_config_id\030\004 \001(\t\"\370\001\n\nQuotaError"
      "\022;\n\004code\030\001 \001(\0162-.google.api.servicecontr"
      "ol.v1.QuotaError.Code\022\017\n\007subject\030\002 \001(\t\022\023"
      "\n\013description\030\003 \001(\t\"\206\001\n\004Code\022\017\n\013UNSPECIF"
      "IED\020\000\022\026\n\022RESOURCE_EXHAUSTED\020\010\022\026\n\022BILLING"
      "_NOT_ACTIVE\020k\022\023\n\017PROJECT_DELETED\020l\022\023\n\017AP"
      "I_KEY_INVALID\020i\022\023\n\017API_KEY_EXPIRED\020p2\302\001\n"
      "\017QuotaController\022\256\001\n\rAllocateQuota\0222.goo"
      "gle.api.servicecontrol.v1.AllocateQuotaR"
      "equest\0323.google.api.servicecontrol.v1.Al"
      "locateQuotaResponse\"4\202\323\344\223\002.\")/v1/service"
      "s/{service_name}:allocateQuota:\001*B\211\001\n co"
      "m.google.api.servicecontrol.v1B\024QuotaCon"
      "trollerProtoP\001ZJgoogle.golang.org/genpro"
      "to/googleapis/api/servicecontrol/v1;serv"
      "icecontrol\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1541);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/quota_controller.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
const ::google::protobuf::EnumDescriptor* QuotaOperation_QuotaMode_descriptor() {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_enum_descriptors[0];
}
bool QuotaOperation_QuotaMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuotaOperation_QuotaMode QuotaOperation::UNSPECIFIED;
const QuotaOperation_QuotaMode QuotaOperation::NORMAL;
const QuotaOperation_QuotaMode QuotaOperation::BEST_EFFORT;
const QuotaOperation_QuotaMode QuotaOperation::CHECK_ONLY;
const QuotaOperation_QuotaMode QuotaOperation::QuotaMode_MIN;
const QuotaOperation_QuotaMode QuotaOperation::QuotaMode_MAX;
const int QuotaOperation::QuotaMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* QuotaError_Code_descriptor() {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_enum_descriptors[1];
}
bool QuotaError_Code_IsValid(int value) {
  switch (value) {
    case 0:
    case 8:
    case 105:
    case 107:
    case 108:
    case 112:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const QuotaError_Code QuotaError::UNSPECIFIED;
const QuotaError_Code QuotaError::RESOURCE_EXHAUSTED;
const QuotaError_Code QuotaError::BILLING_NOT_ACTIVE;
const QuotaError_Code QuotaError::PROJECT_DELETED;
const QuotaError_Code QuotaError::API_KEY_INVALID;
const QuotaError_Code QuotaError::API_KEY_EXPIRED;
const QuotaError_Code QuotaError::Code_MIN;
const QuotaError_Code QuotaError::Code_MAX;
const int QuotaError::Code_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void AllocateQuotaRequest::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_AllocateQuotaRequest_default_instance_._instance.get_mutable()->allocate_operation_ = const_cast< ::google::api::servicecontrol::v1::QuotaOperation*>(
      ::google::api::servicecontrol::v1::QuotaOperation::internal_default_instance());
}
void AllocateQuotaRequest::unsafe_arena_set_allocated_allocate_operation(
    ::google::api::servicecontrol::v1::QuotaOperation* allocate_operation) {
  if (GetArenaNoVirtual() == NULL) {
    delete allocate_operation_;
  }
  allocate_operation_ = allocate_operation;
  if (allocate_operation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.AllocateQuotaRequest.allocate_operation)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateQuotaRequest::kServiceNameFieldNumber;
const int AllocateQuotaRequest::kAllocateOperationFieldNumber;
const int AllocateQuotaRequest::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateQuotaRequest::AllocateQuotaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_AllocateQuotaRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.AllocateQuotaRequest)
}
AllocateQuotaRequest::AllocateQuotaRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_AllocateQuotaRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.AllocateQuotaRequest)
}
AllocateQuotaRequest::AllocateQuotaRequest(const AllocateQuotaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name(),
      GetArenaNoVirtual());
  }
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_config_id().size() > 0) {
    service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_config_id(),
      GetArenaNoVirtual());
  }
  if (from.has_allocate_operation()) {
    allocate_operation_ = new ::google::api::servicecontrol::v1::QuotaOperation(*from.allocate_operation_);
  } else {
    allocate_operation_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.AllocateQuotaRequest)
}

void AllocateQuotaRequest::SharedCtor() {
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allocate_operation_ = NULL;
}

AllocateQuotaRequest::~AllocateQuotaRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.AllocateQuotaRequest)
  SharedDtor();
}

void AllocateQuotaRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete allocate_operation_;
}

void AllocateQuotaRequest::ArenaDtor(void* object) {
  AllocateQuotaRequest* _this = reinterpret_cast< AllocateQuotaRequest* >(object);
  (void)_this;
}
void AllocateQuotaRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AllocateQuotaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllocateQuotaRequest::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocateQuotaRequest& AllocateQuotaRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_AllocateQuotaRequest.base);
  return *internal_default_instance();
}


void AllocateQuotaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && allocate_operation_ != NULL) {
    delete allocate_operation_;
  }
  allocate_operation_ = NULL;
  _internal_metadata_.Clear();
}

bool AllocateQuotaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.AllocateQuotaRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocate_operation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_config_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.AllocateQuotaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.AllocateQuotaRequest)
  return false;
#undef DO_
}

void AllocateQuotaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service_name(), output);
  }

  // .google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
  if (this->has_allocate_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_allocate_operation(), output);
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->service_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.AllocateQuotaRequest)
}

::google::protobuf::uint8* AllocateQuotaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service_name(), target);
  }

  // .google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
  if (this->has_allocate_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_allocate_operation(), deterministic, target);
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaRequest.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->service_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.AllocateQuotaRequest)
  return target;
}

size_t AllocateQuotaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  // .google.api.servicecontrol.v1.QuotaOperation allocate_operation = 2;
  if (this->has_allocate_operation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *allocate_operation_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllocateQuotaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateQuotaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocateQuotaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.AllocateQuotaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.AllocateQuotaRequest)
    MergeFrom(*source);
  }
}

void AllocateQuotaRequest::MergeFrom(const AllocateQuotaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {
    set_service_name(from.service_name());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
  if (from.has_allocate_operation()) {
    mutable_allocate_operation()->::google::api::servicecontrol::v1::QuotaOperation::MergeFrom(from.allocate_operation());
  }
}

void AllocateQuotaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateQuotaRequest::CopyFrom(const AllocateQuotaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.AllocateQuotaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateQuotaRequest::IsInitialized() const {
  return true;
}

void AllocateQuotaRequest::Swap(AllocateQuotaRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AllocateQuotaRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AllocateQuotaRequest::UnsafeArenaSwap(AllocateQuotaRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AllocateQuotaRequest::InternalSwap(AllocateQuotaRequest* other) {
  using std::swap;
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_config_id_.Swap(&other->service_config_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(allocate_operation_, other->allocate_operation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllocateQuotaRequest::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

QuotaOperation_LabelsEntry_DoNotUse::QuotaOperation_LabelsEntry_DoNotUse() {}
QuotaOperation_LabelsEntry_DoNotUse::QuotaOperation_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QuotaOperation_LabelsEntry_DoNotUse::MergeFrom(const QuotaOperation_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QuotaOperation_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[1];
}
void QuotaOperation_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void QuotaOperation::InitAsDefaultInstance() {
}
void QuotaOperation::clear_quota_metrics() {
  quota_metrics_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaOperation::kOperationIdFieldNumber;
const int QuotaOperation::kMethodNameFieldNumber;
const int QuotaOperation::kConsumerIdFieldNumber;
const int QuotaOperation::kLabelsFieldNumber;
const int QuotaOperation::kQuotaMetricsFieldNumber;
const int QuotaOperation::kQuotaModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaOperation::QuotaOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.QuotaOperation)
}
QuotaOperation::QuotaOperation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena),
  quota_metrics_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaOperation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.QuotaOperation)
}
QuotaOperation::QuotaOperation(const QuotaOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quota_metrics_(from.quota_metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id(),
      GetArenaNoVirtual());
  }
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method_name().size() > 0) {
    method_name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name(),
      GetArenaNoVirtual());
  }
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.consumer_id().size() > 0) {
    consumer_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.consumer_id(),
      GetArenaNoVirtual());
  }
  quota_mode_ = from.quota_mode_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.QuotaOperation)
}

void QuotaOperation::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quota_mode_ = 0;
}

QuotaOperation::~QuotaOperation() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.QuotaOperation)
  SharedDtor();
}

void QuotaOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuotaOperation::ArenaDtor(void* object) {
  QuotaOperation* _this = reinterpret_cast< QuotaOperation* >(object);
  (void)_this;
}
void QuotaOperation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuotaOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuotaOperation::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaOperation& QuotaOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaOperation.base);
  return *internal_default_instance();
}


void QuotaOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.QuotaOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  quota_metrics_.Clear();
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  method_name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  consumer_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  quota_mode_ = 0;
  _internal_metadata_.Clear();
}

bool QuotaOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.QuotaOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaOperation.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method_name().data(), static_cast<int>(this->method_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaOperation.method_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string consumer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_consumer_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaOperation.consumer_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          QuotaOperation_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QuotaOperation_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaOperation.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaOperation.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quota_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_quota_mode(static_cast< ::google::api::servicecontrol::v1::QuotaOperation_QuotaMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.QuotaOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.QuotaOperation)
  return false;
#undef DO_
}

void QuotaOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.QuotaOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaOperation.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // string method_name = 2;
  if (this->method_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaOperation.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method_name(), output);
  }

  // string consumer_id = 3;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaOperation.consumer_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->consumer_id(), output);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.QuotaOperation.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.QuotaOperation.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QuotaOperation_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QuotaOperation_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quota_metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->quota_metrics(static_cast<int>(i)),
      output);
  }

  // .google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
  if (this->quota_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->quota_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.QuotaOperation)
}

::google::protobuf::uint8* QuotaOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.QuotaOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaOperation.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // string method_name = 2;
  if (this->method_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method_name().data(), static_cast<int>(this->method_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaOperation.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method_name(), target);
  }

  // string consumer_id = 3;
  if (this->consumer_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->consumer_id().data(), static_cast<int>(this->consumer_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaOperation.consumer_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->consumer_id(), target);
  }

  // map<string, string> labels = 4;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.QuotaOperation.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.QuotaOperation.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QuotaOperation_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QuotaOperation_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quota_metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->quota_metrics(static_cast<int>(i)), deterministic, target);
  }

  // .google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
  if (this->quota_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->quota_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.QuotaOperation)
  return target;
}

size_t QuotaOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.QuotaOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> labels = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::std::unique_ptr<QuotaOperation_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->quota_metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quota_metrics(static_cast<int>(i)));
    }
  }

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string method_name = 2;
  if (this->method_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method_name());
  }

  // string consumer_id = 3;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->consumer_id());
  }

  // .google.api.servicecontrol.v1.QuotaOperation.QuotaMode quota_mode = 6;
  if (this->quota_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->quota_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuotaOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.QuotaOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.QuotaOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.QuotaOperation)
    MergeFrom(*source);
  }
}

void QuotaOperation::MergeFrom(const QuotaOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.QuotaOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  quota_metrics_.MergeFrom(from.quota_metrics_);
  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.method_name().size() > 0) {
    set_method_name(from.method_name());
  }
  if (from.consumer_id().size() > 0) {
    set_consumer_id(from.consumer_id());
  }
  if (from.quota_mode() != 0) {
    set_quota_mode(from.quota_mode());
  }
}

void QuotaOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.QuotaOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaOperation::CopyFrom(const QuotaOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.QuotaOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaOperation::IsInitialized() const {
  return true;
}

void QuotaOperation::Swap(QuotaOperation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuotaOperation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuotaOperation::UnsafeArenaSwap(QuotaOperation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuotaOperation::InternalSwap(QuotaOperation* other) {
  using std::swap;
  labels_.Swap(&other->labels_);
  CastToBase(&quota_metrics_)->InternalSwap(CastToBase(&other->quota_metrics_));
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_name_.Swap(&other->method_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consumer_id_.Swap(&other->consumer_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(quota_mode_, other->quota_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuotaOperation::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllocateQuotaResponse::InitAsDefaultInstance() {
}
void AllocateQuotaResponse::clear_quota_metrics() {
  quota_metrics_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocateQuotaResponse::kOperationIdFieldNumber;
const int AllocateQuotaResponse::kAllocateErrorsFieldNumber;
const int AllocateQuotaResponse::kQuotaMetricsFieldNumber;
const int AllocateQuotaResponse::kServiceConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocateQuotaResponse::AllocateQuotaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_AllocateQuotaResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.AllocateQuotaResponse)
}
AllocateQuotaResponse::AllocateQuotaResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  allocate_errors_(arena),
  quota_metrics_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_AllocateQuotaResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.AllocateQuotaResponse)
}
AllocateQuotaResponse::AllocateQuotaResponse(const AllocateQuotaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      allocate_errors_(from.allocate_errors_),
      quota_metrics_(from.quota_metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.operation_id().size() > 0) {
    operation_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operation_id(),
      GetArenaNoVirtual());
  }
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_config_id().size() > 0) {
    service_config_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_config_id(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.AllocateQuotaResponse)
}

void AllocateQuotaResponse::SharedCtor() {
  operation_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AllocateQuotaResponse::~AllocateQuotaResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.AllocateQuotaResponse)
  SharedDtor();
}

void AllocateQuotaResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  operation_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_config_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllocateQuotaResponse::ArenaDtor(void* object) {
  AllocateQuotaResponse* _this = reinterpret_cast< AllocateQuotaResponse* >(object);
  (void)_this;
}
void AllocateQuotaResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AllocateQuotaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AllocateQuotaResponse::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllocateQuotaResponse& AllocateQuotaResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_AllocateQuotaResponse.base);
  return *internal_default_instance();
}


void AllocateQuotaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allocate_errors_.Clear();
  quota_metrics_.Clear();
  operation_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  service_config_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool AllocateQuotaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operation_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->operation_id().data(), static_cast<int>(this->operation_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_allocate_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_quota_metrics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_config_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_config_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.AllocateQuotaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.AllocateQuotaResponse)
  return false;
#undef DO_
}

void AllocateQuotaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operation_id(), output);
  }

  // repeated .google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allocate_errors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->allocate_errors(static_cast<int>(i)),
      output);
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quota_metrics_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->quota_metrics(static_cast<int>(i)),
      output);
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->service_config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.AllocateQuotaResponse)
}

::google::protobuf::uint8* AllocateQuotaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->operation_id().data(), static_cast<int>(this->operation_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaResponse.operation_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operation_id(), target);
  }

  // repeated .google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->allocate_errors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->allocate_errors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->quota_metrics_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->quota_metrics(static_cast<int>(i)), deterministic, target);
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_config_id().data(), static_cast<int>(this->service_config_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.AllocateQuotaResponse.service_config_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->service_config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.AllocateQuotaResponse)
  return target;
}

size_t AllocateQuotaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.servicecontrol.v1.QuotaError allocate_errors = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->allocate_errors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->allocate_errors(static_cast<int>(i)));
    }
  }

  // repeated .google.api.servicecontrol.v1.MetricValueSet quota_metrics = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->quota_metrics_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->quota_metrics(static_cast<int>(i)));
    }
  }

  // string operation_id = 1;
  if (this->operation_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operation_id());
  }

  // string service_config_id = 4;
  if (this->service_config_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AllocateQuotaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AllocateQuotaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocateQuotaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.AllocateQuotaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.AllocateQuotaResponse)
    MergeFrom(*source);
  }
}

void AllocateQuotaResponse::MergeFrom(const AllocateQuotaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  allocate_errors_.MergeFrom(from.allocate_errors_);
  quota_metrics_.MergeFrom(from.quota_metrics_);
  if (from.operation_id().size() > 0) {
    set_operation_id(from.operation_id());
  }
  if (from.service_config_id().size() > 0) {
    set_service_config_id(from.service_config_id());
  }
}

void AllocateQuotaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocateQuotaResponse::CopyFrom(const AllocateQuotaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.AllocateQuotaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllocateQuotaResponse::IsInitialized() const {
  return true;
}

void AllocateQuotaResponse::Swap(AllocateQuotaResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AllocateQuotaResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AllocateQuotaResponse::UnsafeArenaSwap(AllocateQuotaResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AllocateQuotaResponse::InternalSwap(AllocateQuotaResponse* other) {
  using std::swap;
  CastToBase(&allocate_errors_)->InternalSwap(CastToBase(&other->allocate_errors_));
  CastToBase(&quota_metrics_)->InternalSwap(CastToBase(&other->quota_metrics_));
  operation_id_.Swap(&other->operation_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_config_id_.Swap(&other->service_config_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AllocateQuotaResponse::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaError::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaError::kCodeFieldNumber;
const int QuotaError::kSubjectFieldNumber;
const int QuotaError::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaError::QuotaError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.QuotaError)
}
QuotaError::QuotaError(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaError.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.QuotaError)
}
QuotaError::QuotaError(const QuotaError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description(),
      GetArenaNoVirtual());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.QuotaError)
}

void QuotaError::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

QuotaError::~QuotaError() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.QuotaError)
  SharedDtor();
}

void QuotaError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuotaError::ArenaDtor(void* object) {
  QuotaError* _this = reinterpret_cast< QuotaError* >(object);
  (void)_this;
}
void QuotaError::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void QuotaError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QuotaError::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaError& QuotaError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::scc_info_QuotaError.base);
  return *internal_default_instance();
}


void QuotaError::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.QuotaError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool QuotaError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.QuotaError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.servicecontrol.v1.QuotaError.Code code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::google::api::servicecontrol::v1::QuotaError_Code >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaError.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.servicecontrol.v1.QuotaError.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.QuotaError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.QuotaError)
  return false;
#undef DO_
}

void QuotaError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.QuotaError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicecontrol.v1.QuotaError.Code code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaError.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subject(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaError.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.QuotaError)
}

::google::protobuf::uint8* QuotaError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.QuotaError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicecontrol.v1.QuotaError.Code code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaError.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subject(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.QuotaError.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.QuotaError)
  return target;
}

size_t QuotaError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.QuotaError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .google.api.servicecontrol.v1.QuotaError.Code code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuotaError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.QuotaError)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.QuotaError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.QuotaError)
    MergeFrom(*source);
  }
}

void QuotaError::MergeFrom(const QuotaError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.QuotaError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {
    set_subject(from.subject());
  }
  if (from.description().size() > 0) {
    set_description(from.description());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void QuotaError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.QuotaError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaError::CopyFrom(const QuotaError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.QuotaError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaError::IsInitialized() const {
  return true;
}

void QuotaError::Swap(QuotaError* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    QuotaError* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void QuotaError::UnsafeArenaSwap(QuotaError* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void QuotaError::InternalSwap(QuotaError* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QuotaError::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fquota_5fcontroller_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::AllocateQuotaRequest* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::AllocateQuotaRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::AllocateQuotaRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::QuotaOperation_LabelsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::QuotaOperation* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::QuotaOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::QuotaOperation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::AllocateQuotaResponse* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::AllocateQuotaResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::AllocateQuotaResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::QuotaError* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::QuotaError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::QuotaError >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
