// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/distribution.proto

#include "google/api/servicecontrol/v1/distribution.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_ExplicitBuckets;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_ExponentialBuckets;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_LinearBuckets;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class Distribution_LinearBucketsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_LinearBuckets>
      _instance;
} _Distribution_LinearBuckets_default_instance_;
class Distribution_ExponentialBucketsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_ExponentialBuckets>
      _instance;
} _Distribution_ExponentialBuckets_default_instance_;
class Distribution_ExplicitBucketsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_ExplicitBuckets>
      _instance;
} _Distribution_ExplicitBuckets_default_instance_;
class DistributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution>
      _instance;
  const ::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets_;
  const ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets_;
  const ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets_;
} _Distribution_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto {
static void InitDefaultsDistribution_LinearBuckets() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_Distribution_LinearBuckets_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::Distribution_LinearBuckets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::Distribution_LinearBuckets::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_LinearBuckets =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_LinearBuckets}, {}};

static void InitDefaultsDistribution_ExponentialBuckets() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_Distribution_ExponentialBuckets_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_ExponentialBuckets =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_ExponentialBuckets}, {}};

static void InitDefaultsDistribution_ExplicitBuckets() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_Distribution_ExplicitBuckets_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_ExplicitBuckets =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_ExplicitBuckets}, {}};

static void InitDefaultsDistribution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_Distribution_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::Distribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::Distribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Distribution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDistribution}, {
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_LinearBuckets.base,
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExponentialBuckets.base,
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExplicitBuckets.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_LinearBuckets.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_ExponentialBuckets.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_ExplicitBuckets.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_LinearBuckets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_LinearBuckets, num_finite_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_LinearBuckets, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_LinearBuckets, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets, num_finite_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets, growth_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets, bounds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, minimum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, maximum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, sum_of_squared_deviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, bucket_counts_),
  offsetof(::google::api::servicecontrol::v1::DistributionDefaultTypeInternal, linear_buckets_),
  offsetof(::google::api::servicecontrol::v1::DistributionDefaultTypeInternal, exponential_buckets_),
  offsetof(::google::api::servicecontrol::v1::DistributionDefaultTypeInternal, explicit_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::servicecontrol::v1::Distribution, bucket_option_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::servicecontrol::v1::Distribution_LinearBuckets)},
  { 8, -1, sizeof(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets)},
  { 16, -1, sizeof(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets)},
  { 22, -1, sizeof(::google::api::servicecontrol::v1::Distribution)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_Distribution_LinearBuckets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_Distribution_ExponentialBuckets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_Distribution_ExplicitBuckets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::servicecontrol::v1::_Distribution_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/servicecontrol/v1/distribution.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n/google/api/servicecontrol/v1/distribut"
      "ion.proto\022\034google.api.servicecontrol.v1\""
      "\350\004\n\014Distribution\022\r\n\005count\030\001 \001(\003\022\014\n\004mean\030"
      "\002 \001(\001\022\017\n\007minimum\030\003 \001(\001\022\017\n\007maximum\030\004 \001(\001\022"
      " \n\030sum_of_squared_deviation\030\005 \001(\001\022\025\n\rbuc"
      "ket_counts\030\006 \003(\003\022R\n\016linear_buckets\030\007 \001(\013"
      "28.google.api.servicecontrol.v1.Distribu"
      "tion.LinearBucketsH\000\022\\\n\023exponential_buck"
      "ets\030\010 \001(\0132=.google.api.servicecontrol.v1"
      ".Distribution.ExponentialBucketsH\000\022V\n\020ex"
      "plicit_buckets\030\t \001(\0132:.google.api.servic"
      "econtrol.v1.Distribution.ExplicitBuckets"
      "H\000\032J\n\rLinearBuckets\022\032\n\022num_finite_bucket"
      "s\030\001 \001(\005\022\r\n\005width\030\002 \001(\001\022\016\n\006offset\030\003 \001(\001\032V"
      "\n\022ExponentialBuckets\022\032\n\022num_finite_bucke"
      "ts\030\001 \001(\005\022\025\n\rgrowth_factor\030\002 \001(\001\022\r\n\005scale"
      "\030\003 \001(\001\032!\n\017ExplicitBuckets\022\016\n\006bounds\030\001 \003("
      "\001B\017\n\rbucket_optionB\206\001\n com.google.api.se"
      "rvicecontrol.v1B\021DistributionProtoP\001ZJgo"
      "ogle.golang.org/genproto/googleapis/api/"
      "servicecontrol/v1;servicecontrol\370\001\001b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 843);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/servicecontrol/v1/distribution.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

// ===================================================================

void Distribution_LinearBuckets::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_LinearBuckets::kNumFiniteBucketsFieldNumber;
const int Distribution_LinearBuckets::kWidthFieldNumber;
const int Distribution_LinearBuckets::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_LinearBuckets::Distribution_LinearBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_LinearBuckets.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}
Distribution_LinearBuckets::Distribution_LinearBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_LinearBuckets.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}
Distribution_LinearBuckets::Distribution_LinearBuckets(const Distribution_LinearBuckets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&width_)) + sizeof(num_finite_buckets_));
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

void Distribution_LinearBuckets::SharedCtor() {
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&width_)) + sizeof(num_finite_buckets_));
}

Distribution_LinearBuckets::~Distribution_LinearBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  SharedDtor();
}

void Distribution_LinearBuckets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Distribution_LinearBuckets::ArenaDtor(void* object) {
  Distribution_LinearBuckets* _this = reinterpret_cast< Distribution_LinearBuckets* >(object);
  (void)_this;
}
void Distribution_LinearBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_LinearBuckets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_LinearBuckets::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_LinearBuckets& Distribution_LinearBuckets::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_LinearBuckets.base);
  return *internal_default_instance();
}


void Distribution_LinearBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&width_)) + sizeof(num_finite_buckets_));
  _internal_metadata_.Clear();
}

bool Distribution_LinearBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_finite_buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return false;
#undef DO_
}

void Distribution_LinearBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // double width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->width(), output);
  }

  // double offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.LinearBuckets)
}

::google::protobuf::uint8* Distribution_LinearBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // double width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->width(), target);
  }

  // double offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  return target;
}

size_t Distribution_LinearBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double width = 2;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double offset = 3;
  if (this->offset() != 0) {
    total_size += 1 + 8;
  }

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_LinearBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_LinearBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_LinearBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.LinearBuckets)
    MergeFrom(*source);
  }
}

void Distribution_LinearBuckets::MergeFrom(const Distribution_LinearBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
}

void Distribution_LinearBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_LinearBuckets::CopyFrom(const Distribution_LinearBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.LinearBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_LinearBuckets::IsInitialized() const {
  return true;
}

void Distribution_LinearBuckets::Swap(Distribution_LinearBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_LinearBuckets* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution_LinearBuckets::UnsafeArenaSwap(Distribution_LinearBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_LinearBuckets::InternalSwap(Distribution_LinearBuckets* other) {
  using std::swap;
  swap(width_, other->width_);
  swap(offset_, other->offset_);
  swap(num_finite_buckets_, other->num_finite_buckets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_LinearBuckets::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_ExponentialBuckets::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_ExponentialBuckets::kNumFiniteBucketsFieldNumber;
const int Distribution_ExponentialBuckets::kGrowthFactorFieldNumber;
const int Distribution_ExponentialBuckets::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_ExponentialBuckets::Distribution_ExponentialBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExponentialBuckets.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}
Distribution_ExponentialBuckets::Distribution_ExponentialBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExponentialBuckets.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}
Distribution_ExponentialBuckets::Distribution_ExponentialBuckets(const Distribution_ExponentialBuckets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&growth_factor_, &from.growth_factor_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&growth_factor_)) + sizeof(num_finite_buckets_));
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

void Distribution_ExponentialBuckets::SharedCtor() {
  ::memset(&growth_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&growth_factor_)) + sizeof(num_finite_buckets_));
}

Distribution_ExponentialBuckets::~Distribution_ExponentialBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  SharedDtor();
}

void Distribution_ExponentialBuckets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Distribution_ExponentialBuckets::ArenaDtor(void* object) {
  Distribution_ExponentialBuckets* _this = reinterpret_cast< Distribution_ExponentialBuckets* >(object);
  (void)_this;
}
void Distribution_ExponentialBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_ExponentialBuckets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_ExponentialBuckets::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_ExponentialBuckets& Distribution_ExponentialBuckets::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExponentialBuckets.base);
  return *internal_default_instance();
}


void Distribution_ExponentialBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&growth_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&growth_factor_)) + sizeof(num_finite_buckets_));
  _internal_metadata_.Clear();
}

bool Distribution_ExponentialBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_finite_buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double growth_factor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &growth_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return false;
#undef DO_
}

void Distribution_ExponentialBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->growth_factor(), output);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
}

::google::protobuf::uint8* Distribution_ExponentialBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->growth_factor(), target);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  return target;
}

size_t Distribution_ExponentialBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    total_size += 1 + 8;
  }

  // double scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 8;
  }

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_ExponentialBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_ExponentialBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_ExponentialBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
    MergeFrom(*source);
  }
}

void Distribution_ExponentialBuckets::MergeFrom(const Distribution_ExponentialBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.growth_factor() != 0) {
    set_growth_factor(from.growth_factor());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
}

void Distribution_ExponentialBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_ExponentialBuckets::CopyFrom(const Distribution_ExponentialBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.ExponentialBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_ExponentialBuckets::IsInitialized() const {
  return true;
}

void Distribution_ExponentialBuckets::Swap(Distribution_ExponentialBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_ExponentialBuckets* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution_ExponentialBuckets::UnsafeArenaSwap(Distribution_ExponentialBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_ExponentialBuckets::InternalSwap(Distribution_ExponentialBuckets* other) {
  using std::swap;
  swap(growth_factor_, other->growth_factor_);
  swap(scale_, other->scale_);
  swap(num_finite_buckets_, other->num_finite_buckets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_ExponentialBuckets::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_ExplicitBuckets::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_ExplicitBuckets::kBoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_ExplicitBuckets::Distribution_ExplicitBuckets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExplicitBuckets.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}
Distribution_ExplicitBuckets::Distribution_ExplicitBuckets(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bounds_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExplicitBuckets.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}
Distribution_ExplicitBuckets::Distribution_ExplicitBuckets(const Distribution_ExplicitBuckets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bounds_(from.bounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

void Distribution_ExplicitBuckets::SharedCtor() {
}

Distribution_ExplicitBuckets::~Distribution_ExplicitBuckets() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  SharedDtor();
}

void Distribution_ExplicitBuckets::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Distribution_ExplicitBuckets::ArenaDtor(void* object) {
  Distribution_ExplicitBuckets* _this = reinterpret_cast< Distribution_ExplicitBuckets* >(object);
  (void)_this;
}
void Distribution_ExplicitBuckets::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution_ExplicitBuckets::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_ExplicitBuckets::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_ExplicitBuckets& Distribution_ExplicitBuckets::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution_ExplicitBuckets.base);
  return *internal_default_instance();
}


void Distribution_ExplicitBuckets::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bounds_.Clear();
  _internal_metadata_.Clear();
}

bool Distribution_ExplicitBuckets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double bounds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bounds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_bounds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return false;
#undef DO_
}

void Distribution_ExplicitBuckets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bounds_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->bounds().data(), this->bounds_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
}

::google::protobuf::uint8* Distribution_ExplicitBuckets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bounds_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bounds_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  return target;
}

size_t Distribution_ExplicitBuckets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double bounds = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bounds_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_ExplicitBuckets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_ExplicitBuckets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_ExplicitBuckets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
    MergeFrom(*source);
  }
}

void Distribution_ExplicitBuckets::MergeFrom(const Distribution_ExplicitBuckets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bounds_.MergeFrom(from.bounds_);
}

void Distribution_ExplicitBuckets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_ExplicitBuckets::CopyFrom(const Distribution_ExplicitBuckets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution.ExplicitBuckets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_ExplicitBuckets::IsInitialized() const {
  return true;
}

void Distribution_ExplicitBuckets::Swap(Distribution_ExplicitBuckets* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution_ExplicitBuckets* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution_ExplicitBuckets::UnsafeArenaSwap(Distribution_ExplicitBuckets* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution_ExplicitBuckets::InternalSwap(Distribution_ExplicitBuckets* other) {
  using std::swap;
  bounds_.InternalSwap(&other->bounds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_ExplicitBuckets::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_Distribution_default_instance_.linear_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_LinearBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_LinearBuckets::internal_default_instance());
  ::google::api::servicecontrol::v1::_Distribution_default_instance_.exponential_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::internal_default_instance());
  ::google::api::servicecontrol::v1::_Distribution_default_instance_.explicit_buckets_ = const_cast< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets*>(
      ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::internal_default_instance());
}
void Distribution::set_allocated_linear_buckets(::google::api::servicecontrol::v1::Distribution_LinearBuckets* linear_buckets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_bucket_option();
  if (linear_buckets) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(linear_buckets);
    if (message_arena != submessage_arena) {
      linear_buckets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linear_buckets, submessage_arena);
    }
    set_has_linear_buckets();
    bucket_option_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.linear_buckets)
}
void Distribution::set_allocated_exponential_buckets(::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* exponential_buckets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_bucket_option();
  if (exponential_buckets) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(exponential_buckets);
    if (message_arena != submessage_arena) {
      exponential_buckets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exponential_buckets, submessage_arena);
    }
    set_has_exponential_buckets();
    bucket_option_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.exponential_buckets)
}
void Distribution::set_allocated_explicit_buckets(::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* explicit_buckets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_bucket_option();
  if (explicit_buckets) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(explicit_buckets);
    if (message_arena != submessage_arena) {
      explicit_buckets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explicit_buckets, submessage_arena);
    }
    set_has_explicit_buckets();
    bucket_option_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.Distribution.explicit_buckets)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution::kCountFieldNumber;
const int Distribution::kMeanFieldNumber;
const int Distribution::kMinimumFieldNumber;
const int Distribution::kMaximumFieldNumber;
const int Distribution::kSumOfSquaredDeviationFieldNumber;
const int Distribution::kBucketCountsFieldNumber;
const int Distribution::kLinearBucketsFieldNumber;
const int Distribution::kExponentialBucketsFieldNumber;
const int Distribution::kExplicitBucketsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution::Distribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.Distribution)
}
Distribution::Distribution(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bucket_counts_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.Distribution)
}
Distribution::Distribution(const Distribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bucket_counts_(from.bucket_counts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  clear_has_bucket_option();
  switch (from.bucket_option_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::servicecontrol::v1::Distribution_LinearBuckets::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::MergeFrom(from.explicit_buckets());
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.Distribution)
}

void Distribution::SharedCtor() {
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_of_squared_deviation_) -
      reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  clear_has_bucket_option();
}

Distribution::~Distribution() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.Distribution)
  SharedDtor();
}

void Distribution::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_bucket_option()) {
    clear_bucket_option();
  }
}

void Distribution::ArenaDtor(void* object) {
  Distribution* _this = reinterpret_cast< Distribution* >(object);
  (void)_this;
}
void Distribution::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Distribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution::descriptor() {
  ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution& Distribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::scc_info_Distribution.base);
  return *internal_default_instance();
}


void Distribution::clear_bucket_option() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicecontrol.v1.Distribution)
  switch (bucket_option_case()) {
    case kLinearBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.linear_buckets_;
      }
      break;
    }
    case kExponentialBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.exponential_buckets_;
      }
      break;
    }
    case kExplicitBuckets: {
      if (GetArenaNoVirtual() == NULL) {
        delete bucket_option_.explicit_buckets_;
      }
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BUCKET_OPTION_NOT_SET;
}


void Distribution::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.Distribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_counts_.Clear();
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_of_squared_deviation_) -
      reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  clear_bucket_option();
  _internal_metadata_.Clear();
}

bool Distribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.servicecontrol.v1.Distribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double mean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double minimum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &minimum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double maximum = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &maximum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sum_of_squared_deviation = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_of_squared_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 bucket_counts = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bucket_counts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 50u, input, this->mutable_bucket_counts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exponential_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_explicit_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.servicecontrol.v1.Distribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.servicecontrol.v1.Distribution)
  return false;
#undef DO_
}

void Distribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.servicecontrol.v1.Distribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // double mean = 2;
  if (this->mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->mean(), output);
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->minimum(), output);
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->maximum(), output);
  }

  // double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->sum_of_squared_deviation(), output);
  }

  // repeated int64 bucket_counts = 6;
  if (this->bucket_counts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bucket_counts_cached_byte_size_));
  }
  for (int i = 0, n = this->bucket_counts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bucket_counts(i), output);
  }

  // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  if (has_linear_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_linear_buckets(), output);
  }

  // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  if (has_exponential_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_exponential_buckets(), output);
  }

  // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  if (has_explicit_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_explicit_buckets(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.servicecontrol.v1.Distribution)
}

::google::protobuf::uint8* Distribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.Distribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // double mean = 2;
  if (this->mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->mean(), target);
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->minimum(), target);
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->maximum(), target);
  }

  // double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->sum_of_squared_deviation(), target);
  }

  // repeated int64 bucket_counts = 6;
  if (this->bucket_counts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bucket_counts_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bucket_counts_, target);
  }

  // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
  if (has_linear_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_linear_buckets(), deterministic, target);
  }

  // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
  if (has_exponential_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_exponential_buckets(), deterministic, target);
  }

  // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
  if (has_explicit_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_explicit_buckets(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.Distribution)
  return target;
}

size_t Distribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.Distribution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 bucket_counts = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->bucket_counts_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bucket_counts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // double mean = 2;
  if (this->mean() != 0) {
    total_size += 1 + 8;
  }

  // double minimum = 3;
  if (this->minimum() != 0) {
    total_size += 1 + 8;
  }

  // double maximum = 4;
  if (this->maximum() != 0) {
    total_size += 1 + 8;
  }

  // double sum_of_squared_deviation = 5;
  if (this->sum_of_squared_deviation() != 0) {
    total_size += 1 + 8;
  }

  switch (bucket_option_case()) {
    // .google.api.servicecontrol.v1.Distribution.LinearBuckets linear_buckets = 7;
    case kLinearBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bucket_option_.linear_buckets_);
      break;
    }
    // .google.api.servicecontrol.v1.Distribution.ExponentialBuckets exponential_buckets = 8;
    case kExponentialBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bucket_option_.exponential_buckets_);
      break;
    }
    // .google.api.servicecontrol.v1.Distribution.ExplicitBuckets explicit_buckets = 9;
    case kExplicitBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *bucket_option_.explicit_buckets_);
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.Distribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.Distribution)
    MergeFrom(*source);
  }
}

void Distribution::MergeFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bucket_counts_.MergeFrom(from.bucket_counts_);
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.mean() != 0) {
    set_mean(from.mean());
  }
  if (from.minimum() != 0) {
    set_minimum(from.minimum());
  }
  if (from.maximum() != 0) {
    set_maximum(from.maximum());
  }
  if (from.sum_of_squared_deviation() != 0) {
    set_sum_of_squared_deviation(from.sum_of_squared_deviation());
  }
  switch (from.bucket_option_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::servicecontrol::v1::Distribution_LinearBuckets::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::servicecontrol::v1::Distribution_ExponentialBuckets::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::servicecontrol::v1::Distribution_ExplicitBuckets::MergeFrom(from.explicit_buckets());
      break;
    }
    case BUCKET_OPTION_NOT_SET: {
      break;
    }
  }
}

void Distribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution::CopyFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution::IsInitialized() const {
  return true;
}

void Distribution::Swap(Distribution* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Distribution* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Distribution::UnsafeArenaSwap(Distribution* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Distribution::InternalSwap(Distribution* other) {
  using std::swap;
  bucket_counts_.InternalSwap(&other->bucket_counts_);
  swap(count_, other->count_);
  swap(mean_, other->mean_);
  swap(minimum_, other->minimum_);
  swap(maximum_, other->maximum_);
  swap(sum_of_squared_deviation_, other->sum_of_squared_deviation_);
  swap(bucket_option_, other->bucket_option_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution::GetMetadata() const {
  protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::Distribution_LinearBuckets* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::Distribution_LinearBuckets >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::Distribution_ExponentialBuckets >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::Distribution_ExplicitBuckets >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::servicecontrol::v1::Distribution* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::Distribution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::Distribution >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
