// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/distribution.proto

#include "google/api/distribution.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fdistribution_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_BucketOptions_Explicit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_BucketOptions_Exponential;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_BucketOptions_Linear;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_Range;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Distribution_Exemplar;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Distribution_BucketOptions;
}  // namespace protobuf_google_2fapi_2fdistribution_2eproto
namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace google {
namespace api {
class Distribution_RangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_Range>
      _instance;
} _Distribution_Range_default_instance_;
class Distribution_BucketOptions_LinearDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_BucketOptions_Linear>
      _instance;
} _Distribution_BucketOptions_Linear_default_instance_;
class Distribution_BucketOptions_ExponentialDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_BucketOptions_Exponential>
      _instance;
} _Distribution_BucketOptions_Exponential_default_instance_;
class Distribution_BucketOptions_ExplicitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_BucketOptions_Explicit>
      _instance;
} _Distribution_BucketOptions_Explicit_default_instance_;
class Distribution_BucketOptionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_BucketOptions>
      _instance;
  const ::google::api::Distribution_BucketOptions_Linear* linear_buckets_;
  const ::google::api::Distribution_BucketOptions_Exponential* exponential_buckets_;
  const ::google::api::Distribution_BucketOptions_Explicit* explicit_buckets_;
} _Distribution_BucketOptions_default_instance_;
class Distribution_ExemplarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution_Exemplar>
      _instance;
} _Distribution_Exemplar_default_instance_;
class DistributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Distribution>
      _instance;
} _Distribution_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fdistribution_2eproto {
static void InitDefaultsDistribution_Range() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_Range_default_instance_;
    new (ptr) ::google::api::Distribution_Range();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution_Range::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_Range =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_Range}, {}};

static void InitDefaultsDistribution_BucketOptions_Linear() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_BucketOptions_Linear_default_instance_;
    new (ptr) ::google::api::Distribution_BucketOptions_Linear();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution_BucketOptions_Linear::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_BucketOptions_Linear =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_BucketOptions_Linear}, {}};

static void InitDefaultsDistribution_BucketOptions_Exponential() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_BucketOptions_Exponential_default_instance_;
    new (ptr) ::google::api::Distribution_BucketOptions_Exponential();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution_BucketOptions_Exponential::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_BucketOptions_Exponential =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_BucketOptions_Exponential}, {}};

static void InitDefaultsDistribution_BucketOptions_Explicit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_BucketOptions_Explicit_default_instance_;
    new (ptr) ::google::api::Distribution_BucketOptions_Explicit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution_BucketOptions_Explicit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Distribution_BucketOptions_Explicit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDistribution_BucketOptions_Explicit}, {}};

static void InitDefaultsDistribution_BucketOptions() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_BucketOptions_default_instance_;
    new (ptr) ::google::api::Distribution_BucketOptions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution_BucketOptions::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Distribution_BucketOptions =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDistribution_BucketOptions}, {
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Linear.base,
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Exponential.base,
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Explicit.base,}};

static void InitDefaultsDistribution_Exemplar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_Exemplar_default_instance_;
    new (ptr) ::google::api::Distribution_Exemplar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution_Exemplar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Distribution_Exemplar =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDistribution_Exemplar}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsDistribution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Distribution_default_instance_;
    new (ptr) ::google::api::Distribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Distribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Distribution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsDistribution}, {
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_Range.base,
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions.base,
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_Exemplar.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_Range.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_BucketOptions_Linear.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_BucketOptions_Exponential.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_BucketOptions_Explicit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_BucketOptions.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution_Exemplar.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Distribution.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Range, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Range, max_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Linear, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Linear, num_finite_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Linear, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Linear, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Exponential, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Exponential, num_finite_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Exponential, growth_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Exponential, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Explicit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions_Explicit, bounds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::api::Distribution_BucketOptionsDefaultTypeInternal, linear_buckets_),
  offsetof(::google::api::Distribution_BucketOptionsDefaultTypeInternal, exponential_buckets_),
  offsetof(::google::api::Distribution_BucketOptionsDefaultTypeInternal, explicit_buckets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_BucketOptions, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Exemplar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Exemplar, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Exemplar, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution_Exemplar, attachments_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, mean_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, sum_of_squared_deviation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, bucket_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, bucket_counts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Distribution, exemplars_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::Distribution_Range)},
  { 7, -1, sizeof(::google::api::Distribution_BucketOptions_Linear)},
  { 15, -1, sizeof(::google::api::Distribution_BucketOptions_Exponential)},
  { 23, -1, sizeof(::google::api::Distribution_BucketOptions_Explicit)},
  { 29, -1, sizeof(::google::api::Distribution_BucketOptions)},
  { 38, -1, sizeof(::google::api::Distribution_Exemplar)},
  { 46, -1, sizeof(::google::api::Distribution)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_BucketOptions_Linear_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_BucketOptions_Exponential_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_BucketOptions_Explicit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_BucketOptions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_Exemplar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Distribution_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/distribution.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035google/api/distribution.proto\022\ngoogle."
      "api\032\031google/protobuf/any.proto\032\037google/p"
      "rotobuf/timestamp.proto\"\331\006\n\014Distribution"
      "\022\r\n\005count\030\001 \001(\003\022\014\n\004mean\030\002 \001(\001\022 \n\030sum_of_"
      "squared_deviation\030\003 \001(\001\022-\n\005range\030\004 \001(\0132\036"
      ".google.api.Distribution.Range\022>\n\016bucket"
      "_options\030\006 \001(\0132&.google.api.Distribution"
      ".BucketOptions\022\025\n\rbucket_counts\030\007 \003(\003\0224\n"
      "\texemplars\030\n \003(\0132!.google.api.Distributi"
      "on.Exemplar\032!\n\005Range\022\013\n\003min\030\001 \001(\001\022\013\n\003max"
      "\030\002 \001(\001\032\265\003\n\rBucketOptions\022G\n\016linear_bucke"
      "ts\030\001 \001(\0132-.google.api.Distribution.Bucke"
      "tOptions.LinearH\000\022Q\n\023exponential_buckets"
      "\030\002 \001(\01322.google.api.Distribution.BucketO"
      "ptions.ExponentialH\000\022K\n\020explicit_buckets"
      "\030\003 \001(\0132/.google.api.Distribution.BucketO"
      "ptions.ExplicitH\000\032C\n\006Linear\022\032\n\022num_finit"
      "e_buckets\030\001 \001(\005\022\r\n\005width\030\002 \001(\001\022\016\n\006offset"
      "\030\003 \001(\001\032O\n\013Exponential\022\032\n\022num_finite_buck"
      "ets\030\001 \001(\005\022\025\n\rgrowth_factor\030\002 \001(\001\022\r\n\005scal"
      "e\030\003 \001(\001\032\032\n\010Explicit\022\016\n\006bounds\030\001 \003(\001B\t\n\007o"
      "ptions\032s\n\010Exemplar\022\r\n\005value\030\001 \001(\001\022-\n\ttim"
      "estamp\030\002 \001(\0132\032.google.protobuf.Timestamp"
      "\022)\n\013attachments\030\003 \003(\0132\024.google.protobuf."
      "AnyBq\n\016com.google.apiB\021DistributionProto"
      "P\001ZCgoogle.golang.org/genproto/googleapi"
      "s/api/distribution;distribution\242\002\004GAPIb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1086);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/distribution.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fdistribution_2eproto
namespace google {
namespace api {

// ===================================================================

void Distribution_Range::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_Range::kMinFieldNumber;
const int Distribution_Range::kMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_Range::Distribution_Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_Range.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution.Range)
}
Distribution_Range::Distribution_Range(const Distribution_Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_)) + sizeof(max_));
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution.Range)
}

void Distribution_Range::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
}

Distribution_Range::~Distribution_Range() {
  // @@protoc_insertion_point(destructor:google.api.Distribution.Range)
  SharedDtor();
}

void Distribution_Range::SharedDtor() {
}

void Distribution_Range::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_Range::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_Range& Distribution_Range::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_Range.base);
  return *internal_default_instance();
}


void Distribution_Range::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _internal_metadata_.Clear();
}

bool Distribution_Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution.Range)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution.Range)
  return false;
#undef DO_
}

void Distribution_Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->min(), output);
  }

  // double max = 2;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->max(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution.Range)
}

::google::protobuf::uint8* Distribution_Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution.Range)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double min = 1;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->min(), target);
  }

  // double max = 2;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->max(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution.Range)
  return target;
}

size_t Distribution_Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution.Range)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double min = 1;
  if (this->min() != 0) {
    total_size += 1 + 8;
  }

  // double max = 2;
  if (this->max() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution.Range)
    MergeFrom(*source);
  }
}

void Distribution_Range::MergeFrom(const Distribution_Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
}

void Distribution_Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_Range::CopyFrom(const Distribution_Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_Range::IsInitialized() const {
  return true;
}

void Distribution_Range::Swap(Distribution_Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution_Range::InternalSwap(Distribution_Range* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_Range::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_BucketOptions_Linear::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_BucketOptions_Linear::kNumFiniteBucketsFieldNumber;
const int Distribution_BucketOptions_Linear::kWidthFieldNumber;
const int Distribution_BucketOptions_Linear::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_BucketOptions_Linear::Distribution_BucketOptions_Linear()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Linear.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution.BucketOptions.Linear)
}
Distribution_BucketOptions_Linear::Distribution_BucketOptions_Linear(const Distribution_BucketOptions_Linear& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&width_, &from.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&width_)) + sizeof(num_finite_buckets_));
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution.BucketOptions.Linear)
}

void Distribution_BucketOptions_Linear::SharedCtor() {
  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&width_)) + sizeof(num_finite_buckets_));
}

Distribution_BucketOptions_Linear::~Distribution_BucketOptions_Linear() {
  // @@protoc_insertion_point(destructor:google.api.Distribution.BucketOptions.Linear)
  SharedDtor();
}

void Distribution_BucketOptions_Linear::SharedDtor() {
}

void Distribution_BucketOptions_Linear::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_BucketOptions_Linear::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_BucketOptions_Linear& Distribution_BucketOptions_Linear::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Linear.base);
  return *internal_default_instance();
}


void Distribution_BucketOptions_Linear::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution.BucketOptions.Linear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&width_)) + sizeof(num_finite_buckets_));
  _internal_metadata_.Clear();
}

bool Distribution_BucketOptions_Linear::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution.BucketOptions.Linear)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_finite_buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution.BucketOptions.Linear)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution.BucketOptions.Linear)
  return false;
#undef DO_
}

void Distribution_BucketOptions_Linear::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution.BucketOptions.Linear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // double width = 2;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->width(), output);
  }

  // double offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution.BucketOptions.Linear)
}

::google::protobuf::uint8* Distribution_BucketOptions_Linear::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution.BucketOptions.Linear)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // double width = 2;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->width(), target);
  }

  // double offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution.BucketOptions.Linear)
  return target;
}

size_t Distribution_BucketOptions_Linear::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution.BucketOptions.Linear)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double width = 2;
  if (this->width() != 0) {
    total_size += 1 + 8;
  }

  // double offset = 3;
  if (this->offset() != 0) {
    total_size += 1 + 8;
  }

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_BucketOptions_Linear::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution.BucketOptions.Linear)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_BucketOptions_Linear* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_BucketOptions_Linear>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution.BucketOptions.Linear)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution.BucketOptions.Linear)
    MergeFrom(*source);
  }
}

void Distribution_BucketOptions_Linear::MergeFrom(const Distribution_BucketOptions_Linear& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution.BucketOptions.Linear)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
}

void Distribution_BucketOptions_Linear::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution.BucketOptions.Linear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_BucketOptions_Linear::CopyFrom(const Distribution_BucketOptions_Linear& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution.BucketOptions.Linear)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_BucketOptions_Linear::IsInitialized() const {
  return true;
}

void Distribution_BucketOptions_Linear::Swap(Distribution_BucketOptions_Linear* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution_BucketOptions_Linear::InternalSwap(Distribution_BucketOptions_Linear* other) {
  using std::swap;
  swap(width_, other->width_);
  swap(offset_, other->offset_);
  swap(num_finite_buckets_, other->num_finite_buckets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_BucketOptions_Linear::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_BucketOptions_Exponential::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_BucketOptions_Exponential::kNumFiniteBucketsFieldNumber;
const int Distribution_BucketOptions_Exponential::kGrowthFactorFieldNumber;
const int Distribution_BucketOptions_Exponential::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_BucketOptions_Exponential::Distribution_BucketOptions_Exponential()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Exponential.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution.BucketOptions.Exponential)
}
Distribution_BucketOptions_Exponential::Distribution_BucketOptions_Exponential(const Distribution_BucketOptions_Exponential& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&growth_factor_, &from.growth_factor_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_finite_buckets_) -
    reinterpret_cast<char*>(&growth_factor_)) + sizeof(num_finite_buckets_));
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution.BucketOptions.Exponential)
}

void Distribution_BucketOptions_Exponential::SharedCtor() {
  ::memset(&growth_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&growth_factor_)) + sizeof(num_finite_buckets_));
}

Distribution_BucketOptions_Exponential::~Distribution_BucketOptions_Exponential() {
  // @@protoc_insertion_point(destructor:google.api.Distribution.BucketOptions.Exponential)
  SharedDtor();
}

void Distribution_BucketOptions_Exponential::SharedDtor() {
}

void Distribution_BucketOptions_Exponential::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_BucketOptions_Exponential::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_BucketOptions_Exponential& Distribution_BucketOptions_Exponential::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Exponential.base);
  return *internal_default_instance();
}


void Distribution_BucketOptions_Exponential::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution.BucketOptions.Exponential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&growth_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_finite_buckets_) -
      reinterpret_cast<char*>(&growth_factor_)) + sizeof(num_finite_buckets_));
  _internal_metadata_.Clear();
}

bool Distribution_BucketOptions_Exponential::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution.BucketOptions.Exponential)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 num_finite_buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_finite_buckets_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double growth_factor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &growth_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution.BucketOptions.Exponential)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution.BucketOptions.Exponential)
  return false;
#undef DO_
}

void Distribution_BucketOptions_Exponential::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution.BucketOptions.Exponential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num_finite_buckets(), output);
  }

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->growth_factor(), output);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution.BucketOptions.Exponential)
}

::google::protobuf::uint8* Distribution_BucketOptions_Exponential::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution.BucketOptions.Exponential)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num_finite_buckets(), target);
  }

  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->growth_factor(), target);
  }

  // double scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution.BucketOptions.Exponential)
  return target;
}

size_t Distribution_BucketOptions_Exponential::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution.BucketOptions.Exponential)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double growth_factor = 2;
  if (this->growth_factor() != 0) {
    total_size += 1 + 8;
  }

  // double scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 8;
  }

  // int32 num_finite_buckets = 1;
  if (this->num_finite_buckets() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_finite_buckets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_BucketOptions_Exponential::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution.BucketOptions.Exponential)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_BucketOptions_Exponential* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_BucketOptions_Exponential>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution.BucketOptions.Exponential)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution.BucketOptions.Exponential)
    MergeFrom(*source);
  }
}

void Distribution_BucketOptions_Exponential::MergeFrom(const Distribution_BucketOptions_Exponential& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution.BucketOptions.Exponential)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.growth_factor() != 0) {
    set_growth_factor(from.growth_factor());
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.num_finite_buckets() != 0) {
    set_num_finite_buckets(from.num_finite_buckets());
  }
}

void Distribution_BucketOptions_Exponential::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution.BucketOptions.Exponential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_BucketOptions_Exponential::CopyFrom(const Distribution_BucketOptions_Exponential& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution.BucketOptions.Exponential)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_BucketOptions_Exponential::IsInitialized() const {
  return true;
}

void Distribution_BucketOptions_Exponential::Swap(Distribution_BucketOptions_Exponential* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution_BucketOptions_Exponential::InternalSwap(Distribution_BucketOptions_Exponential* other) {
  using std::swap;
  swap(growth_factor_, other->growth_factor_);
  swap(scale_, other->scale_);
  swap(num_finite_buckets_, other->num_finite_buckets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_BucketOptions_Exponential::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_BucketOptions_Explicit::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_BucketOptions_Explicit::kBoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_BucketOptions_Explicit::Distribution_BucketOptions_Explicit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Explicit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution.BucketOptions.Explicit)
}
Distribution_BucketOptions_Explicit::Distribution_BucketOptions_Explicit(const Distribution_BucketOptions_Explicit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bounds_(from.bounds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution.BucketOptions.Explicit)
}

void Distribution_BucketOptions_Explicit::SharedCtor() {
}

Distribution_BucketOptions_Explicit::~Distribution_BucketOptions_Explicit() {
  // @@protoc_insertion_point(destructor:google.api.Distribution.BucketOptions.Explicit)
  SharedDtor();
}

void Distribution_BucketOptions_Explicit::SharedDtor() {
}

void Distribution_BucketOptions_Explicit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_BucketOptions_Explicit::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_BucketOptions_Explicit& Distribution_BucketOptions_Explicit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions_Explicit.base);
  return *internal_default_instance();
}


void Distribution_BucketOptions_Explicit::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution.BucketOptions.Explicit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bounds_.Clear();
  _internal_metadata_.Clear();
}

bool Distribution_BucketOptions_Explicit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution.BucketOptions.Explicit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double bounds = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_bounds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_bounds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution.BucketOptions.Explicit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution.BucketOptions.Explicit)
  return false;
#undef DO_
}

void Distribution_BucketOptions_Explicit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution.BucketOptions.Explicit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bounds_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->bounds().data(), this->bounds_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution.BucketOptions.Explicit)
}

::google::protobuf::uint8* Distribution_BucketOptions_Explicit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution.BucketOptions.Explicit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double bounds = 1;
  if (this->bounds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bounds_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->bounds_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution.BucketOptions.Explicit)
  return target;
}

size_t Distribution_BucketOptions_Explicit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution.BucketOptions.Explicit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double bounds = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bounds_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bounds_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_BucketOptions_Explicit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution.BucketOptions.Explicit)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_BucketOptions_Explicit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_BucketOptions_Explicit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution.BucketOptions.Explicit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution.BucketOptions.Explicit)
    MergeFrom(*source);
  }
}

void Distribution_BucketOptions_Explicit::MergeFrom(const Distribution_BucketOptions_Explicit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution.BucketOptions.Explicit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bounds_.MergeFrom(from.bounds_);
}

void Distribution_BucketOptions_Explicit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution.BucketOptions.Explicit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_BucketOptions_Explicit::CopyFrom(const Distribution_BucketOptions_Explicit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution.BucketOptions.Explicit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_BucketOptions_Explicit::IsInitialized() const {
  return true;
}

void Distribution_BucketOptions_Explicit::Swap(Distribution_BucketOptions_Explicit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution_BucketOptions_Explicit::InternalSwap(Distribution_BucketOptions_Explicit* other) {
  using std::swap;
  bounds_.InternalSwap(&other->bounds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_BucketOptions_Explicit::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_BucketOptions::InitAsDefaultInstance() {
  ::google::api::_Distribution_BucketOptions_default_instance_.linear_buckets_ = const_cast< ::google::api::Distribution_BucketOptions_Linear*>(
      ::google::api::Distribution_BucketOptions_Linear::internal_default_instance());
  ::google::api::_Distribution_BucketOptions_default_instance_.exponential_buckets_ = const_cast< ::google::api::Distribution_BucketOptions_Exponential*>(
      ::google::api::Distribution_BucketOptions_Exponential::internal_default_instance());
  ::google::api::_Distribution_BucketOptions_default_instance_.explicit_buckets_ = const_cast< ::google::api::Distribution_BucketOptions_Explicit*>(
      ::google::api::Distribution_BucketOptions_Explicit::internal_default_instance());
}
void Distribution_BucketOptions::set_allocated_linear_buckets(::google::api::Distribution_BucketOptions_Linear* linear_buckets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_options();
  if (linear_buckets) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      linear_buckets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linear_buckets, submessage_arena);
    }
    set_has_linear_buckets();
    options_.linear_buckets_ = linear_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.BucketOptions.linear_buckets)
}
void Distribution_BucketOptions::set_allocated_exponential_buckets(::google::api::Distribution_BucketOptions_Exponential* exponential_buckets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_options();
  if (exponential_buckets) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exponential_buckets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exponential_buckets, submessage_arena);
    }
    set_has_exponential_buckets();
    options_.exponential_buckets_ = exponential_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.BucketOptions.exponential_buckets)
}
void Distribution_BucketOptions::set_allocated_explicit_buckets(::google::api::Distribution_BucketOptions_Explicit* explicit_buckets) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_options();
  if (explicit_buckets) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      explicit_buckets = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, explicit_buckets, submessage_arena);
    }
    set_has_explicit_buckets();
    options_.explicit_buckets_ = explicit_buckets;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.BucketOptions.explicit_buckets)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_BucketOptions::kLinearBucketsFieldNumber;
const int Distribution_BucketOptions::kExponentialBucketsFieldNumber;
const int Distribution_BucketOptions::kExplicitBucketsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_BucketOptions::Distribution_BucketOptions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution.BucketOptions)
}
Distribution_BucketOptions::Distribution_BucketOptions(const Distribution_BucketOptions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_options();
  switch (from.options_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::Distribution_BucketOptions_Linear::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::Distribution_BucketOptions_Exponential::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::Distribution_BucketOptions_Explicit::MergeFrom(from.explicit_buckets());
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution.BucketOptions)
}

void Distribution_BucketOptions::SharedCtor() {
  clear_has_options();
}

Distribution_BucketOptions::~Distribution_BucketOptions() {
  // @@protoc_insertion_point(destructor:google.api.Distribution.BucketOptions)
  SharedDtor();
}

void Distribution_BucketOptions::SharedDtor() {
  if (has_options()) {
    clear_options();
  }
}

void Distribution_BucketOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_BucketOptions::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_BucketOptions& Distribution_BucketOptions::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_BucketOptions.base);
  return *internal_default_instance();
}


void Distribution_BucketOptions::clear_options() {
// @@protoc_insertion_point(one_of_clear_start:google.api.Distribution.BucketOptions)
  switch (options_case()) {
    case kLinearBuckets: {
      delete options_.linear_buckets_;
      break;
    }
    case kExponentialBuckets: {
      delete options_.exponential_buckets_;
      break;
    }
    case kExplicitBuckets: {
      delete options_.explicit_buckets_;
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIONS_NOT_SET;
}


void Distribution_BucketOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution.BucketOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_options();
  _internal_metadata_.Clear();
}

bool Distribution_BucketOptions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution.BucketOptions)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linear_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exponential_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_explicit_buckets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution.BucketOptions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution.BucketOptions)
  return false;
#undef DO_
}

void Distribution_BucketOptions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution.BucketOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
  if (has_linear_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_linear_buckets(), output);
  }

  // .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
  if (has_exponential_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_exponential_buckets(), output);
  }

  // .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
  if (has_explicit_buckets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_explicit_buckets(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution.BucketOptions)
}

::google::protobuf::uint8* Distribution_BucketOptions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution.BucketOptions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
  if (has_linear_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_linear_buckets(), deterministic, target);
  }

  // .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
  if (has_exponential_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_exponential_buckets(), deterministic, target);
  }

  // .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
  if (has_explicit_buckets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_explicit_buckets(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution.BucketOptions)
  return target;
}

size_t Distribution_BucketOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution.BucketOptions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (options_case()) {
    // .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
    case kLinearBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *options_.linear_buckets_);
      break;
    }
    // .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
    case kExponentialBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *options_.exponential_buckets_);
      break;
    }
    // .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
    case kExplicitBuckets: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *options_.explicit_buckets_);
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_BucketOptions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution.BucketOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_BucketOptions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_BucketOptions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution.BucketOptions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution.BucketOptions)
    MergeFrom(*source);
  }
}

void Distribution_BucketOptions::MergeFrom(const Distribution_BucketOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution.BucketOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.options_case()) {
    case kLinearBuckets: {
      mutable_linear_buckets()->::google::api::Distribution_BucketOptions_Linear::MergeFrom(from.linear_buckets());
      break;
    }
    case kExponentialBuckets: {
      mutable_exponential_buckets()->::google::api::Distribution_BucketOptions_Exponential::MergeFrom(from.exponential_buckets());
      break;
    }
    case kExplicitBuckets: {
      mutable_explicit_buckets()->::google::api::Distribution_BucketOptions_Explicit::MergeFrom(from.explicit_buckets());
      break;
    }
    case OPTIONS_NOT_SET: {
      break;
    }
  }
}

void Distribution_BucketOptions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution.BucketOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_BucketOptions::CopyFrom(const Distribution_BucketOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution.BucketOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_BucketOptions::IsInitialized() const {
  return true;
}

void Distribution_BucketOptions::Swap(Distribution_BucketOptions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution_BucketOptions::InternalSwap(Distribution_BucketOptions* other) {
  using std::swap;
  swap(options_, other->options_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_BucketOptions::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution_Exemplar::InitAsDefaultInstance() {
  ::google::api::_Distribution_Exemplar_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Distribution_Exemplar::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
void Distribution_Exemplar::clear_attachments() {
  attachments_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution_Exemplar::kValueFieldNumber;
const int Distribution_Exemplar::kTimestampFieldNumber;
const int Distribution_Exemplar::kAttachmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution_Exemplar::Distribution_Exemplar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_Exemplar.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution.Exemplar)
}
Distribution_Exemplar::Distribution_Exemplar(const Distribution_Exemplar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attachments_(from.attachments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution.Exemplar)
}

void Distribution_Exemplar::SharedCtor() {
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(value_));
}

Distribution_Exemplar::~Distribution_Exemplar() {
  // @@protoc_insertion_point(destructor:google.api.Distribution.Exemplar)
  SharedDtor();
}

void Distribution_Exemplar::SharedDtor() {
  if (this != internal_default_instance()) delete timestamp_;
}

void Distribution_Exemplar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution_Exemplar::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution_Exemplar& Distribution_Exemplar::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution_Exemplar.base);
  return *internal_default_instance();
}


void Distribution_Exemplar::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution.Exemplar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attachments_.Clear();
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  value_ = 0;
  _internal_metadata_.Clear();
}

bool Distribution_Exemplar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution.Exemplar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Any attachments = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attachments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution.Exemplar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution.Exemplar)
  return false;
#undef DO_
}

void Distribution_Exemplar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution.Exemplar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_timestamp(), output);
  }

  // repeated .google.protobuf.Any attachments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attachments_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->attachments(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution.Exemplar)
}

::google::protobuf::uint8* Distribution_Exemplar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution.Exemplar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_timestamp(), deterministic, target);
  }

  // repeated .google.protobuf.Any attachments = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attachments_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->attachments(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution.Exemplar)
  return target;
}

size_t Distribution_Exemplar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution.Exemplar)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Any attachments = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->attachments_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attachments(static_cast<int>(i)));
    }
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // double value = 1;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution_Exemplar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution.Exemplar)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution_Exemplar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution_Exemplar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution.Exemplar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution.Exemplar)
    MergeFrom(*source);
  }
}

void Distribution_Exemplar::MergeFrom(const Distribution_Exemplar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution.Exemplar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attachments_.MergeFrom(from.attachments_);
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Distribution_Exemplar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution.Exemplar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution_Exemplar::CopyFrom(const Distribution_Exemplar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution.Exemplar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution_Exemplar::IsInitialized() const {
  return true;
}

void Distribution_Exemplar::Swap(Distribution_Exemplar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution_Exemplar::InternalSwap(Distribution_Exemplar* other) {
  using std::swap;
  CastToBase(&attachments_)->InternalSwap(CastToBase(&other->attachments_));
  swap(timestamp_, other->timestamp_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution_Exemplar::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Distribution::InitAsDefaultInstance() {
  ::google::api::_Distribution_default_instance_._instance.get_mutable()->range_ = const_cast< ::google::api::Distribution_Range*>(
      ::google::api::Distribution_Range::internal_default_instance());
  ::google::api::_Distribution_default_instance_._instance.get_mutable()->bucket_options_ = const_cast< ::google::api::Distribution_BucketOptions*>(
      ::google::api::Distribution_BucketOptions::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Distribution::kCountFieldNumber;
const int Distribution::kMeanFieldNumber;
const int Distribution::kSumOfSquaredDeviationFieldNumber;
const int Distribution::kRangeFieldNumber;
const int Distribution::kBucketOptionsFieldNumber;
const int Distribution::kBucketCountsFieldNumber;
const int Distribution::kExemplarsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Distribution::Distribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Distribution)
}
Distribution::Distribution(const Distribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bucket_counts_(from.bucket_counts_),
      exemplars_(from.exemplars_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_range()) {
    range_ = new ::google::api::Distribution_Range(*from.range_);
  } else {
    range_ = NULL;
  }
  if (from.has_bucket_options()) {
    bucket_options_ = new ::google::api::Distribution_BucketOptions(*from.bucket_options_);
  } else {
    bucket_options_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&sum_of_squared_deviation_) -
    reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  // @@protoc_insertion_point(copy_constructor:google.api.Distribution)
}

void Distribution::SharedCtor() {
  ::memset(&range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_of_squared_deviation_) -
      reinterpret_cast<char*>(&range_)) + sizeof(sum_of_squared_deviation_));
}

Distribution::~Distribution() {
  // @@protoc_insertion_point(destructor:google.api.Distribution)
  SharedDtor();
}

void Distribution::SharedDtor() {
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete bucket_options_;
}

void Distribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Distribution::descriptor() {
  ::protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Distribution& Distribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fdistribution_2eproto::scc_info_Distribution.base);
  return *internal_default_instance();
}


void Distribution::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Distribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bucket_counts_.Clear();
  exemplars_.Clear();
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
  if (GetArenaNoVirtual() == NULL && bucket_options_ != NULL) {
    delete bucket_options_;
  }
  bucket_options_ = NULL;
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_of_squared_deviation_) -
      reinterpret_cast<char*>(&count_)) + sizeof(sum_of_squared_deviation_));
  _internal_metadata_.Clear();
}

bool Distribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Distribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double mean = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &mean_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double sum_of_squared_deviation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &sum_of_squared_deviation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Distribution.Range range = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.Distribution.BucketOptions bucket_options = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bucket_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 bucket_counts = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_bucket_counts())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 58u, input, this->mutable_bucket_counts())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.Distribution.Exemplar exemplars = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_exemplars()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Distribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Distribution)
  return false;
#undef DO_
}

void Distribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Distribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->count(), output);
  }

  // double mean = 2;
  if (this->mean() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->mean(), output);
  }

  // double sum_of_squared_deviation = 3;
  if (this->sum_of_squared_deviation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->sum_of_squared_deviation(), output);
  }

  // .google.api.Distribution.Range range = 4;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_range(), output);
  }

  // .google.api.Distribution.BucketOptions bucket_options = 6;
  if (this->has_bucket_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_bucket_options(), output);
  }

  // repeated int64 bucket_counts = 7;
  if (this->bucket_counts_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _bucket_counts_cached_byte_size_));
  }
  for (int i = 0, n = this->bucket_counts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->bucket_counts(i), output);
  }

  // repeated .google.api.Distribution.Exemplar exemplars = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exemplars_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->exemplars(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Distribution)
}

::google::protobuf::uint8* Distribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Distribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->count(), target);
  }

  // double mean = 2;
  if (this->mean() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->mean(), target);
  }

  // double sum_of_squared_deviation = 3;
  if (this->sum_of_squared_deviation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->sum_of_squared_deviation(), target);
  }

  // .google.api.Distribution.Range range = 4;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_range(), deterministic, target);
  }

  // .google.api.Distribution.BucketOptions bucket_options = 6;
  if (this->has_bucket_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_bucket_options(), deterministic, target);
  }

  // repeated int64 bucket_counts = 7;
  if (this->bucket_counts_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _bucket_counts_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->bucket_counts_, target);
  }

  // repeated .google.api.Distribution.Exemplar exemplars = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->exemplars_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->exemplars(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Distribution)
  return target;
}

size_t Distribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Distribution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 bucket_counts = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->bucket_counts_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _bucket_counts_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .google.api.Distribution.Exemplar exemplars = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->exemplars_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->exemplars(static_cast<int>(i)));
    }
  }

  // .google.api.Distribution.Range range = 4;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // .google.api.Distribution.BucketOptions bucket_options = 6;
  if (this->has_bucket_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bucket_options_);
  }

  // int64 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  // double mean = 2;
  if (this->mean() != 0) {
    total_size += 1 + 8;
  }

  // double sum_of_squared_deviation = 3;
  if (this->sum_of_squared_deviation() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Distribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  const Distribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Distribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Distribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Distribution)
    MergeFrom(*source);
  }
}

void Distribution::MergeFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Distribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bucket_counts_.MergeFrom(from.bucket_counts_);
  exemplars_.MergeFrom(from.exemplars_);
  if (from.has_range()) {
    mutable_range()->::google::api::Distribution_Range::MergeFrom(from.range());
  }
  if (from.has_bucket_options()) {
    mutable_bucket_options()->::google::api::Distribution_BucketOptions::MergeFrom(from.bucket_options());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.mean() != 0) {
    set_mean(from.mean());
  }
  if (from.sum_of_squared_deviation() != 0) {
    set_sum_of_squared_deviation(from.sum_of_squared_deviation());
  }
}

void Distribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Distribution::CopyFrom(const Distribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Distribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Distribution::IsInitialized() const {
  return true;
}

void Distribution::Swap(Distribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Distribution::InternalSwap(Distribution* other) {
  using std::swap;
  bucket_counts_.InternalSwap(&other->bucket_counts_);
  CastToBase(&exemplars_)->InternalSwap(CastToBase(&other->exemplars_));
  swap(range_, other->range_);
  swap(bucket_options_, other->bucket_options_);
  swap(count_, other->count_);
  swap(mean_, other->mean_);
  swap(sum_of_squared_deviation_, other->sum_of_squared_deviation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Distribution::GetMetadata() const {
  protobuf_google_2fapi_2fdistribution_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fdistribution_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution_Range* Arena::CreateMaybeMessage< ::google::api::Distribution_Range >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution_Range >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution_BucketOptions_Linear* Arena::CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Linear >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution_BucketOptions_Linear >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution_BucketOptions_Exponential* Arena::CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Exponential >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution_BucketOptions_Exponential >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution_BucketOptions_Explicit* Arena::CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Explicit >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution_BucketOptions_Explicit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution_BucketOptions* Arena::CreateMaybeMessage< ::google::api::Distribution_BucketOptions >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution_BucketOptions >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution_Exemplar* Arena::CreateMaybeMessage< ::google::api::Distribution_Exemplar >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution_Exemplar >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Distribution* Arena::CreateMaybeMessage< ::google::api::Distribution >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Distribution >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
