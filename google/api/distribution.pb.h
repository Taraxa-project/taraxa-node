// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/distribution.proto

#ifndef PROTOBUF_INCLUDED_google_2fapi_2fdistribution_2eproto
#define PROTOBUF_INCLUDED_google_2fapi_2fdistribution_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fdistribution_2eproto 

namespace protobuf_google_2fapi_2fdistribution_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fapi_2fdistribution_2eproto
namespace google {
namespace api {
class Distribution;
class DistributionDefaultTypeInternal;
extern DistributionDefaultTypeInternal _Distribution_default_instance_;
class Distribution_BucketOptions;
class Distribution_BucketOptionsDefaultTypeInternal;
extern Distribution_BucketOptionsDefaultTypeInternal _Distribution_BucketOptions_default_instance_;
class Distribution_BucketOptions_Explicit;
class Distribution_BucketOptions_ExplicitDefaultTypeInternal;
extern Distribution_BucketOptions_ExplicitDefaultTypeInternal _Distribution_BucketOptions_Explicit_default_instance_;
class Distribution_BucketOptions_Exponential;
class Distribution_BucketOptions_ExponentialDefaultTypeInternal;
extern Distribution_BucketOptions_ExponentialDefaultTypeInternal _Distribution_BucketOptions_Exponential_default_instance_;
class Distribution_BucketOptions_Linear;
class Distribution_BucketOptions_LinearDefaultTypeInternal;
extern Distribution_BucketOptions_LinearDefaultTypeInternal _Distribution_BucketOptions_Linear_default_instance_;
class Distribution_Exemplar;
class Distribution_ExemplarDefaultTypeInternal;
extern Distribution_ExemplarDefaultTypeInternal _Distribution_Exemplar_default_instance_;
class Distribution_Range;
class Distribution_RangeDefaultTypeInternal;
extern Distribution_RangeDefaultTypeInternal _Distribution_Range_default_instance_;
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::api::Distribution* Arena::CreateMaybeMessage<::google::api::Distribution>(Arena*);
template<> ::google::api::Distribution_BucketOptions* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions>(Arena*);
template<> ::google::api::Distribution_BucketOptions_Explicit* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions_Explicit>(Arena*);
template<> ::google::api::Distribution_BucketOptions_Exponential* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions_Exponential>(Arena*);
template<> ::google::api::Distribution_BucketOptions_Linear* Arena::CreateMaybeMessage<::google::api::Distribution_BucketOptions_Linear>(Arena*);
template<> ::google::api::Distribution_Exemplar* Arena::CreateMaybeMessage<::google::api::Distribution_Exemplar>(Arena*);
template<> ::google::api::Distribution_Range* Arena::CreateMaybeMessage<::google::api::Distribution_Range>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace api {

// ===================================================================

class Distribution_Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.Range) */ {
 public:
  Distribution_Range();
  virtual ~Distribution_Range();

  Distribution_Range(const Distribution_Range& from);

  inline Distribution_Range& operator=(const Distribution_Range& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_Range(Distribution_Range&& from) noexcept
    : Distribution_Range() {
    *this = ::std::move(from);
  }

  inline Distribution_Range& operator=(Distribution_Range&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_Range& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_Range* internal_default_instance() {
    return reinterpret_cast<const Distribution_Range*>(
               &_Distribution_Range_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Distribution_Range* other);
  friend void swap(Distribution_Range& a, Distribution_Range& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_Range* New() const final {
    return CreateMaybeMessage<Distribution_Range>(NULL);
  }

  Distribution_Range* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_Range>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_Range& from);
  void MergeFrom(const Distribution_Range& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_Range* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  double min() const;
  void set_min(double value);

  // double max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  double max() const;
  void set_max(double value);

  // @@protoc_insertion_point(class_scope:google.api.Distribution.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double min_;
  double max_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions_Linear : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions.Linear) */ {
 public:
  Distribution_BucketOptions_Linear();
  virtual ~Distribution_BucketOptions_Linear();

  Distribution_BucketOptions_Linear(const Distribution_BucketOptions_Linear& from);

  inline Distribution_BucketOptions_Linear& operator=(const Distribution_BucketOptions_Linear& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_BucketOptions_Linear(Distribution_BucketOptions_Linear&& from) noexcept
    : Distribution_BucketOptions_Linear() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions_Linear& operator=(Distribution_BucketOptions_Linear&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_BucketOptions_Linear& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_BucketOptions_Linear* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions_Linear*>(
               &_Distribution_BucketOptions_Linear_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Distribution_BucketOptions_Linear* other);
  friend void swap(Distribution_BucketOptions_Linear& a, Distribution_BucketOptions_Linear& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_BucketOptions_Linear* New() const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Linear>(NULL);
  }

  Distribution_BucketOptions_Linear* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Linear>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_BucketOptions_Linear& from);
  void MergeFrom(const Distribution_BucketOptions_Linear& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions_Linear* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double width = 2;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  double width() const;
  void set_width(double value);

  // double offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  double offset() const;
  void set_offset(double value);

  // int32 num_finite_buckets = 1;
  void clear_num_finite_buckets();
  static const int kNumFiniteBucketsFieldNumber = 1;
  ::google::protobuf::int32 num_finite_buckets() const;
  void set_num_finite_buckets(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Linear)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double width_;
  double offset_;
  ::google::protobuf::int32 num_finite_buckets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions_Exponential : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions.Exponential) */ {
 public:
  Distribution_BucketOptions_Exponential();
  virtual ~Distribution_BucketOptions_Exponential();

  Distribution_BucketOptions_Exponential(const Distribution_BucketOptions_Exponential& from);

  inline Distribution_BucketOptions_Exponential& operator=(const Distribution_BucketOptions_Exponential& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_BucketOptions_Exponential(Distribution_BucketOptions_Exponential&& from) noexcept
    : Distribution_BucketOptions_Exponential() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions_Exponential& operator=(Distribution_BucketOptions_Exponential&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_BucketOptions_Exponential& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_BucketOptions_Exponential* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions_Exponential*>(
               &_Distribution_BucketOptions_Exponential_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Distribution_BucketOptions_Exponential* other);
  friend void swap(Distribution_BucketOptions_Exponential& a, Distribution_BucketOptions_Exponential& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_BucketOptions_Exponential* New() const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Exponential>(NULL);
  }

  Distribution_BucketOptions_Exponential* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Exponential>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_BucketOptions_Exponential& from);
  void MergeFrom(const Distribution_BucketOptions_Exponential& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions_Exponential* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // double growth_factor = 2;
  void clear_growth_factor();
  static const int kGrowthFactorFieldNumber = 2;
  double growth_factor() const;
  void set_growth_factor(double value);

  // double scale = 3;
  void clear_scale();
  static const int kScaleFieldNumber = 3;
  double scale() const;
  void set_scale(double value);

  // int32 num_finite_buckets = 1;
  void clear_num_finite_buckets();
  static const int kNumFiniteBucketsFieldNumber = 1;
  ::google::protobuf::int32 num_finite_buckets() const;
  void set_num_finite_buckets(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Exponential)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  double growth_factor_;
  double scale_;
  ::google::protobuf::int32 num_finite_buckets_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions_Explicit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions.Explicit) */ {
 public:
  Distribution_BucketOptions_Explicit();
  virtual ~Distribution_BucketOptions_Explicit();

  Distribution_BucketOptions_Explicit(const Distribution_BucketOptions_Explicit& from);

  inline Distribution_BucketOptions_Explicit& operator=(const Distribution_BucketOptions_Explicit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_BucketOptions_Explicit(Distribution_BucketOptions_Explicit&& from) noexcept
    : Distribution_BucketOptions_Explicit() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions_Explicit& operator=(Distribution_BucketOptions_Explicit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_BucketOptions_Explicit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_BucketOptions_Explicit* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions_Explicit*>(
               &_Distribution_BucketOptions_Explicit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Distribution_BucketOptions_Explicit* other);
  friend void swap(Distribution_BucketOptions_Explicit& a, Distribution_BucketOptions_Explicit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_BucketOptions_Explicit* New() const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Explicit>(NULL);
  }

  Distribution_BucketOptions_Explicit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_BucketOptions_Explicit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_BucketOptions_Explicit& from);
  void MergeFrom(const Distribution_BucketOptions_Explicit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions_Explicit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double bounds = 1;
  int bounds_size() const;
  void clear_bounds();
  static const int kBoundsFieldNumber = 1;
  double bounds(int index) const;
  void set_bounds(int index, double value);
  void add_bounds(double value);
  const ::google::protobuf::RepeatedField< double >&
      bounds() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_bounds();

  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions.Explicit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > bounds_;
  mutable int _bounds_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_BucketOptions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.BucketOptions) */ {
 public:
  Distribution_BucketOptions();
  virtual ~Distribution_BucketOptions();

  Distribution_BucketOptions(const Distribution_BucketOptions& from);

  inline Distribution_BucketOptions& operator=(const Distribution_BucketOptions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_BucketOptions(Distribution_BucketOptions&& from) noexcept
    : Distribution_BucketOptions() {
    *this = ::std::move(from);
  }

  inline Distribution_BucketOptions& operator=(Distribution_BucketOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_BucketOptions& default_instance();

  enum OptionsCase {
    kLinearBuckets = 1,
    kExponentialBuckets = 2,
    kExplicitBuckets = 3,
    OPTIONS_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_BucketOptions* internal_default_instance() {
    return reinterpret_cast<const Distribution_BucketOptions*>(
               &_Distribution_BucketOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Distribution_BucketOptions* other);
  friend void swap(Distribution_BucketOptions& a, Distribution_BucketOptions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_BucketOptions* New() const final {
    return CreateMaybeMessage<Distribution_BucketOptions>(NULL);
  }

  Distribution_BucketOptions* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_BucketOptions>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_BucketOptions& from);
  void MergeFrom(const Distribution_BucketOptions& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_BucketOptions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Distribution_BucketOptions_Linear Linear;
  typedef Distribution_BucketOptions_Exponential Exponential;
  typedef Distribution_BucketOptions_Explicit Explicit;

  // accessors -------------------------------------------------------

  // .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
  bool has_linear_buckets() const;
  void clear_linear_buckets();
  static const int kLinearBucketsFieldNumber = 1;
  private:
  const ::google::api::Distribution_BucketOptions_Linear& _internal_linear_buckets() const;
  public:
  const ::google::api::Distribution_BucketOptions_Linear& linear_buckets() const;
  ::google::api::Distribution_BucketOptions_Linear* release_linear_buckets();
  ::google::api::Distribution_BucketOptions_Linear* mutable_linear_buckets();
  void set_allocated_linear_buckets(::google::api::Distribution_BucketOptions_Linear* linear_buckets);

  // .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
  bool has_exponential_buckets() const;
  void clear_exponential_buckets();
  static const int kExponentialBucketsFieldNumber = 2;
  private:
  const ::google::api::Distribution_BucketOptions_Exponential& _internal_exponential_buckets() const;
  public:
  const ::google::api::Distribution_BucketOptions_Exponential& exponential_buckets() const;
  ::google::api::Distribution_BucketOptions_Exponential* release_exponential_buckets();
  ::google::api::Distribution_BucketOptions_Exponential* mutable_exponential_buckets();
  void set_allocated_exponential_buckets(::google::api::Distribution_BucketOptions_Exponential* exponential_buckets);

  // .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
  bool has_explicit_buckets() const;
  void clear_explicit_buckets();
  static const int kExplicitBucketsFieldNumber = 3;
  private:
  const ::google::api::Distribution_BucketOptions_Explicit& _internal_explicit_buckets() const;
  public:
  const ::google::api::Distribution_BucketOptions_Explicit& explicit_buckets() const;
  ::google::api::Distribution_BucketOptions_Explicit* release_explicit_buckets();
  ::google::api::Distribution_BucketOptions_Explicit* mutable_explicit_buckets();
  void set_allocated_explicit_buckets(::google::api::Distribution_BucketOptions_Explicit* explicit_buckets);

  void clear_options();
  OptionsCase options_case() const;
  // @@protoc_insertion_point(class_scope:google.api.Distribution.BucketOptions)
 private:
  void set_has_linear_buckets();
  void set_has_exponential_buckets();
  void set_has_explicit_buckets();

  inline bool has_options() const;
  inline void clear_has_options();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union OptionsUnion {
    OptionsUnion() {}
    ::google::api::Distribution_BucketOptions_Linear* linear_buckets_;
    ::google::api::Distribution_BucketOptions_Exponential* exponential_buckets_;
    ::google::api::Distribution_BucketOptions_Explicit* explicit_buckets_;
  } options_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution_Exemplar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution.Exemplar) */ {
 public:
  Distribution_Exemplar();
  virtual ~Distribution_Exemplar();

  Distribution_Exemplar(const Distribution_Exemplar& from);

  inline Distribution_Exemplar& operator=(const Distribution_Exemplar& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution_Exemplar(Distribution_Exemplar&& from) noexcept
    : Distribution_Exemplar() {
    *this = ::std::move(from);
  }

  inline Distribution_Exemplar& operator=(Distribution_Exemplar&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution_Exemplar& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution_Exemplar* internal_default_instance() {
    return reinterpret_cast<const Distribution_Exemplar*>(
               &_Distribution_Exemplar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Distribution_Exemplar* other);
  friend void swap(Distribution_Exemplar& a, Distribution_Exemplar& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution_Exemplar* New() const final {
    return CreateMaybeMessage<Distribution_Exemplar>(NULL);
  }

  Distribution_Exemplar* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution_Exemplar>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution_Exemplar& from);
  void MergeFrom(const Distribution_Exemplar& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution_Exemplar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any attachments = 3;
  int attachments_size() const;
  void clear_attachments();
  static const int kAttachmentsFieldNumber = 3;
  ::google::protobuf::Any* mutable_attachments(int index);
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_attachments();
  const ::google::protobuf::Any& attachments(int index) const;
  ::google::protobuf::Any* add_attachments();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      attachments() const;

  // .google.protobuf.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_timestamp() const;
  public:
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* release_timestamp();
  ::google::protobuf::Timestamp* mutable_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // double value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  double value() const;
  void set_value(double value);

  // @@protoc_insertion_point(class_scope:google.api.Distribution.Exemplar)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > attachments_;
  ::google::protobuf::Timestamp* timestamp_;
  double value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Distribution : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.Distribution) */ {
 public:
  Distribution();
  virtual ~Distribution();

  Distribution(const Distribution& from);

  inline Distribution& operator=(const Distribution& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Distribution(Distribution&& from) noexcept
    : Distribution() {
    *this = ::std::move(from);
  }

  inline Distribution& operator=(Distribution&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Distribution& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Distribution* internal_default_instance() {
    return reinterpret_cast<const Distribution*>(
               &_Distribution_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Distribution* other);
  friend void swap(Distribution& a, Distribution& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Distribution* New() const final {
    return CreateMaybeMessage<Distribution>(NULL);
  }

  Distribution* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Distribution>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Distribution& from);
  void MergeFrom(const Distribution& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Distribution* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Distribution_Range Range;
  typedef Distribution_BucketOptions BucketOptions;
  typedef Distribution_Exemplar Exemplar;

  // accessors -------------------------------------------------------

  // repeated int64 bucket_counts = 7;
  int bucket_counts_size() const;
  void clear_bucket_counts();
  static const int kBucketCountsFieldNumber = 7;
  ::google::protobuf::int64 bucket_counts(int index) const;
  void set_bucket_counts(int index, ::google::protobuf::int64 value);
  void add_bucket_counts(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      bucket_counts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_bucket_counts();

  // repeated .google.api.Distribution.Exemplar exemplars = 10;
  int exemplars_size() const;
  void clear_exemplars();
  static const int kExemplarsFieldNumber = 10;
  ::google::api::Distribution_Exemplar* mutable_exemplars(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::Distribution_Exemplar >*
      mutable_exemplars();
  const ::google::api::Distribution_Exemplar& exemplars(int index) const;
  ::google::api::Distribution_Exemplar* add_exemplars();
  const ::google::protobuf::RepeatedPtrField< ::google::api::Distribution_Exemplar >&
      exemplars() const;

  // .google.api.Distribution.Range range = 4;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 4;
  private:
  const ::google::api::Distribution_Range& _internal_range() const;
  public:
  const ::google::api::Distribution_Range& range() const;
  ::google::api::Distribution_Range* release_range();
  ::google::api::Distribution_Range* mutable_range();
  void set_allocated_range(::google::api::Distribution_Range* range);

  // .google.api.Distribution.BucketOptions bucket_options = 6;
  bool has_bucket_options() const;
  void clear_bucket_options();
  static const int kBucketOptionsFieldNumber = 6;
  private:
  const ::google::api::Distribution_BucketOptions& _internal_bucket_options() const;
  public:
  const ::google::api::Distribution_BucketOptions& bucket_options() const;
  ::google::api::Distribution_BucketOptions* release_bucket_options();
  ::google::api::Distribution_BucketOptions* mutable_bucket_options();
  void set_allocated_bucket_options(::google::api::Distribution_BucketOptions* bucket_options);

  // int64 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // double mean = 2;
  void clear_mean();
  static const int kMeanFieldNumber = 2;
  double mean() const;
  void set_mean(double value);

  // double sum_of_squared_deviation = 3;
  void clear_sum_of_squared_deviation();
  static const int kSumOfSquaredDeviationFieldNumber = 3;
  double sum_of_squared_deviation() const;
  void set_sum_of_squared_deviation(double value);

  // @@protoc_insertion_point(class_scope:google.api.Distribution)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > bucket_counts_;
  mutable int _bucket_counts_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::google::api::Distribution_Exemplar > exemplars_;
  ::google::api::Distribution_Range* range_;
  ::google::api::Distribution_BucketOptions* bucket_options_;
  ::google::protobuf::int64 count_;
  double mean_;
  double sum_of_squared_deviation_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fdistribution_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Distribution_Range

// double min = 1;
inline void Distribution_Range::clear_min() {
  min_ = 0;
}
inline double Distribution_Range::min() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Range.min)
  return min_;
}
inline void Distribution_Range::set_min(double value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.Range.min)
}

// double max = 2;
inline void Distribution_Range::clear_max() {
  max_ = 0;
}
inline double Distribution_Range::max() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Range.max)
  return max_;
}
inline void Distribution_Range::set_max(double value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.Range.max)
}

// -------------------------------------------------------------------

// Distribution_BucketOptions_Linear

// int32 num_finite_buckets = 1;
inline void Distribution_BucketOptions_Linear::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
inline ::google::protobuf::int32 Distribution_BucketOptions_Linear::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Linear.num_finite_buckets)
  return num_finite_buckets_;
}
inline void Distribution_BucketOptions_Linear::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Linear.num_finite_buckets)
}

// double width = 2;
inline void Distribution_BucketOptions_Linear::clear_width() {
  width_ = 0;
}
inline double Distribution_BucketOptions_Linear::width() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Linear.width)
  return width_;
}
inline void Distribution_BucketOptions_Linear::set_width(double value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Linear.width)
}

// double offset = 3;
inline void Distribution_BucketOptions_Linear::clear_offset() {
  offset_ = 0;
}
inline double Distribution_BucketOptions_Linear::offset() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Linear.offset)
  return offset_;
}
inline void Distribution_BucketOptions_Linear::set_offset(double value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Linear.offset)
}

// -------------------------------------------------------------------

// Distribution_BucketOptions_Exponential

// int32 num_finite_buckets = 1;
inline void Distribution_BucketOptions_Exponential::clear_num_finite_buckets() {
  num_finite_buckets_ = 0;
}
inline ::google::protobuf::int32 Distribution_BucketOptions_Exponential::num_finite_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Exponential.num_finite_buckets)
  return num_finite_buckets_;
}
inline void Distribution_BucketOptions_Exponential::set_num_finite_buckets(::google::protobuf::int32 value) {
  
  num_finite_buckets_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Exponential.num_finite_buckets)
}

// double growth_factor = 2;
inline void Distribution_BucketOptions_Exponential::clear_growth_factor() {
  growth_factor_ = 0;
}
inline double Distribution_BucketOptions_Exponential::growth_factor() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Exponential.growth_factor)
  return growth_factor_;
}
inline void Distribution_BucketOptions_Exponential::set_growth_factor(double value) {
  
  growth_factor_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Exponential.growth_factor)
}

// double scale = 3;
inline void Distribution_BucketOptions_Exponential::clear_scale() {
  scale_ = 0;
}
inline double Distribution_BucketOptions_Exponential::scale() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Exponential.scale)
  return scale_;
}
inline void Distribution_BucketOptions_Exponential::set_scale(double value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Exponential.scale)
}

// -------------------------------------------------------------------

// Distribution_BucketOptions_Explicit

// repeated double bounds = 1;
inline int Distribution_BucketOptions_Explicit::bounds_size() const {
  return bounds_.size();
}
inline void Distribution_BucketOptions_Explicit::clear_bounds() {
  bounds_.Clear();
}
inline double Distribution_BucketOptions_Explicit::bounds(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.Explicit.bounds)
  return bounds_.Get(index);
}
inline void Distribution_BucketOptions_Explicit::set_bounds(int index, double value) {
  bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.BucketOptions.Explicit.bounds)
}
inline void Distribution_BucketOptions_Explicit::add_bounds(double value) {
  bounds_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.Distribution.BucketOptions.Explicit.bounds)
}
inline const ::google::protobuf::RepeatedField< double >&
Distribution_BucketOptions_Explicit::bounds() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.BucketOptions.Explicit.bounds)
  return bounds_;
}
inline ::google::protobuf::RepeatedField< double >*
Distribution_BucketOptions_Explicit::mutable_bounds() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.BucketOptions.Explicit.bounds)
  return &bounds_;
}

// -------------------------------------------------------------------

// Distribution_BucketOptions

// .google.api.Distribution.BucketOptions.Linear linear_buckets = 1;
inline bool Distribution_BucketOptions::has_linear_buckets() const {
  return options_case() == kLinearBuckets;
}
inline void Distribution_BucketOptions::set_has_linear_buckets() {
  _oneof_case_[0] = kLinearBuckets;
}
inline void Distribution_BucketOptions::clear_linear_buckets() {
  if (has_linear_buckets()) {
    delete options_.linear_buckets_;
    clear_has_options();
  }
}
inline const ::google::api::Distribution_BucketOptions_Linear& Distribution_BucketOptions::_internal_linear_buckets() const {
  return *options_.linear_buckets_;
}
inline ::google::api::Distribution_BucketOptions_Linear* Distribution_BucketOptions::release_linear_buckets() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.BucketOptions.linear_buckets)
  if (has_linear_buckets()) {
    clear_has_options();
      ::google::api::Distribution_BucketOptions_Linear* temp = options_.linear_buckets_;
    options_.linear_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::Distribution_BucketOptions_Linear& Distribution_BucketOptions::linear_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.linear_buckets)
  return has_linear_buckets()
      ? *options_.linear_buckets_
      : *reinterpret_cast< ::google::api::Distribution_BucketOptions_Linear*>(&::google::api::_Distribution_BucketOptions_Linear_default_instance_);
}
inline ::google::api::Distribution_BucketOptions_Linear* Distribution_BucketOptions::mutable_linear_buckets() {
  if (!has_linear_buckets()) {
    clear_options();
    set_has_linear_buckets();
    options_.linear_buckets_ = CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Linear >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.BucketOptions.linear_buckets)
  return options_.linear_buckets_;
}

// .google.api.Distribution.BucketOptions.Exponential exponential_buckets = 2;
inline bool Distribution_BucketOptions::has_exponential_buckets() const {
  return options_case() == kExponentialBuckets;
}
inline void Distribution_BucketOptions::set_has_exponential_buckets() {
  _oneof_case_[0] = kExponentialBuckets;
}
inline void Distribution_BucketOptions::clear_exponential_buckets() {
  if (has_exponential_buckets()) {
    delete options_.exponential_buckets_;
    clear_has_options();
  }
}
inline const ::google::api::Distribution_BucketOptions_Exponential& Distribution_BucketOptions::_internal_exponential_buckets() const {
  return *options_.exponential_buckets_;
}
inline ::google::api::Distribution_BucketOptions_Exponential* Distribution_BucketOptions::release_exponential_buckets() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.BucketOptions.exponential_buckets)
  if (has_exponential_buckets()) {
    clear_has_options();
      ::google::api::Distribution_BucketOptions_Exponential* temp = options_.exponential_buckets_;
    options_.exponential_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::Distribution_BucketOptions_Exponential& Distribution_BucketOptions::exponential_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.exponential_buckets)
  return has_exponential_buckets()
      ? *options_.exponential_buckets_
      : *reinterpret_cast< ::google::api::Distribution_BucketOptions_Exponential*>(&::google::api::_Distribution_BucketOptions_Exponential_default_instance_);
}
inline ::google::api::Distribution_BucketOptions_Exponential* Distribution_BucketOptions::mutable_exponential_buckets() {
  if (!has_exponential_buckets()) {
    clear_options();
    set_has_exponential_buckets();
    options_.exponential_buckets_ = CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Exponential >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.BucketOptions.exponential_buckets)
  return options_.exponential_buckets_;
}

// .google.api.Distribution.BucketOptions.Explicit explicit_buckets = 3;
inline bool Distribution_BucketOptions::has_explicit_buckets() const {
  return options_case() == kExplicitBuckets;
}
inline void Distribution_BucketOptions::set_has_explicit_buckets() {
  _oneof_case_[0] = kExplicitBuckets;
}
inline void Distribution_BucketOptions::clear_explicit_buckets() {
  if (has_explicit_buckets()) {
    delete options_.explicit_buckets_;
    clear_has_options();
  }
}
inline const ::google::api::Distribution_BucketOptions_Explicit& Distribution_BucketOptions::_internal_explicit_buckets() const {
  return *options_.explicit_buckets_;
}
inline ::google::api::Distribution_BucketOptions_Explicit* Distribution_BucketOptions::release_explicit_buckets() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.BucketOptions.explicit_buckets)
  if (has_explicit_buckets()) {
    clear_has_options();
      ::google::api::Distribution_BucketOptions_Explicit* temp = options_.explicit_buckets_;
    options_.explicit_buckets_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::Distribution_BucketOptions_Explicit& Distribution_BucketOptions::explicit_buckets() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.BucketOptions.explicit_buckets)
  return has_explicit_buckets()
      ? *options_.explicit_buckets_
      : *reinterpret_cast< ::google::api::Distribution_BucketOptions_Explicit*>(&::google::api::_Distribution_BucketOptions_Explicit_default_instance_);
}
inline ::google::api::Distribution_BucketOptions_Explicit* Distribution_BucketOptions::mutable_explicit_buckets() {
  if (!has_explicit_buckets()) {
    clear_options();
    set_has_explicit_buckets();
    options_.explicit_buckets_ = CreateMaybeMessage< ::google::api::Distribution_BucketOptions_Explicit >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.BucketOptions.explicit_buckets)
  return options_.explicit_buckets_;
}

inline bool Distribution_BucketOptions::has_options() const {
  return options_case() != OPTIONS_NOT_SET;
}
inline void Distribution_BucketOptions::clear_has_options() {
  _oneof_case_[0] = OPTIONS_NOT_SET;
}
inline Distribution_BucketOptions::OptionsCase Distribution_BucketOptions::options_case() const {
  return Distribution_BucketOptions::OptionsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Distribution_Exemplar

// double value = 1;
inline void Distribution_Exemplar::clear_value() {
  value_ = 0;
}
inline double Distribution_Exemplar::value() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Exemplar.value)
  return value_;
}
inline void Distribution_Exemplar::set_value(double value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.Exemplar.value)
}

// .google.protobuf.Timestamp timestamp = 2;
inline bool Distribution_Exemplar::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::google::protobuf::Timestamp& Distribution_Exemplar::_internal_timestamp() const {
  return *timestamp_;
}
inline const ::google::protobuf::Timestamp& Distribution_Exemplar::timestamp() const {
  const ::google::protobuf::Timestamp* p = timestamp_;
  // @@protoc_insertion_point(field_get:google.api.Distribution.Exemplar.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Distribution_Exemplar::release_timestamp() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.Exemplar.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Distribution_Exemplar::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    timestamp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.Exemplar.timestamp)
  return timestamp_;
}
inline void Distribution_Exemplar::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.Exemplar.timestamp)
}

// repeated .google.protobuf.Any attachments = 3;
inline int Distribution_Exemplar::attachments_size() const {
  return attachments_.size();
}
inline ::google::protobuf::Any* Distribution_Exemplar::mutable_attachments(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.Exemplar.attachments)
  return attachments_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
Distribution_Exemplar::mutable_attachments() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.Exemplar.attachments)
  return &attachments_;
}
inline const ::google::protobuf::Any& Distribution_Exemplar::attachments(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.Exemplar.attachments)
  return attachments_.Get(index);
}
inline ::google::protobuf::Any* Distribution_Exemplar::add_attachments() {
  // @@protoc_insertion_point(field_add:google.api.Distribution.Exemplar.attachments)
  return attachments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
Distribution_Exemplar::attachments() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.Exemplar.attachments)
  return attachments_;
}

// -------------------------------------------------------------------

// Distribution

// int64 count = 1;
inline void Distribution::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Distribution::count() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.count)
  return count_;
}
inline void Distribution::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.count)
}

// double mean = 2;
inline void Distribution::clear_mean() {
  mean_ = 0;
}
inline double Distribution::mean() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.mean)
  return mean_;
}
inline void Distribution::set_mean(double value) {
  
  mean_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.mean)
}

// double sum_of_squared_deviation = 3;
inline void Distribution::clear_sum_of_squared_deviation() {
  sum_of_squared_deviation_ = 0;
}
inline double Distribution::sum_of_squared_deviation() const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.sum_of_squared_deviation)
  return sum_of_squared_deviation_;
}
inline void Distribution::set_sum_of_squared_deviation(double value) {
  
  sum_of_squared_deviation_ = value;
  // @@protoc_insertion_point(field_set:google.api.Distribution.sum_of_squared_deviation)
}

// .google.api.Distribution.Range range = 4;
inline bool Distribution::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void Distribution::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
}
inline const ::google::api::Distribution_Range& Distribution::_internal_range() const {
  return *range_;
}
inline const ::google::api::Distribution_Range& Distribution::range() const {
  const ::google::api::Distribution_Range* p = range_;
  // @@protoc_insertion_point(field_get:google.api.Distribution.range)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Distribution_Range*>(
      &::google::api::_Distribution_Range_default_instance_);
}
inline ::google::api::Distribution_Range* Distribution::release_range() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.range)
  
  ::google::api::Distribution_Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline ::google::api::Distribution_Range* Distribution::mutable_range() {
  
  if (range_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Distribution_Range>(GetArenaNoVirtual());
    range_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.range)
  return range_;
}
inline void Distribution::set_allocated_range(::google::api::Distribution_Range* range) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete range_;
  }
  if (range) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      range = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    
  } else {
    
  }
  range_ = range;
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.range)
}

// .google.api.Distribution.BucketOptions bucket_options = 6;
inline bool Distribution::has_bucket_options() const {
  return this != internal_default_instance() && bucket_options_ != NULL;
}
inline void Distribution::clear_bucket_options() {
  if (GetArenaNoVirtual() == NULL && bucket_options_ != NULL) {
    delete bucket_options_;
  }
  bucket_options_ = NULL;
}
inline const ::google::api::Distribution_BucketOptions& Distribution::_internal_bucket_options() const {
  return *bucket_options_;
}
inline const ::google::api::Distribution_BucketOptions& Distribution::bucket_options() const {
  const ::google::api::Distribution_BucketOptions* p = bucket_options_;
  // @@protoc_insertion_point(field_get:google.api.Distribution.bucket_options)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::Distribution_BucketOptions*>(
      &::google::api::_Distribution_BucketOptions_default_instance_);
}
inline ::google::api::Distribution_BucketOptions* Distribution::release_bucket_options() {
  // @@protoc_insertion_point(field_release:google.api.Distribution.bucket_options)
  
  ::google::api::Distribution_BucketOptions* temp = bucket_options_;
  bucket_options_ = NULL;
  return temp;
}
inline ::google::api::Distribution_BucketOptions* Distribution::mutable_bucket_options() {
  
  if (bucket_options_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::Distribution_BucketOptions>(GetArenaNoVirtual());
    bucket_options_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.bucket_options)
  return bucket_options_;
}
inline void Distribution::set_allocated_bucket_options(::google::api::Distribution_BucketOptions* bucket_options) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete bucket_options_;
  }
  if (bucket_options) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bucket_options = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bucket_options, submessage_arena);
    }
    
  } else {
    
  }
  bucket_options_ = bucket_options;
  // @@protoc_insertion_point(field_set_allocated:google.api.Distribution.bucket_options)
}

// repeated int64 bucket_counts = 7;
inline int Distribution::bucket_counts_size() const {
  return bucket_counts_.size();
}
inline void Distribution::clear_bucket_counts() {
  bucket_counts_.Clear();
}
inline ::google::protobuf::int64 Distribution::bucket_counts(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.bucket_counts)
  return bucket_counts_.Get(index);
}
inline void Distribution::set_bucket_counts(int index, ::google::protobuf::int64 value) {
  bucket_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.Distribution.bucket_counts)
}
inline void Distribution::add_bucket_counts(::google::protobuf::int64 value) {
  bucket_counts_.Add(value);
  // @@protoc_insertion_point(field_add:google.api.Distribution.bucket_counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Distribution::bucket_counts() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.bucket_counts)
  return bucket_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Distribution::mutable_bucket_counts() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.bucket_counts)
  return &bucket_counts_;
}

// repeated .google.api.Distribution.Exemplar exemplars = 10;
inline int Distribution::exemplars_size() const {
  return exemplars_.size();
}
inline void Distribution::clear_exemplars() {
  exemplars_.Clear();
}
inline ::google::api::Distribution_Exemplar* Distribution::mutable_exemplars(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.Distribution.exemplars)
  return exemplars_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::Distribution_Exemplar >*
Distribution::mutable_exemplars() {
  // @@protoc_insertion_point(field_mutable_list:google.api.Distribution.exemplars)
  return &exemplars_;
}
inline const ::google::api::Distribution_Exemplar& Distribution::exemplars(int index) const {
  // @@protoc_insertion_point(field_get:google.api.Distribution.exemplars)
  return exemplars_.Get(index);
}
inline ::google::api::Distribution_Exemplar* Distribution::add_exemplars() {
  // @@protoc_insertion_point(field_add:google.api.Distribution.exemplars)
  return exemplars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::Distribution_Exemplar >&
Distribution::exemplars() const {
  // @@protoc_insertion_point(field_list:google.api.Distribution.exemplars)
  return exemplars_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fapi_2fdistribution_2eproto
