// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/source.proto

#include "google/api/expr/v1beta1/source.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SourceInfo_PositionsEntry_DoNotUse;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
class SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceInfo_PositionsEntry_DoNotUse>
      _instance;
} _SourceInfo_PositionsEntry_DoNotUse_default_instance_;
class SourceInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourceInfo>
      _instance;
} _SourceInfo_default_instance_;
class SourcePositionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SourcePosition>
      _instance;
} _SourcePosition_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto {
static void InitDefaultsSourceInfo_PositionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse();
  }
  ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SourceInfo_PositionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSourceInfo_PositionsEntry_DoNotUse}, {}};

static void InitDefaultsSourceInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_SourceInfo_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::SourceInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::SourceInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SourceInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSourceInfo}, {
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourceInfo_PositionsEntry_DoNotUse.base,}};

static void InitDefaultsSourcePosition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_SourcePosition_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::SourcePosition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::SourcePosition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SourcePosition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSourcePosition}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SourceInfo_PositionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourceInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SourcePosition.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, line_offsets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, positions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, column_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::api::expr::v1beta1::SourceInfo)},
  { 17, -1, sizeof(::google::api::expr::v1beta1::SourcePosition)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_SourceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_SourcePosition_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/expr/v1beta1/source.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$google/api/expr/v1beta1/source.proto\022\027"
      "google.api.expr.v1beta1\"\255\001\n\nSourceInfo\022\020"
      "\n\010location\030\002 \001(\t\022\024\n\014line_offsets\030\003 \003(\005\022E"
      "\n\tpositions\030\004 \003(\01322.google.api.expr.v1be"
      "ta1.SourceInfo.PositionsEntry\0320\n\016Positio"
      "nsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\""
      "P\n\016SourcePosition\022\020\n\010location\030\001 \001(\t\022\016\n\006o"
      "ffset\030\002 \001(\005\022\014\n\004line\030\003 \001(\005\022\016\n\006column\030\004 \001("
      "\005Bl\n\033com.google.api.expr.v1beta1B\013Source"
      "ProtoP\001Z;google.golang.org/genproto/goog"
      "leapis/api/expr/v1beta1;expr\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 439);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/expr/v1beta1/source.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse() {}
SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(const SourceInfo_PositionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SourceInfo_PositionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::file_level_metadata[0];
}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SourceInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourceInfo::kLocationFieldNumber;
const int SourceInfo::kLineOffsetsFieldNumber;
const int SourceInfo::kPositionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourceInfo::SourceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourceInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.SourceInfo)
}
SourceInfo::SourceInfo(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  line_offsets_(arena),
  positions_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourceInfo.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.SourceInfo)
}
SourceInfo::SourceInfo(const SourceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      line_offsets_(from.line_offsets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  positions_.MergeFrom(from.positions_);
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.SourceInfo)
}

void SourceInfo::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SourceInfo::~SourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.SourceInfo)
  SharedDtor();
}

void SourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourceInfo::ArenaDtor(void* object) {
  SourceInfo* _this = reinterpret_cast< SourceInfo* >(object);
  (void)_this;
}
void SourceInfo::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SourceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SourceInfo::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourceInfo& SourceInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourceInfo.base);
  return *internal_default_instance();
}


void SourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.SourceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_offsets_.Clear();
  positions_.Clear();
  location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool SourceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1beta1.SourceInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1beta1.SourceInfo.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 line_offsets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_line_offsets())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_line_offsets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, int32> positions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          SourceInfo_PositionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SourceInfo_PositionsEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&positions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1beta1.SourceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1beta1.SourceInfo)
  return false;
#undef DO_
}

void SourceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1beta1.SourceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 2;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourceInfo.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location(), output);
  }

  // repeated int32 line_offsets = 3;
  if (this->line_offsets_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _line_offsets_cached_byte_size_));
  }
  for (int i = 0, n = this->line_offsets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->line_offsets(i), output);
  }

  // map<int32, int32> positions = 4;
  if (!this->positions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->positions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->positions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->positions().begin();
          it != this->positions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SourceInfo_PositionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(positions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<SourceInfo_PositionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->positions().begin();
          it != this->positions().end(); ++it) {
        entry.reset(positions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1beta1.SourceInfo)
}

::google::protobuf::uint8* SourceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.SourceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 2;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourceInfo.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location(), target);
  }

  // repeated int32 line_offsets = 3;
  if (this->line_offsets_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _line_offsets_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->line_offsets_, target);
  }

  // map<int32, int32> positions = 4;
  if (!this->positions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->positions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->positions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->positions().begin();
          it != this->positions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<SourceInfo_PositionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(positions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<SourceInfo_PositionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->positions().begin();
          it != this->positions().end(); ++it) {
        entry.reset(positions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.SourceInfo)
  return target;
}

size_t SourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.SourceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 line_offsets = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->line_offsets_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _line_offsets_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<int32, int32> positions = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->positions_size());
  {
    ::std::unique_ptr<SourceInfo_PositionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->positions().begin();
        it != this->positions().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(positions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string location = 2;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.SourceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.SourceInfo)
    MergeFrom(*source);
  }
}

void SourceInfo::MergeFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_offsets_.MergeFrom(from.line_offsets_);
  positions_.MergeFrom(from.positions_);
  if (from.location().size() > 0) {
    set_location(from.location());
  }
}

void SourceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceInfo::CopyFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceInfo::IsInitialized() const {
  return true;
}

void SourceInfo::Swap(SourceInfo* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SourceInfo* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SourceInfo::UnsafeArenaSwap(SourceInfo* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SourceInfo::InternalSwap(SourceInfo* other) {
  using std::swap;
  line_offsets_.InternalSwap(&other->line_offsets_);
  positions_.Swap(&other->positions_);
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SourceInfo::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SourcePosition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SourcePosition::kLocationFieldNumber;
const int SourcePosition::kOffsetFieldNumber;
const int SourcePosition::kLineFieldNumber;
const int SourcePosition::kColumnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SourcePosition::SourcePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourcePosition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.SourcePosition)
}
SourcePosition::SourcePosition(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourcePosition.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.SourcePosition)
}
SourcePosition::SourcePosition(const SourcePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.location().size() > 0) {
    location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location(),
      GetArenaNoVirtual());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.SourcePosition)
}

void SourcePosition::SharedCtor() {
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
}

SourcePosition::~SourcePosition() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.SourcePosition)
  SharedDtor();
}

void SourcePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SourcePosition::ArenaDtor(void* object) {
  SourcePosition* _this = reinterpret_cast< SourcePosition* >(object);
  (void)_this;
}
void SourcePosition::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void SourcePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SourcePosition::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SourcePosition& SourcePosition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::scc_info_SourcePosition.base);
  return *internal_default_instance();
}


void SourcePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.SourcePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  _internal_metadata_.Clear();
}

bool SourcePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1beta1.SourcePosition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string location = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), static_cast<int>(this->location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1beta1.SourcePosition.location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 column = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1beta1.SourcePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1beta1.SourcePosition)
  return false;
#undef DO_
}

void SourcePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1beta1.SourcePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourcePosition.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->location(), output);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  // int32 line = 3;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->line(), output);
  }

  // int32 column = 4;
  if (this->column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->column(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1beta1.SourcePosition)
}

::google::protobuf::uint8* SourcePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.SourcePosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), static_cast<int>(this->location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourcePosition.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->location(), target);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  // int32 line = 3;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->line(), target);
  }

  // int32 column = 4;
  if (this->column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->column(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.SourcePosition)
  return target;
}

size_t SourcePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.SourcePosition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  // int32 line = 3;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->line());
  }

  // int32 column = 4;
  if (this->column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->column());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourcePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const SourcePosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SourcePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.SourcePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.SourcePosition)
    MergeFrom(*source);
  }
}

void SourcePosition::MergeFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {
    set_location(from.location());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.line() != 0) {
    set_line(from.line());
  }
  if (from.column() != 0) {
    set_column(from.column());
  }
}

void SourcePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourcePosition::CopyFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourcePosition::IsInitialized() const {
  return true;
}

void SourcePosition::Swap(SourcePosition* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    SourcePosition* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void SourcePosition::UnsafeArenaSwap(SourcePosition* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void SourcePosition::InternalSwap(SourcePosition* other) {
  using std::swap;
  location_.Swap(&other->location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(line_, other->line_);
  swap(column_, other->column_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SourcePosition::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::SourceInfo* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourceInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::SourcePosition* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourcePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourcePosition >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
