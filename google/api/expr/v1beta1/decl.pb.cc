// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/decl.proto

#include "google/api/expr/v1beta1/decl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DeclType;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_FunctionDecl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_IdentDecl;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto
namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Expr;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
class DeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decl>
      _instance;
  const ::google::api::expr::v1beta1::IdentDecl* ident_;
  const ::google::api::expr::v1beta1::FunctionDecl* function_;
} _Decl_default_instance_;
class DeclTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeclType>
      _instance;
} _DeclType_default_instance_;
class IdentDeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdentDecl>
      _instance;
} _IdentDecl_default_instance_;
class FunctionDeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FunctionDecl>
      _instance;
} _FunctionDecl_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto {
static void InitDefaultsDecl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_Decl_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::Decl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::Decl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Decl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDecl}, {
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_IdentDecl.base,
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_FunctionDecl.base,}};

static void InitDefaultsDeclType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_DeclType_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::DeclType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::DeclType::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeclType =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeclType}, {}};

static void InitDefaultsIdentDecl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_IdentDecl_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::IdentDecl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::IdentDecl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_IdentDecl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIdentDecl}, {
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_DeclType.base,
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto::scc_info_Expr.base,}};

static void InitDefaultsFunctionDecl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_FunctionDecl_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::FunctionDecl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::FunctionDecl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_FunctionDecl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsFunctionDecl}, {
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_IdentDecl.base,
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_DeclType.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Decl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeclType.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdentDecl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FunctionDecl.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::Decl, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::Decl, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::Decl, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::Decl, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::Decl, doc_),
  offsetof(::google::api::expr::v1beta1::DeclDefaultTypeInternal, ident_),
  offsetof(::google::api::expr::v1beta1::DeclDefaultTypeInternal, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::Decl, kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::DeclType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::DeclType, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::DeclType, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::DeclType, type_params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::IdentDecl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::IdentDecl, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::IdentDecl, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::FunctionDecl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::FunctionDecl, args_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::FunctionDecl, return_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1beta1::FunctionDecl, receiver_function_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::expr::v1beta1::Decl)},
  { 11, -1, sizeof(::google::api::expr::v1beta1::DeclType)},
  { 19, -1, sizeof(::google::api::expr::v1beta1::IdentDecl)},
  { 26, -1, sizeof(::google::api::expr::v1beta1::FunctionDecl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_Decl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_DeclType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_IdentDecl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1beta1::_FunctionDecl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/expr/v1beta1/decl.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"google/api/expr/v1beta1/decl.proto\022\027go"
      "ogle.api.expr.v1beta1\032\"google/api/expr/v"
      "1beta1/expr.proto\"\245\001\n\004Decl\022\n\n\002id\030\001 \001(\005\022\014"
      "\n\004name\030\002 \001(\t\022\013\n\003doc\030\003 \001(\t\0223\n\005ident\030\004 \001(\013"
      "2\".google.api.expr.v1beta1.IdentDeclH\000\0229"
      "\n\010function\030\005 \001(\0132%.google.api.expr.v1bet"
      "a1.FunctionDeclH\000B\006\n\004kind\"\\\n\010DeclType\022\n\n"
      "\002id\030\001 \001(\005\022\014\n\004type\030\002 \001(\t\0226\n\013type_params\030\004"
      " \003(\0132!.google.api.expr.v1beta1.DeclType\""
      "j\n\tIdentDecl\022/\n\004type\030\003 \001(\0132!.google.api."
      "expr.v1beta1.DeclType\022,\n\005value\030\004 \001(\0132\035.g"
      "oogle.api.expr.v1beta1.Expr\"\223\001\n\014Function"
      "Decl\0220\n\004args\030\001 \003(\0132\".google.api.expr.v1b"
      "eta1.IdentDecl\0226\n\013return_type\030\002 \001(\0132!.go"
      "ogle.api.expr.v1beta1.DeclType\022\031\n\021receiv"
      "er_function\030\003 \001(\010Bj\n\033com.google.api.expr"
      ".v1beta1B\tDeclProtoP\001Z;google.golang.org"
      "/genproto/googleapis/api/expr/v1beta1;ex"
      "pr\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 733);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/expr/v1beta1/decl.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fexpr_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

void Decl::InitAsDefaultInstance() {
  ::google::api::expr::v1beta1::_Decl_default_instance_.ident_ = const_cast< ::google::api::expr::v1beta1::IdentDecl*>(
      ::google::api::expr::v1beta1::IdentDecl::internal_default_instance());
  ::google::api::expr::v1beta1::_Decl_default_instance_.function_ = const_cast< ::google::api::expr::v1beta1::FunctionDecl*>(
      ::google::api::expr::v1beta1::FunctionDecl::internal_default_instance());
}
void Decl::set_allocated_ident(::google::api::expr::v1beta1::IdentDecl* ident) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (ident) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(ident);
    if (message_arena != submessage_arena) {
      ident = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ident, submessage_arena);
    }
    set_has_ident();
    kind_.ident_ = ident;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Decl.ident)
}
void Decl::set_allocated_function(::google::api::expr::v1beta1::FunctionDecl* function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (function) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(function);
    if (message_arena != submessage_arena) {
      function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function, submessage_arena);
    }
    set_has_function();
    kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Decl.function)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decl::kIdFieldNumber;
const int Decl::kNameFieldNumber;
const int Decl::kDocFieldNumber;
const int Decl::kIdentFieldNumber;
const int Decl::kFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decl::Decl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_Decl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.Decl)
}
Decl::Decl(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_Decl.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.Decl)
}
Decl::Decl(const Decl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  doc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doc().size() > 0) {
    doc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc(),
      GetArenaNoVirtual());
  }
  id_ = from.id_;
  clear_has_kind();
  switch (from.kind_case()) {
    case kIdent: {
      mutable_ident()->::google::api::expr::v1beta1::IdentDecl::MergeFrom(from.ident());
      break;
    }
    case kFunction: {
      mutable_function()->::google::api::expr::v1beta1::FunctionDecl::MergeFrom(from.function());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.Decl)
}

void Decl::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  clear_has_kind();
}

Decl::~Decl() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.Decl)
  SharedDtor();
}

void Decl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_kind()) {
    clear_kind();
  }
}

void Decl::ArenaDtor(void* object) {
  Decl* _this = reinterpret_cast< Decl* >(object);
  (void)_this;
}
void Decl::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Decl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decl::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decl& Decl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_Decl.base);
  return *internal_default_instance();
}


void Decl::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1beta1.Decl)
  switch (kind_case()) {
    case kIdent: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.ident_;
      }
      break;
    }
    case kFunction: {
      if (GetArenaNoVirtual() == NULL) {
        delete kind_.function_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void Decl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.Decl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  doc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  id_ = 0;
  clear_kind();
  _internal_metadata_.Clear();
}

bool Decl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1beta1.Decl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1beta1.Decl.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string doc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc().data(), static_cast<int>(this->doc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1beta1.Decl.doc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1beta1.IdentDecl ident = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ident()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1beta1.FunctionDecl function = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1beta1.Decl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1beta1.Decl)
  return false;
#undef DO_
}

void Decl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1beta1.Decl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Decl.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string doc = 3;
  if (this->doc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc().data(), static_cast<int>(this->doc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Decl.doc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc(), output);
  }

  // .google.api.expr.v1beta1.IdentDecl ident = 4;
  if (has_ident()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_ident(), output);
  }

  // .google.api.expr.v1beta1.FunctionDecl function = 5;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_function(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1beta1.Decl)
}

::google::protobuf::uint8* Decl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.Decl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Decl.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string doc = 3;
  if (this->doc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc().data(), static_cast<int>(this->doc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.Decl.doc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc(), target);
  }

  // .google.api.expr.v1beta1.IdentDecl ident = 4;
  if (has_ident()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_ident(), deterministic, target);
  }

  // .google.api.expr.v1beta1.FunctionDecl function = 5;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_function(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.Decl)
  return target;
}

size_t Decl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.Decl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string doc = 3;
  if (this->doc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  switch (kind_case()) {
    // .google.api.expr.v1beta1.IdentDecl ident = 4;
    case kIdent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.ident_);
      break;
    }
    // .google.api.expr.v1beta1.FunctionDecl function = 5;
    case kFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *kind_.function_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.Decl)
  GOOGLE_DCHECK_NE(&from, this);
  const Decl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.Decl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.Decl)
    MergeFrom(*source);
  }
}

void Decl::MergeFrom(const Decl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.Decl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.doc().size() > 0) {
    set_doc(from.doc());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  switch (from.kind_case()) {
    case kIdent: {
      mutable_ident()->::google::api::expr::v1beta1::IdentDecl::MergeFrom(from.ident());
      break;
    }
    case kFunction: {
      mutable_function()->::google::api::expr::v1beta1::FunctionDecl::MergeFrom(from.function());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void Decl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.Decl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decl::CopyFrom(const Decl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.Decl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decl::IsInitialized() const {
  return true;
}

void Decl::Swap(Decl* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Decl* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Decl::UnsafeArenaSwap(Decl* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Decl::InternalSwap(Decl* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  doc_.Swap(&other->doc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decl::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeclType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeclType::kIdFieldNumber;
const int DeclType::kTypeFieldNumber;
const int DeclType::kTypeParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeclType::DeclType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_DeclType.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.DeclType)
}
DeclType::DeclType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  type_params_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_DeclType.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.DeclType)
}
DeclType::DeclType(const DeclType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_params_(from.type_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type(),
      GetArenaNoVirtual());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.DeclType)
}

void DeclType::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
}

DeclType::~DeclType() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.DeclType)
  SharedDtor();
}

void DeclType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DeclType::ArenaDtor(void* object) {
  DeclType* _this = reinterpret_cast< DeclType* >(object);
  (void)_this;
}
void DeclType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void DeclType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeclType::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeclType& DeclType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_DeclType.base);
  return *internal_default_instance();
}


void DeclType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.DeclType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_params_.Clear();
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool DeclType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1beta1.DeclType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1beta1.DeclType.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.expr.v1beta1.DeclType type_params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1beta1.DeclType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1beta1.DeclType)
  return false;
#undef DO_
}

void DeclType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1beta1.DeclType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.DeclType.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // repeated .google.api.expr.v1beta1.DeclType type_params = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->type_params(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1beta1.DeclType)
}

::google::protobuf::uint8* DeclType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.DeclType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.DeclType.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // repeated .google.api.expr.v1beta1.DeclType type_params = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->type_params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.DeclType)
  return target;
}

size_t DeclType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.DeclType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1beta1.DeclType type_params = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->type_params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_params(static_cast<int>(i)));
    }
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeclType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.DeclType)
  GOOGLE_DCHECK_NE(&from, this);
  const DeclType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeclType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.DeclType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.DeclType)
    MergeFrom(*source);
  }
}

void DeclType::MergeFrom(const DeclType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.DeclType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_params_.MergeFrom(from.type_params_);
  if (from.type().size() > 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeclType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.DeclType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeclType::CopyFrom(const DeclType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.DeclType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeclType::IsInitialized() const {
  return true;
}

void DeclType::Swap(DeclType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    DeclType* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void DeclType::UnsafeArenaSwap(DeclType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void DeclType::InternalSwap(DeclType* other) {
  using std::swap;
  CastToBase(&type_params_)->InternalSwap(CastToBase(&other->type_params_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeclType::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdentDecl::InitAsDefaultInstance() {
  ::google::api::expr::v1beta1::_IdentDecl_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::api::expr::v1beta1::DeclType*>(
      ::google::api::expr::v1beta1::DeclType::internal_default_instance());
  ::google::api::expr::v1beta1::_IdentDecl_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::api::expr::v1beta1::Expr*>(
      ::google::api::expr::v1beta1::Expr::internal_default_instance());
}
void IdentDecl::unsafe_arena_set_allocated_type(
    ::google::api::expr::v1beta1::DeclType* type) {
  if (GetArenaNoVirtual() == NULL) {
    delete type_;
  }
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.IdentDecl.type)
}
void IdentDecl::unsafe_arena_set_allocated_value(
    ::google::api::expr::v1beta1::Expr* value) {
  if (GetArenaNoVirtual() == NULL) {
    delete value_;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.IdentDecl.value)
}
void IdentDecl::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdentDecl::kTypeFieldNumber;
const int IdentDecl::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdentDecl::IdentDecl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_IdentDecl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.IdentDecl)
}
IdentDecl::IdentDecl(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_IdentDecl.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.IdentDecl)
}
IdentDecl::IdentDecl(const IdentDecl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    type_ = new ::google::api::expr::v1beta1::DeclType(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::api::expr::v1beta1::Expr(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.IdentDecl)
}

void IdentDecl::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
}

IdentDecl::~IdentDecl() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.IdentDecl)
  SharedDtor();
}

void IdentDecl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete value_;
}

void IdentDecl::ArenaDtor(void* object) {
  IdentDecl* _this = reinterpret_cast< IdentDecl* >(object);
  (void)_this;
}
void IdentDecl::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void IdentDecl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdentDecl::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdentDecl& IdentDecl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_IdentDecl.base);
  return *internal_default_instance();
}


void IdentDecl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.IdentDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool IdentDecl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1beta1.IdentDecl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1beta1.DeclType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1beta1.Expr value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1beta1.IdentDecl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1beta1.IdentDecl)
  return false;
#undef DO_
}

void IdentDecl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1beta1.IdentDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.DeclType type = 3;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_type(), output);
  }

  // .google.api.expr.v1beta1.Expr value = 4;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1beta1.IdentDecl)
}

::google::protobuf::uint8* IdentDecl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.IdentDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1beta1.DeclType type = 3;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_type(), deterministic, target);
  }

  // .google.api.expr.v1beta1.Expr value = 4;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.IdentDecl)
  return target;
}

size_t IdentDecl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.IdentDecl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.expr.v1beta1.DeclType type = 3;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.api.expr.v1beta1.Expr value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdentDecl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.IdentDecl)
  GOOGLE_DCHECK_NE(&from, this);
  const IdentDecl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdentDecl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.IdentDecl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.IdentDecl)
    MergeFrom(*source);
  }
}

void IdentDecl::MergeFrom(const IdentDecl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.IdentDecl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_type()) {
    mutable_type()->::google::api::expr::v1beta1::DeclType::MergeFrom(from.type());
  }
  if (from.has_value()) {
    mutable_value()->::google::api::expr::v1beta1::Expr::MergeFrom(from.value());
  }
}

void IdentDecl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.IdentDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdentDecl::CopyFrom(const IdentDecl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.IdentDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdentDecl::IsInitialized() const {
  return true;
}

void IdentDecl::Swap(IdentDecl* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    IdentDecl* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void IdentDecl::UnsafeArenaSwap(IdentDecl* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void IdentDecl::InternalSwap(IdentDecl* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdentDecl::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FunctionDecl::InitAsDefaultInstance() {
  ::google::api::expr::v1beta1::_FunctionDecl_default_instance_._instance.get_mutable()->return_type_ = const_cast< ::google::api::expr::v1beta1::DeclType*>(
      ::google::api::expr::v1beta1::DeclType::internal_default_instance());
}
void FunctionDecl::unsafe_arena_set_allocated_return_type(
    ::google::api::expr::v1beta1::DeclType* return_type) {
  if (GetArenaNoVirtual() == NULL) {
    delete return_type_;
  }
  return_type_ = return_type;
  if (return_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.FunctionDecl.return_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionDecl::kArgsFieldNumber;
const int FunctionDecl::kReturnTypeFieldNumber;
const int FunctionDecl::kReceiverFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionDecl::FunctionDecl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_FunctionDecl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.FunctionDecl)
}
FunctionDecl::FunctionDecl(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  args_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_FunctionDecl.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.FunctionDecl)
}
FunctionDecl::FunctionDecl(const FunctionDecl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_return_type()) {
    return_type_ = new ::google::api::expr::v1beta1::DeclType(*from.return_type_);
  } else {
    return_type_ = NULL;
  }
  receiver_function_ = from.receiver_function_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.FunctionDecl)
}

void FunctionDecl::SharedCtor() {
  ::memset(&return_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&receiver_function_) -
      reinterpret_cast<char*>(&return_type_)) + sizeof(receiver_function_));
}

FunctionDecl::~FunctionDecl() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.FunctionDecl)
  SharedDtor();
}

void FunctionDecl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete return_type_;
}

void FunctionDecl::ArenaDtor(void* object) {
  FunctionDecl* _this = reinterpret_cast< FunctionDecl* >(object);
  (void)_this;
}
void FunctionDecl::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void FunctionDecl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FunctionDecl::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FunctionDecl& FunctionDecl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::scc_info_FunctionDecl.base);
  return *internal_default_instance();
}


void FunctionDecl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.FunctionDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  if (GetArenaNoVirtual() == NULL && return_type_ != NULL) {
    delete return_type_;
  }
  return_type_ = NULL;
  receiver_function_ = false;
  _internal_metadata_.Clear();
}

bool FunctionDecl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1beta1.FunctionDecl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.expr.v1beta1.IdentDecl args = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1beta1.DeclType return_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_return_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool receiver_function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &receiver_function_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1beta1.FunctionDecl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1beta1.FunctionDecl)
  return false;
#undef DO_
}

void FunctionDecl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1beta1.FunctionDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.IdentDecl args = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->args(static_cast<int>(i)),
      output);
  }

  // .google.api.expr.v1beta1.DeclType return_type = 2;
  if (this->has_return_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_return_type(), output);
  }

  // bool receiver_function = 3;
  if (this->receiver_function() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->receiver_function(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1beta1.FunctionDecl)
}

::google::protobuf::uint8* FunctionDecl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.FunctionDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1beta1.IdentDecl args = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->args(static_cast<int>(i)), deterministic, target);
  }

  // .google.api.expr.v1beta1.DeclType return_type = 2;
  if (this->has_return_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_return_type(), deterministic, target);
  }

  // bool receiver_function = 3;
  if (this->receiver_function() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->receiver_function(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.FunctionDecl)
  return target;
}

size_t FunctionDecl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.FunctionDecl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1beta1.IdentDecl args = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // .google.api.expr.v1beta1.DeclType return_type = 2;
  if (this->has_return_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *return_type_);
  }

  // bool receiver_function = 3;
  if (this->receiver_function() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FunctionDecl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.FunctionDecl)
  GOOGLE_DCHECK_NE(&from, this);
  const FunctionDecl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionDecl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.FunctionDecl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.FunctionDecl)
    MergeFrom(*source);
  }
}

void FunctionDecl::MergeFrom(const FunctionDecl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.FunctionDecl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.has_return_type()) {
    mutable_return_type()->::google::api::expr::v1beta1::DeclType::MergeFrom(from.return_type());
  }
  if (from.receiver_function() != 0) {
    set_receiver_function(from.receiver_function());
  }
}

void FunctionDecl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.FunctionDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDecl::CopyFrom(const FunctionDecl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.FunctionDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FunctionDecl::IsInitialized() const {
  return true;
}

void FunctionDecl::Swap(FunctionDecl* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    FunctionDecl* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void FunctionDecl::UnsafeArenaSwap(FunctionDecl* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void FunctionDecl::InternalSwap(FunctionDecl* other) {
  using std::swap;
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  swap(return_type_, other->return_type_);
  swap(receiver_function_, other->receiver_function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FunctionDecl::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fdecl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::Decl* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::Decl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::Decl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::DeclType* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::DeclType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::DeclType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::IdentDecl* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::IdentDecl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::IdentDecl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1beta1::FunctionDecl* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::FunctionDecl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::FunctionDecl >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
