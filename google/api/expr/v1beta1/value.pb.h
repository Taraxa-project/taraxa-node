// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/value.proto

#ifndef PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto
#define PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto 

namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
class EnumValue;
class EnumValueDefaultTypeInternal;
extern EnumValueDefaultTypeInternal _EnumValue_default_instance_;
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class MapValue;
class MapValueDefaultTypeInternal;
extern MapValueDefaultTypeInternal _MapValue_default_instance_;
class MapValue_Entry;
class MapValue_EntryDefaultTypeInternal;
extern MapValue_EntryDefaultTypeInternal _MapValue_Entry_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::api::expr::v1beta1::EnumValue* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::EnumValue>(Arena*);
template<> ::google::api::expr::v1beta1::ListValue* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::ListValue>(Arena*);
template<> ::google::api::expr::v1beta1::MapValue* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::MapValue>(Arena*);
template<> ::google::api::expr::v1beta1::MapValue_Entry* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::MapValue_Entry>(Arena*);
template<> ::google::api::expr::v1beta1::Value* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::Value>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

class Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Value(Value&& from) noexcept
    : Value() {
    *this = ::std::move(from);
  }

  inline Value& operator=(Value&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Value& default_instance();

  enum KindCase {
    kNullValue = 1,
    kBoolValue = 2,
    kInt64Value = 3,
    kUint64Value = 4,
    kDoubleValue = 5,
    kStringValue = 6,
    kBytesValue = 7,
    kEnumValue = 9,
    kObjectValue = 10,
    kMapValue = 11,
    kListValue = 12,
    kTypeValue = 15,
    KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
               &_Value_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Value* other);
  void Swap(Value* other);
  friend void swap(Value& a, Value& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Value* New() const final {
    return CreateMaybeMessage<Value>(NULL);
  }

  Value* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Value>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Value* other);
  protected:
  explicit Value(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.protobuf.NullValue null_value = 1;
  private:
  bool has_null_value() const;
  public:
  void clear_null_value();
  static const int kNullValueFieldNumber = 1;
  ::google::protobuf::NullValue null_value() const;
  void set_null_value(::google::protobuf::NullValue value);

  // bool bool_value = 2;
  private:
  bool has_bool_value() const;
  public:
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 2;
  bool bool_value() const;
  void set_bool_value(bool value);

  // int64 int64_value = 3;
  private:
  bool has_int64_value() const;
  public:
  void clear_int64_value();
  static const int kInt64ValueFieldNumber = 3;
  ::google::protobuf::int64 int64_value() const;
  void set_int64_value(::google::protobuf::int64 value);

  // uint64 uint64_value = 4;
  private:
  bool has_uint64_value() const;
  public:
  void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 4;
  ::google::protobuf::uint64 uint64_value() const;
  void set_uint64_value(::google::protobuf::uint64 value);

  // double double_value = 5;
  private:
  bool has_double_value() const;
  public:
  void clear_double_value();
  static const int kDoubleValueFieldNumber = 5;
  double double_value() const;
  void set_double_value(double value);

  // string string_value = 6;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 6;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_string_value();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_string_value(
      ::std::string* string_value);

  // bytes bytes_value = 7;
  private:
  bool has_bytes_value() const;
  public:
  void clear_bytes_value();
  static const int kBytesValueFieldNumber = 7;
  const ::std::string& bytes_value() const;
  void set_bytes_value(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes_value(::std::string&& value);
  #endif
  void set_bytes_value(const char* value);
  void set_bytes_value(const void* value, size_t size);
  ::std::string* mutable_bytes_value();
  ::std::string* release_bytes_value();
  void set_allocated_bytes_value(::std::string* bytes_value);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_bytes_value();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_bytes_value(
      ::std::string* bytes_value);

  // .google.api.expr.v1beta1.EnumValue enum_value = 9;
  bool has_enum_value() const;
  void clear_enum_value();
  static const int kEnumValueFieldNumber = 9;
  private:
  const ::google::api::expr::v1beta1::EnumValue& _internal_enum_value() const;
  public:
  const ::google::api::expr::v1beta1::EnumValue& enum_value() const;
  ::google::api::expr::v1beta1::EnumValue* release_enum_value();
  ::google::api::expr::v1beta1::EnumValue* mutable_enum_value();
  void set_allocated_enum_value(::google::api::expr::v1beta1::EnumValue* enum_value);
  void unsafe_arena_set_allocated_enum_value(
      ::google::api::expr::v1beta1::EnumValue* enum_value);
  ::google::api::expr::v1beta1::EnumValue* unsafe_arena_release_enum_value();

  // .google.protobuf.Any object_value = 10;
  bool has_object_value() const;
  void clear_object_value();
  static const int kObjectValueFieldNumber = 10;
  private:
  const ::google::protobuf::Any& _internal_object_value() const;
  public:
  const ::google::protobuf::Any& object_value() const;
  ::google::protobuf::Any* release_object_value();
  ::google::protobuf::Any* mutable_object_value();
  void set_allocated_object_value(::google::protobuf::Any* object_value);
  void unsafe_arena_set_allocated_object_value(
      ::google::protobuf::Any* object_value);
  ::google::protobuf::Any* unsafe_arena_release_object_value();

  // .google.api.expr.v1beta1.MapValue map_value = 11;
  bool has_map_value() const;
  void clear_map_value();
  static const int kMapValueFieldNumber = 11;
  private:
  const ::google::api::expr::v1beta1::MapValue& _internal_map_value() const;
  public:
  const ::google::api::expr::v1beta1::MapValue& map_value() const;
  ::google::api::expr::v1beta1::MapValue* release_map_value();
  ::google::api::expr::v1beta1::MapValue* mutable_map_value();
  void set_allocated_map_value(::google::api::expr::v1beta1::MapValue* map_value);
  void unsafe_arena_set_allocated_map_value(
      ::google::api::expr::v1beta1::MapValue* map_value);
  ::google::api::expr::v1beta1::MapValue* unsafe_arena_release_map_value();

  // .google.api.expr.v1beta1.ListValue list_value = 12;
  bool has_list_value() const;
  void clear_list_value();
  static const int kListValueFieldNumber = 12;
  private:
  const ::google::api::expr::v1beta1::ListValue& _internal_list_value() const;
  public:
  const ::google::api::expr::v1beta1::ListValue& list_value() const;
  ::google::api::expr::v1beta1::ListValue* release_list_value();
  ::google::api::expr::v1beta1::ListValue* mutable_list_value();
  void set_allocated_list_value(::google::api::expr::v1beta1::ListValue* list_value);
  void unsafe_arena_set_allocated_list_value(
      ::google::api::expr::v1beta1::ListValue* list_value);
  ::google::api::expr::v1beta1::ListValue* unsafe_arena_release_list_value();

  // string type_value = 15;
  private:
  bool has_type_value() const;
  public:
  void clear_type_value();
  static const int kTypeValueFieldNumber = 15;
  const ::std::string& type_value() const;
  void set_type_value(const ::std::string& value);
  #if LANG_CXX11
  void set_type_value(::std::string&& value);
  #endif
  void set_type_value(const char* value);
  void set_type_value(const char* value, size_t size);
  ::std::string* mutable_type_value();
  ::std::string* release_type_value();
  void set_allocated_type_value(::std::string* type_value);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_type_value();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_type_value(
      ::std::string* type_value);

  void clear_kind();
  KindCase kind_case() const;
  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.Value)
 private:
  void set_has_null_value();
  void set_has_bool_value();
  void set_has_int64_value();
  void set_has_uint64_value();
  void set_has_double_value();
  void set_has_string_value();
  void set_has_bytes_value();
  void set_has_enum_value();
  void set_has_object_value();
  void set_has_map_value();
  void set_has_list_value();
  void set_has_type_value();

  inline bool has_kind() const;
  inline void clear_has_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union KindUnion {
    KindUnion() {}
    int null_value_;
    bool bool_value_;
    ::google::protobuf::int64 int64_value_;
    ::google::protobuf::uint64 uint64_value_;
    double double_value_;
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    ::google::protobuf::internal::ArenaStringPtr bytes_value_;
    ::google::api::expr::v1beta1::EnumValue* enum_value_;
    ::google::protobuf::Any* object_value_;
    ::google::api::expr::v1beta1::MapValue* map_value_;
    ::google::api::expr::v1beta1::ListValue* list_value_;
    ::google::protobuf::internal::ArenaStringPtr type_value_;
  } kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnumValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.EnumValue) */ {
 public:
  EnumValue();
  virtual ~EnumValue();

  EnumValue(const EnumValue& from);

  inline EnumValue& operator=(const EnumValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnumValue(EnumValue&& from) noexcept
    : EnumValue() {
    *this = ::std::move(from);
  }

  inline EnumValue& operator=(EnumValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnumValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EnumValue* internal_default_instance() {
    return reinterpret_cast<const EnumValue*>(
               &_EnumValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(EnumValue* other);
  void Swap(EnumValue* other);
  friend void swap(EnumValue& a, EnumValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnumValue* New() const final {
    return CreateMaybeMessage<EnumValue>(NULL);
  }

  EnumValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EnumValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EnumValue& from);
  void MergeFrom(const EnumValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EnumValue* other);
  protected:
  explicit EnumValue(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_type();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_type(
      ::std::string* type);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.EnumValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.ListValue) */ {
 public:
  ListValue();
  virtual ~ListValue();

  ListValue(const ListValue& from);

  inline ListValue& operator=(const ListValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListValue(ListValue&& from) noexcept
    : ListValue() {
    *this = ::std::move(from);
  }

  inline ListValue& operator=(ListValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListValue* internal_default_instance() {
    return reinterpret_cast<const ListValue*>(
               &_ListValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(ListValue* other);
  void Swap(ListValue* other);
  friend void swap(ListValue& a, ListValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListValue* New() const final {
    return CreateMaybeMessage<ListValue>(NULL);
  }

  ListValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListValue& from);
  void MergeFrom(const ListValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListValue* other);
  protected:
  explicit ListValue(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.expr.v1beta1.Value values = 1;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 1;
  ::google::api::expr::v1beta1::Value* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::Value >*
      mutable_values();
  const ::google::api::expr::v1beta1::Value& values(int index) const;
  ::google::api::expr::v1beta1::Value* add_values();
  const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::Value >&
      values() const;

  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.ListValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::Value > values_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapValue_Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.MapValue.Entry) */ {
 public:
  MapValue_Entry();
  virtual ~MapValue_Entry();

  MapValue_Entry(const MapValue_Entry& from);

  inline MapValue_Entry& operator=(const MapValue_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapValue_Entry(MapValue_Entry&& from) noexcept
    : MapValue_Entry() {
    *this = ::std::move(from);
  }

  inline MapValue_Entry& operator=(MapValue_Entry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapValue_Entry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapValue_Entry* internal_default_instance() {
    return reinterpret_cast<const MapValue_Entry*>(
               &_MapValue_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(MapValue_Entry* other);
  void Swap(MapValue_Entry* other);
  friend void swap(MapValue_Entry& a, MapValue_Entry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapValue_Entry* New() const final {
    return CreateMaybeMessage<MapValue_Entry>(NULL);
  }

  MapValue_Entry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapValue_Entry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MapValue_Entry& from);
  void MergeFrom(const MapValue_Entry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapValue_Entry* other);
  protected:
  explicit MapValue_Entry(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.api.expr.v1beta1.Value key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  private:
  const ::google::api::expr::v1beta1::Value& _internal_key() const;
  public:
  const ::google::api::expr::v1beta1::Value& key() const;
  ::google::api::expr::v1beta1::Value* release_key();
  ::google::api::expr::v1beta1::Value* mutable_key();
  void set_allocated_key(::google::api::expr::v1beta1::Value* key);
  void unsafe_arena_set_allocated_key(
      ::google::api::expr::v1beta1::Value* key);
  ::google::api::expr::v1beta1::Value* unsafe_arena_release_key();

  // .google.api.expr.v1beta1.Value value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  private:
  const ::google::api::expr::v1beta1::Value& _internal_value() const;
  public:
  const ::google::api::expr::v1beta1::Value& value() const;
  ::google::api::expr::v1beta1::Value* release_value();
  ::google::api::expr::v1beta1::Value* mutable_value();
  void set_allocated_value(::google::api::expr::v1beta1::Value* value);
  void unsafe_arena_set_allocated_value(
      ::google::api::expr::v1beta1::Value* value);
  ::google::api::expr::v1beta1::Value* unsafe_arena_release_value();

  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.MapValue.Entry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::api::expr::v1beta1::Value* key_;
  ::google::api::expr::v1beta1::Value* value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.MapValue) */ {
 public:
  MapValue();
  virtual ~MapValue();

  MapValue(const MapValue& from);

  inline MapValue& operator=(const MapValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapValue(MapValue&& from) noexcept
    : MapValue() {
    *this = ::std::move(from);
  }

  inline MapValue& operator=(MapValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MapValue* internal_default_instance() {
    return reinterpret_cast<const MapValue*>(
               &_MapValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void UnsafeArenaSwap(MapValue* other);
  void Swap(MapValue* other);
  friend void swap(MapValue& a, MapValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapValue* New() const final {
    return CreateMaybeMessage<MapValue>(NULL);
  }

  MapValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MapValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MapValue& from);
  void MergeFrom(const MapValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapValue* other);
  protected:
  explicit MapValue(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MapValue_Entry Entry;

  // accessors -------------------------------------------------------

  // repeated .google.api.expr.v1beta1.MapValue.Entry entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  ::google::api::expr::v1beta1::MapValue_Entry* mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::MapValue_Entry >*
      mutable_entries();
  const ::google::api::expr::v1beta1::MapValue_Entry& entries(int index) const;
  ::google::api::expr::v1beta1::MapValue_Entry* add_entries();
  const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::MapValue_Entry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.MapValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::MapValue_Entry > entries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Value

// .google.protobuf.NullValue null_value = 1;
inline bool Value::has_null_value() const {
  return kind_case() == kNullValue;
}
inline void Value::set_has_null_value() {
  _oneof_case_[0] = kNullValue;
}
inline void Value::clear_null_value() {
  if (has_null_value()) {
    kind_.null_value_ = 0;
    clear_has_kind();
  }
}
inline ::google::protobuf::NullValue Value::null_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.null_value)
  if (has_null_value()) {
    return static_cast< ::google::protobuf::NullValue >(kind_.null_value_);
  }
  return static_cast< ::google::protobuf::NullValue >(0);
}
inline void Value::set_null_value(::google::protobuf::NullValue value) {
  if (!has_null_value()) {
    clear_kind();
    set_has_null_value();
  }
  kind_.null_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.null_value)
}

// bool bool_value = 2;
inline bool Value::has_bool_value() const {
  return kind_case() == kBoolValue;
}
inline void Value::set_has_bool_value() {
  _oneof_case_[0] = kBoolValue;
}
inline void Value::clear_bool_value() {
  if (has_bool_value()) {
    kind_.bool_value_ = false;
    clear_has_kind();
  }
}
inline bool Value::bool_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.bool_value)
  if (has_bool_value()) {
    return kind_.bool_value_;
  }
  return false;
}
inline void Value::set_bool_value(bool value) {
  if (!has_bool_value()) {
    clear_kind();
    set_has_bool_value();
  }
  kind_.bool_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.bool_value)
}

// int64 int64_value = 3;
inline bool Value::has_int64_value() const {
  return kind_case() == kInt64Value;
}
inline void Value::set_has_int64_value() {
  _oneof_case_[0] = kInt64Value;
}
inline void Value::clear_int64_value() {
  if (has_int64_value()) {
    kind_.int64_value_ = GOOGLE_LONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::int64 Value::int64_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.int64_value)
  if (has_int64_value()) {
    return kind_.int64_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Value::set_int64_value(::google::protobuf::int64 value) {
  if (!has_int64_value()) {
    clear_kind();
    set_has_int64_value();
  }
  kind_.int64_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.int64_value)
}

// uint64 uint64_value = 4;
inline bool Value::has_uint64_value() const {
  return kind_case() == kUint64Value;
}
inline void Value::set_has_uint64_value() {
  _oneof_case_[0] = kUint64Value;
}
inline void Value::clear_uint64_value() {
  if (has_uint64_value()) {
    kind_.uint64_value_ = GOOGLE_ULONGLONG(0);
    clear_has_kind();
  }
}
inline ::google::protobuf::uint64 Value::uint64_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.uint64_value)
  if (has_uint64_value()) {
    return kind_.uint64_value_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void Value::set_uint64_value(::google::protobuf::uint64 value) {
  if (!has_uint64_value()) {
    clear_kind();
    set_has_uint64_value();
  }
  kind_.uint64_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.uint64_value)
}

// double double_value = 5;
inline bool Value::has_double_value() const {
  return kind_case() == kDoubleValue;
}
inline void Value::set_has_double_value() {
  _oneof_case_[0] = kDoubleValue;
}
inline void Value::clear_double_value() {
  if (has_double_value()) {
    kind_.double_value_ = 0;
    clear_has_kind();
  }
}
inline double Value::double_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.double_value)
  if (has_double_value()) {
    return kind_.double_value_;
  }
  return 0;
}
inline void Value::set_double_value(double value) {
  if (!has_double_value()) {
    clear_kind();
    set_has_double_value();
  }
  kind_.double_value_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.double_value)
}

// string string_value = 6;
inline bool Value::has_string_value() const {
  return kind_case() == kStringValue;
}
inline void Value::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void Value::clear_string_value() {
  if (has_string_value()) {
    kind_.string_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_kind();
  }
}
inline const ::std::string& Value::string_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.string_value)
  if (has_string_value()) {
    return kind_.string_value_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Value::set_string_value(const ::std::string& value) {
  if (!has_string_value()) {
    clear_kind();
    set_has_string_value();
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.string_value)
}
#if LANG_CXX11
inline void Value::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.string_value)
  if (!has_string_value()) {
    clear_kind();
    set_has_string_value();
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.string_value_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1beta1.Value.string_value)
}
#endif
inline void Value::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_kind();
    set_has_string_value();
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.string_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1beta1.Value.string_value)
}
inline void Value::set_string_value(const char* value,
                             size_t size) {
  if (!has_string_value()) {
    clear_kind();
    set_has_string_value();
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.string_value_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1beta1.Value.string_value)
}
inline ::std::string* Value::mutable_string_value() {
  if (!has_string_value()) {
    clear_kind();
    set_has_string_value();
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return kind_.string_value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.string_value)
}
inline ::std::string* Value::release_string_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.string_value)
  if (has_string_value()) {
    clear_has_kind();
    return kind_.string_value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Value::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (string_value != NULL) {
    set_has_string_value();
    kind_.string_value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Value.string_value)
}
inline ::std::string* Value::unsafe_arena_release_string_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.string_value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_string_value()) {
    clear_has_kind();
    return kind_.string_value_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_string_value(::std::string* string_value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_string_value()) {
    kind_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (string_value) {
    set_has_string_value();
    kind_.string_value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.string_value)
}

// bytes bytes_value = 7;
inline bool Value::has_bytes_value() const {
  return kind_case() == kBytesValue;
}
inline void Value::set_has_bytes_value() {
  _oneof_case_[0] = kBytesValue;
}
inline void Value::clear_bytes_value() {
  if (has_bytes_value()) {
    kind_.bytes_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_kind();
  }
}
inline const ::std::string& Value::bytes_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.bytes_value)
  if (has_bytes_value()) {
    return kind_.bytes_value_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Value::set_bytes_value(const ::std::string& value) {
  if (!has_bytes_value()) {
    clear_kind();
    set_has_bytes_value();
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.bytes_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.bytes_value)
}
#if LANG_CXX11
inline void Value::set_bytes_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.bytes_value)
  if (!has_bytes_value()) {
    clear_kind();
    set_has_bytes_value();
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.bytes_value_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1beta1.Value.bytes_value)
}
#endif
inline void Value::set_bytes_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_bytes_value()) {
    clear_kind();
    set_has_bytes_value();
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.bytes_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1beta1.Value.bytes_value)
}
inline void Value::set_bytes_value(const void* value,
                             size_t size) {
  if (!has_bytes_value()) {
    clear_kind();
    set_has_bytes_value();
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.bytes_value_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1beta1.Value.bytes_value)
}
inline ::std::string* Value::mutable_bytes_value() {
  if (!has_bytes_value()) {
    clear_kind();
    set_has_bytes_value();
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return kind_.bytes_value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.bytes_value)
}
inline ::std::string* Value::release_bytes_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.bytes_value)
  if (has_bytes_value()) {
    clear_has_kind();
    return kind_.bytes_value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Value::set_allocated_bytes_value(::std::string* bytes_value) {
  if (!has_bytes_value()) {
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (bytes_value != NULL) {
    set_has_bytes_value();
    kind_.bytes_value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes_value,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Value.bytes_value)
}
inline ::std::string* Value::unsafe_arena_release_bytes_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.bytes_value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_bytes_value()) {
    clear_has_kind();
    return kind_.bytes_value_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_bytes_value(::std::string* bytes_value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_bytes_value()) {
    kind_.bytes_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (bytes_value) {
    set_has_bytes_value();
    kind_.bytes_value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes_value, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.bytes_value)
}

// .google.api.expr.v1beta1.EnumValue enum_value = 9;
inline bool Value::has_enum_value() const {
  return kind_case() == kEnumValue;
}
inline void Value::set_has_enum_value() {
  _oneof_case_[0] = kEnumValue;
}
inline void Value::clear_enum_value() {
  if (has_enum_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.enum_value_;
    }
    clear_has_kind();
  }
}
inline const ::google::api::expr::v1beta1::EnumValue& Value::_internal_enum_value() const {
  return *kind_.enum_value_;
}
inline ::google::api::expr::v1beta1::EnumValue* Value::release_enum_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.enum_value)
  if (has_enum_value()) {
    clear_has_kind();
      ::google::api::expr::v1beta1::EnumValue* temp = kind_.enum_value_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.enum_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::expr::v1beta1::EnumValue& Value::enum_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.enum_value)
  return has_enum_value()
      ? *kind_.enum_value_
      : *reinterpret_cast< ::google::api::expr::v1beta1::EnumValue*>(&::google::api::expr::v1beta1::_EnumValue_default_instance_);
}
inline ::google::api::expr::v1beta1::EnumValue* Value::unsafe_arena_release_enum_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.enum_value)
  if (has_enum_value()) {
    clear_has_kind();
    ::google::api::expr::v1beta1::EnumValue* temp = kind_.enum_value_;
    kind_.enum_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_enum_value(::google::api::expr::v1beta1::EnumValue* enum_value) {
  clear_kind();
  if (enum_value) {
    set_has_enum_value();
    kind_.enum_value_ = enum_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.enum_value)
}
inline ::google::api::expr::v1beta1::EnumValue* Value::mutable_enum_value() {
  if (!has_enum_value()) {
    clear_kind();
    set_has_enum_value();
    kind_.enum_value_ = CreateMaybeMessage< ::google::api::expr::v1beta1::EnumValue >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.enum_value)
  return kind_.enum_value_;
}

// .google.protobuf.Any object_value = 10;
inline bool Value::has_object_value() const {
  return kind_case() == kObjectValue;
}
inline void Value::set_has_object_value() {
  _oneof_case_[0] = kObjectValue;
}
inline const ::google::protobuf::Any& Value::_internal_object_value() const {
  return *kind_.object_value_;
}
inline ::google::protobuf::Any* Value::release_object_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.object_value)
  if (has_object_value()) {
    clear_has_kind();
      ::google::protobuf::Any* temp = kind_.object_value_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.object_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::protobuf::Any& Value::object_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.object_value)
  return has_object_value()
      ? *kind_.object_value_
      : *reinterpret_cast< ::google::protobuf::Any*>(&::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Value::unsafe_arena_release_object_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.object_value)
  if (has_object_value()) {
    clear_has_kind();
    ::google::protobuf::Any* temp = kind_.object_value_;
    kind_.object_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_object_value(::google::protobuf::Any* object_value) {
  clear_kind();
  if (object_value) {
    set_has_object_value();
    kind_.object_value_ = object_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.object_value)
}
inline ::google::protobuf::Any* Value::mutable_object_value() {
  if (!has_object_value()) {
    clear_kind();
    set_has_object_value();
    kind_.object_value_ = CreateMaybeMessage< ::google::protobuf::Any >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.object_value)
  return kind_.object_value_;
}

// .google.api.expr.v1beta1.MapValue map_value = 11;
inline bool Value::has_map_value() const {
  return kind_case() == kMapValue;
}
inline void Value::set_has_map_value() {
  _oneof_case_[0] = kMapValue;
}
inline void Value::clear_map_value() {
  if (has_map_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.map_value_;
    }
    clear_has_kind();
  }
}
inline const ::google::api::expr::v1beta1::MapValue& Value::_internal_map_value() const {
  return *kind_.map_value_;
}
inline ::google::api::expr::v1beta1::MapValue* Value::release_map_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.map_value)
  if (has_map_value()) {
    clear_has_kind();
      ::google::api::expr::v1beta1::MapValue* temp = kind_.map_value_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.map_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::expr::v1beta1::MapValue& Value::map_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.map_value)
  return has_map_value()
      ? *kind_.map_value_
      : *reinterpret_cast< ::google::api::expr::v1beta1::MapValue*>(&::google::api::expr::v1beta1::_MapValue_default_instance_);
}
inline ::google::api::expr::v1beta1::MapValue* Value::unsafe_arena_release_map_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.map_value)
  if (has_map_value()) {
    clear_has_kind();
    ::google::api::expr::v1beta1::MapValue* temp = kind_.map_value_;
    kind_.map_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_map_value(::google::api::expr::v1beta1::MapValue* map_value) {
  clear_kind();
  if (map_value) {
    set_has_map_value();
    kind_.map_value_ = map_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.map_value)
}
inline ::google::api::expr::v1beta1::MapValue* Value::mutable_map_value() {
  if (!has_map_value()) {
    clear_kind();
    set_has_map_value();
    kind_.map_value_ = CreateMaybeMessage< ::google::api::expr::v1beta1::MapValue >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.map_value)
  return kind_.map_value_;
}

// .google.api.expr.v1beta1.ListValue list_value = 12;
inline bool Value::has_list_value() const {
  return kind_case() == kListValue;
}
inline void Value::set_has_list_value() {
  _oneof_case_[0] = kListValue;
}
inline void Value::clear_list_value() {
  if (has_list_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete kind_.list_value_;
    }
    clear_has_kind();
  }
}
inline const ::google::api::expr::v1beta1::ListValue& Value::_internal_list_value() const {
  return *kind_.list_value_;
}
inline ::google::api::expr::v1beta1::ListValue* Value::release_list_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.list_value)
  if (has_list_value()) {
    clear_has_kind();
      ::google::api::expr::v1beta1::ListValue* temp = kind_.list_value_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    kind_.list_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::expr::v1beta1::ListValue& Value::list_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.list_value)
  return has_list_value()
      ? *kind_.list_value_
      : *reinterpret_cast< ::google::api::expr::v1beta1::ListValue*>(&::google::api::expr::v1beta1::_ListValue_default_instance_);
}
inline ::google::api::expr::v1beta1::ListValue* Value::unsafe_arena_release_list_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.list_value)
  if (has_list_value()) {
    clear_has_kind();
    ::google::api::expr::v1beta1::ListValue* temp = kind_.list_value_;
    kind_.list_value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_list_value(::google::api::expr::v1beta1::ListValue* list_value) {
  clear_kind();
  if (list_value) {
    set_has_list_value();
    kind_.list_value_ = list_value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.list_value)
}
inline ::google::api::expr::v1beta1::ListValue* Value::mutable_list_value() {
  if (!has_list_value()) {
    clear_kind();
    set_has_list_value();
    kind_.list_value_ = CreateMaybeMessage< ::google::api::expr::v1beta1::ListValue >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.list_value)
  return kind_.list_value_;
}

// string type_value = 15;
inline bool Value::has_type_value() const {
  return kind_case() == kTypeValue;
}
inline void Value::set_has_type_value() {
  _oneof_case_[0] = kTypeValue;
}
inline void Value::clear_type_value() {
  if (has_type_value()) {
    kind_.type_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
    clear_has_kind();
  }
}
inline const ::std::string& Value::type_value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.Value.type_value)
  if (has_type_value()) {
    return kind_.type_value_.Get();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Value::set_type_value(const ::std::string& value) {
  if (!has_type_value()) {
    clear_kind();
    set_has_type_value();
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.type_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.type_value)
}
#if LANG_CXX11
inline void Value::set_type_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.Value.type_value)
  if (!has_type_value()) {
    clear_kind();
    set_has_type_value();
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.type_value_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1beta1.Value.type_value)
}
#endif
inline void Value::set_type_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_type_value()) {
    clear_kind();
    set_has_type_value();
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.type_value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1beta1.Value.type_value)
}
inline void Value::set_type_value(const char* value,
                             size_t size) {
  if (!has_type_value()) {
    clear_kind();
    set_has_type_value();
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  kind_.type_value_.Set(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1beta1.Value.type_value)
}
inline ::std::string* Value::mutable_type_value() {
  if (!has_type_value()) {
    clear_kind();
    set_has_type_value();
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return kind_.type_value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.Value.type_value)
}
inline ::std::string* Value::release_type_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.Value.type_value)
  if (has_type_value()) {
    clear_has_kind();
    return kind_.type_value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Value::set_allocated_type_value(::std::string* type_value) {
  if (!has_type_value()) {
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (type_value != NULL) {
    set_has_type_value();
    kind_.type_value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_value,
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.Value.type_value)
}
inline ::std::string* Value::unsafe_arena_release_type_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.Value.type_value)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (has_type_value()) {
    clear_has_kind();
    return kind_.type_value_.UnsafeArenaRelease(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  } else {
    return NULL;
  }
}
inline void Value::unsafe_arena_set_allocated_type_value(::std::string* type_value) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (!has_type_value()) {
    kind_.type_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_kind();
  if (type_value) {
    set_has_type_value();
    kind_.type_value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_value, GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.Value.type_value)
}

inline bool Value::has_kind() const {
  return kind_case() != KIND_NOT_SET;
}
inline void Value::clear_has_kind() {
  _oneof_case_[0] = KIND_NOT_SET;
}
inline Value::KindCase Value::kind_case() const {
  return Value::KindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// EnumValue

// string type = 1;
inline void EnumValue::clear_type() {
  type_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EnumValue::type() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.EnumValue.type)
  return type_.Get();
}
inline void EnumValue::set_type(const ::std::string& value) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.EnumValue.type)
}
#if LANG_CXX11
inline void EnumValue::set_type(::std::string&& value) {
  
  type_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1beta1.EnumValue.type)
}
#endif
inline void EnumValue::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1beta1.EnumValue.type)
}
inline void EnumValue::set_type(const char* value,
    size_t size) {
  
  type_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1beta1.EnumValue.type)
}
inline ::std::string* EnumValue::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.EnumValue.type)
  return type_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EnumValue::release_type() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.EnumValue.type)
  
  return type_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EnumValue::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.EnumValue.type)
}
inline ::std::string* EnumValue::unsafe_arena_release_type() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.EnumValue.type)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return type_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EnumValue::unsafe_arena_set_allocated_type(
    ::std::string* type) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (type != NULL) {
    
  } else {
    
  }
  type_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      type, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.EnumValue.type)
}

// int32 value = 2;
inline void EnumValue::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 EnumValue::value() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.EnumValue.value)
  return value_;
}
inline void EnumValue::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.EnumValue.value)
}

// -------------------------------------------------------------------

// ListValue

// repeated .google.api.expr.v1beta1.Value values = 1;
inline int ListValue::values_size() const {
  return values_.size();
}
inline void ListValue::clear_values() {
  values_.Clear();
}
inline ::google::api::expr::v1beta1::Value* ListValue::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.ListValue.values)
  return values_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::Value >*
ListValue::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1beta1.ListValue.values)
  return &values_;
}
inline const ::google::api::expr::v1beta1::Value& ListValue::values(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.ListValue.values)
  return values_.Get(index);
}
inline ::google::api::expr::v1beta1::Value* ListValue::add_values() {
  // @@protoc_insertion_point(field_add:google.api.expr.v1beta1.ListValue.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::Value >&
ListValue::values() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1beta1.ListValue.values)
  return values_;
}

// -------------------------------------------------------------------

// MapValue_Entry

// .google.api.expr.v1beta1.Value key = 1;
inline bool MapValue_Entry::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void MapValue_Entry::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
inline const ::google::api::expr::v1beta1::Value& MapValue_Entry::_internal_key() const {
  return *key_;
}
inline const ::google::api::expr::v1beta1::Value& MapValue_Entry::key() const {
  const ::google::api::expr::v1beta1::Value* p = key_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.MapValue.Entry.key)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1beta1::Value*>(
      &::google::api::expr::v1beta1::_Value_default_instance_);
}
inline ::google::api::expr::v1beta1::Value* MapValue_Entry::release_key() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.MapValue.Entry.key)
  
  ::google::api::expr::v1beta1::Value* temp = key_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  key_ = NULL;
  return temp;
}
inline ::google::api::expr::v1beta1::Value* MapValue_Entry::unsafe_arena_release_key() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.MapValue.Entry.key)
  
  ::google::api::expr::v1beta1::Value* temp = key_;
  key_ = NULL;
  return temp;
}
inline ::google::api::expr::v1beta1::Value* MapValue_Entry::mutable_key() {
  
  if (key_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1beta1::Value>(GetArenaNoVirtual());
    key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.MapValue.Entry.key)
  return key_;
}
inline void MapValue_Entry::set_allocated_key(::google::api::expr::v1beta1::Value* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete key_;
  }
  if (key) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(key);
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.MapValue.Entry.key)
}

// .google.api.expr.v1beta1.Value value = 2;
inline bool MapValue_Entry::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void MapValue_Entry::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::google::api::expr::v1beta1::Value& MapValue_Entry::_internal_value() const {
  return *value_;
}
inline const ::google::api::expr::v1beta1::Value& MapValue_Entry::value() const {
  const ::google::api::expr::v1beta1::Value* p = value_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.MapValue.Entry.value)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1beta1::Value*>(
      &::google::api::expr::v1beta1::_Value_default_instance_);
}
inline ::google::api::expr::v1beta1::Value* MapValue_Entry::release_value() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.MapValue.Entry.value)
  
  ::google::api::expr::v1beta1::Value* temp = value_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  value_ = NULL;
  return temp;
}
inline ::google::api::expr::v1beta1::Value* MapValue_Entry::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.MapValue.Entry.value)
  
  ::google::api::expr::v1beta1::Value* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::google::api::expr::v1beta1::Value* MapValue_Entry::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1beta1::Value>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.MapValue.Entry.value)
  return value_;
}
inline void MapValue_Entry::set_allocated_value(::google::api::expr::v1beta1::Value* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.MapValue.Entry.value)
}

// -------------------------------------------------------------------

// MapValue

// repeated .google.api.expr.v1beta1.MapValue.Entry entries = 1;
inline int MapValue::entries_size() const {
  return entries_.size();
}
inline void MapValue::clear_entries() {
  entries_.Clear();
}
inline ::google::api::expr::v1beta1::MapValue_Entry* MapValue::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.MapValue.entries)
  return entries_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::MapValue_Entry >*
MapValue::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1beta1.MapValue.entries)
  return &entries_;
}
inline const ::google::api::expr::v1beta1::MapValue_Entry& MapValue::entries(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.MapValue.entries)
  return entries_.Get(index);
}
inline ::google::api::expr::v1beta1::MapValue_Entry* MapValue::add_entries() {
  // @@protoc_insertion_point(field_add:google.api.expr.v1beta1.MapValue.entries)
  return entries_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1beta1::MapValue_Entry >&
MapValue::entries() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1beta1.MapValue.entries)
  return entries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fvalue_2eproto
