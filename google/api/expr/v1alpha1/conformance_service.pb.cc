// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/conformance_service.proto

#include "google/api/expr/v1alpha1/conformance_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Decl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CheckedExpr;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EvalRequest_BindingsEntry_DoNotUse;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ExprValue;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SourcePosition;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ParsedExpr;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class ParseRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseRequest>
      _instance;
} _ParseRequest_default_instance_;
class ParseResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ParseResponse>
      _instance;
} _ParseResponse_default_instance_;
class CheckRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckRequest>
      _instance;
} _CheckRequest_default_instance_;
class CheckResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse>
      _instance;
} _CheckResponse_default_instance_;
class EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EvalRequest_BindingsEntry_DoNotUse>
      _instance;
} _EvalRequest_BindingsEntry_DoNotUse_default_instance_;
class EvalRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EvalRequest>
      _instance;
  const ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr_;
  const ::google::api::expr::v1alpha1::CheckedExpr* checked_expr_;
} _EvalRequest_default_instance_;
class EvalResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EvalResponse>
      _instance;
} _EvalResponse_default_instance_;
class IssueDetailsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IssueDetails>
      _instance;
} _IssueDetails_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto {
static void InitDefaultsParseRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ParseRequest_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ParseRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ParseRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ParseRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParseRequest}, {}};

static void InitDefaultsParseResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ParseResponse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ParseResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ParseResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ParseResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsParseResponse}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_ParsedExpr.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsCheckRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckRequest_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::CheckRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CheckRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCheckRequest}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_ParsedExpr.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl.base,}};

static void InitDefaultsCheckResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckResponse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::CheckResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CheckResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCheckResponse}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsEvalRequest_BindingsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalRequest_BindingsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse();
  }
  ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EvalRequest_BindingsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvalRequest_BindingsEntry_DoNotUse}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto::scc_info_ExprValue.base,}};

static void InitDefaultsEvalRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalRequest_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::EvalRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_EvalRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsEvalRequest}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_ParsedExpr.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalRequest_BindingsEntry_DoNotUse.base,}};

static void InitDefaultsEvalResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalResponse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::EvalResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EvalResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEvalResponse}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto::scc_info_ExprValue.base,
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsIssueDetails() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_IssueDetails_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::IssueDetails();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::IssueDetails::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_IssueDetails =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIssueDetails}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_SourcePosition.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ParseRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ParseResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EvalRequest_BindingsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EvalRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EvalResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IssueDetails.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, cel_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, syntax_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, source_location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, disable_macros_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseResponse, parsed_expr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseResponse, issues_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, parsed_expr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, type_env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, container_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, no_std_env_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckResponse, checked_expr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckResponse, issues_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::api::expr::v1alpha1::EvalRequestDefaultTypeInternal, parsed_expr_),
  offsetof(::google::api::expr::v1alpha1::EvalRequestDefaultTypeInternal, checked_expr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, bindings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, container_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, expr_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalResponse, issues_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::expr::v1alpha1::ParseRequest)},
  { 9, -1, sizeof(::google::api::expr::v1alpha1::ParseResponse)},
  { 16, -1, sizeof(::google::api::expr::v1alpha1::CheckRequest)},
  { 25, -1, sizeof(::google::api::expr::v1alpha1::CheckResponse)},
  { 32, 39, sizeof(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse)},
  { 41, -1, sizeof(::google::api::expr::v1alpha1::EvalRequest)},
  { 51, -1, sizeof(::google::api::expr::v1alpha1::EvalResponse)},
  { 58, -1, sizeof(::google::api::expr::v1alpha1::IssueDetails)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_ParseRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_ParseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_CheckRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_CheckResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_EvalRequest_BindingsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_EvalRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_EvalResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_IssueDetails_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/expr/v1alpha1/conformance_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n2google/api/expr/v1alpha1/conformance_s"
      "ervice.proto\022\030google.api.expr.v1alpha1\032&"
      "google/api/expr/v1alpha1/checked.proto\032#"
      "google/api/expr/v1alpha1/eval.proto\032%goo"
      "gle/api/expr/v1alpha1/syntax.proto\032\027goog"
      "le/rpc/status.proto\"k\n\014ParseRequest\022\022\n\nc"
      "el_source\030\001 \001(\t\022\026\n\016syntax_version\030\002 \001(\t\022"
      "\027\n\017source_location\030\003 \001(\t\022\026\n\016disable_macr"
      "os\030\004 \001(\010\"n\n\rParseResponse\0229\n\013parsed_expr"
      "\030\001 \001(\0132$.google.api.expr.v1alpha1.Parsed"
      "Expr\022\"\n\006issues\030\002 \003(\0132\022.google.rpc.Status"
      "\"\242\001\n\014CheckRequest\0229\n\013parsed_expr\030\001 \001(\0132$"
      ".google.api.expr.v1alpha1.ParsedExpr\0220\n\010"
      "type_env\030\002 \003(\0132\036.google.api.expr.v1alpha"
      "1.Decl\022\021\n\tcontainer\030\003 \001(\t\022\022\n\nno_std_env\030"
      "\004 \001(\010\"p\n\rCheckResponse\022;\n\014checked_expr\030\001"
      " \001(\0132%.google.api.expr.v1alpha1.CheckedE"
      "xpr\022\"\n\006issues\030\002 \003(\0132\022.google.rpc.Status\""
      "\306\002\n\013EvalRequest\022;\n\013parsed_expr\030\001 \001(\0132$.g"
      "oogle.api.expr.v1alpha1.ParsedExprH\000\022=\n\014"
      "checked_expr\030\002 \001(\0132%.google.api.expr.v1a"
      "lpha1.CheckedExprH\000\022E\n\010bindings\030\003 \003(\01323."
      "google.api.expr.v1alpha1.EvalRequest.Bin"
      "dingsEntry\022\021\n\tcontainer\030\004 \001(\t\032T\n\rBinding"
      "sEntry\022\013\n\003key\030\001 \001(\t\0222\n\005value\030\002 \001(\0132#.goo"
      "gle.api.expr.v1alpha1.ExprValue:\0028\001B\013\n\te"
      "xpr_kind\"g\n\014EvalResponse\0223\n\006result\030\001 \001(\013"
      "2#.google.api.expr.v1alpha1.ExprValue\022\"\n"
      "\006issues\030\002 \003(\0132\022.google.rpc.Status\"\350\001\n\014Is"
      "sueDetails\022A\n\010severity\030\001 \001(\0162/.google.ap"
      "i.expr.v1alpha1.IssueDetails.Severity\022:\n"
      "\010position\030\002 \001(\0132(.google.api.expr.v1alph"
      "a1.SourcePosition\022\n\n\002id\030\003 \001(\003\"M\n\010Severit"
      "y\022\030\n\024SEVERITY_UNSPECIFIED\020\000\022\017\n\013DEPRECATI"
      "ON\020\001\022\013\n\007WARNING\020\002\022\t\n\005ERROR\020\0032\245\002\n\022Conform"
      "anceService\022Z\n\005Parse\022&.google.api.expr.v"
      "1alpha1.ParseRequest\032\'.google.api.expr.v"
      "1alpha1.ParseResponse\"\000\022Z\n\005Check\022&.googl"
      "e.api.expr.v1alpha1.CheckRequest\032\'.googl"
      "e.api.expr.v1alpha1.CheckResponse\"\000\022W\n\004E"
      "val\022%.google.api.expr.v1alpha1.EvalReque"
      "st\032&.google.api.expr.v1alpha1.EvalRespon"
      "se\"\000Bz\n\034com.google.api.expr.v1alpha1B\027Co"
      "nformanceServiceProtoP\001Z<google.golang.o"
      "rg/genproto/googleapis/api/expr/v1alpha1"
      ";expr\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1816);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/expr/v1alpha1/conformance_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* IssueDetails_Severity_descriptor() {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_enum_descriptors[0];
}
bool IssueDetails_Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const IssueDetails_Severity IssueDetails::SEVERITY_UNSPECIFIED;
const IssueDetails_Severity IssueDetails::DEPRECATION;
const IssueDetails_Severity IssueDetails::WARNING;
const IssueDetails_Severity IssueDetails::ERROR;
const IssueDetails_Severity IssueDetails::Severity_MIN;
const IssueDetails_Severity IssueDetails::Severity_MAX;
const int IssueDetails::Severity_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void ParseRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseRequest::kCelSourceFieldNumber;
const int ParseRequest::kSyntaxVersionFieldNumber;
const int ParseRequest::kSourceLocationFieldNumber;
const int ParseRequest::kDisableMacrosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseRequest::ParseRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_ParseRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ParseRequest)
}
ParseRequest::ParseRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_ParseRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ParseRequest)
}
ParseRequest::ParseRequest(const ParseRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cel_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cel_source().size() > 0) {
    cel_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cel_source(),
      GetArenaNoVirtual());
  }
  syntax_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.syntax_version().size() > 0) {
    syntax_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.syntax_version(),
      GetArenaNoVirtual());
  }
  source_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_location().size() > 0) {
    source_location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_location(),
      GetArenaNoVirtual());
  }
  disable_macros_ = from.disable_macros_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ParseRequest)
}

void ParseRequest::SharedCtor() {
  cel_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syntax_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  disable_macros_ = false;
}

ParseRequest::~ParseRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ParseRequest)
  SharedDtor();
}

void ParseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  cel_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syntax_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParseRequest::ArenaDtor(void* object) {
  ParseRequest* _this = reinterpret_cast< ParseRequest* >(object);
  (void)_this;
}
void ParseRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ParseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParseRequest::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParseRequest& ParseRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_ParseRequest.base);
  return *internal_default_instance();
}


void ParseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ParseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cel_source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  syntax_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  source_location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  disable_macros_ = false;
  _internal_metadata_.Clear();
}

bool ParseRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.ParseRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cel_source = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cel_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cel_source().data(), static_cast<int>(this->cel_source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.ParseRequest.cel_source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string syntax_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_syntax_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->syntax_version().data(), static_cast<int>(this->syntax_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.ParseRequest.syntax_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_location = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_location().data(), static_cast<int>(this->source_location().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.ParseRequest.source_location"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disable_macros = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_macros_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.ParseRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.ParseRequest)
  return false;
#undef DO_
}

void ParseRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.ParseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cel_source = 1;
  if (this->cel_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cel_source().data(), static_cast<int>(this->cel_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.cel_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cel_source(), output);
  }

  // string syntax_version = 2;
  if (this->syntax_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->syntax_version().data(), static_cast<int>(this->syntax_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.syntax_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->syntax_version(), output);
  }

  // string source_location = 3;
  if (this->source_location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_location().data(), static_cast<int>(this->source_location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.source_location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source_location(), output);
  }

  // bool disable_macros = 4;
  if (this->disable_macros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->disable_macros(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.ParseRequest)
}

::google::protobuf::uint8* ParseRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ParseRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cel_source = 1;
  if (this->cel_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cel_source().data(), static_cast<int>(this->cel_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.cel_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cel_source(), target);
  }

  // string syntax_version = 2;
  if (this->syntax_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->syntax_version().data(), static_cast<int>(this->syntax_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.syntax_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->syntax_version(), target);
  }

  // string source_location = 3;
  if (this->source_location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_location().data(), static_cast<int>(this->source_location().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.source_location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source_location(), target);
  }

  // bool disable_macros = 4;
  if (this->disable_macros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->disable_macros(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ParseRequest)
  return target;
}

size_t ParseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ParseRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cel_source = 1;
  if (this->cel_source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cel_source());
  }

  // string syntax_version = 2;
  if (this->syntax_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->syntax_version());
  }

  // string source_location = 3;
  if (this->source_location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_location());
  }

  // bool disable_macros = 4;
  if (this->disable_macros() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ParseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParseRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ParseRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ParseRequest)
    MergeFrom(*source);
  }
}

void ParseRequest::MergeFrom(const ParseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ParseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cel_source().size() > 0) {
    set_cel_source(from.cel_source());
  }
  if (from.syntax_version().size() > 0) {
    set_syntax_version(from.syntax_version());
  }
  if (from.source_location().size() > 0) {
    set_source_location(from.source_location());
  }
  if (from.disable_macros() != 0) {
    set_disable_macros(from.disable_macros());
  }
}

void ParseRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ParseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseRequest::CopyFrom(const ParseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ParseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseRequest::IsInitialized() const {
  return true;
}

void ParseRequest::Swap(ParseRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ParseRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ParseRequest::UnsafeArenaSwap(ParseRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ParseRequest::InternalSwap(ParseRequest* other) {
  using std::swap;
  cel_source_.Swap(&other->cel_source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  syntax_version_.Swap(&other->syntax_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_location_.Swap(&other->source_location_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(disable_macros_, other->disable_macros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParseRequest::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ParseResponse::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_ParseResponse_default_instance_._instance.get_mutable()->parsed_expr_ = const_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(
      ::google::api::expr::v1alpha1::ParsedExpr::internal_default_instance());
}
void ParseResponse::unsafe_arena_set_allocated_parsed_expr(
    ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  if (GetArenaNoVirtual() == NULL) {
    delete parsed_expr_;
  }
  parsed_expr_ = parsed_expr;
  if (parsed_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
}
void ParseResponse::clear_parsed_expr() {
  if (GetArenaNoVirtual() == NULL && parsed_expr_ != NULL) {
    delete parsed_expr_;
  }
  parsed_expr_ = NULL;
}
void ParseResponse::clear_issues() {
  issues_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParseResponse::kParsedExprFieldNumber;
const int ParseResponse::kIssuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParseResponse::ParseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_ParseResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ParseResponse)
}
ParseResponse::ParseResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  issues_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_ParseResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ParseResponse)
}
ParseResponse::ParseResponse(const ParseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      issues_(from.issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parsed_expr()) {
    parsed_expr_ = new ::google::api::expr::v1alpha1::ParsedExpr(*from.parsed_expr_);
  } else {
    parsed_expr_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ParseResponse)
}

void ParseResponse::SharedCtor() {
  parsed_expr_ = NULL;
}

ParseResponse::~ParseResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ParseResponse)
  SharedDtor();
}

void ParseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete parsed_expr_;
}

void ParseResponse::ArenaDtor(void* object) {
  ParseResponse* _this = reinterpret_cast< ParseResponse* >(object);
  (void)_this;
}
void ParseResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ParseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ParseResponse::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParseResponse& ParseResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_ParseResponse.base);
  return *internal_default_instance();
}


void ParseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ParseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issues_.Clear();
  if (GetArenaNoVirtual() == NULL && parsed_expr_ != NULL) {
    delete parsed_expr_;
  }
  parsed_expr_ = NULL;
  _internal_metadata_.Clear();
}

bool ParseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.ParseResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parsed_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.rpc.Status issues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_issues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.ParseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.ParseResponse)
  return false;
#undef DO_
}

void ParseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.ParseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parsed_expr(), output);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->issues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->issues(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.ParseResponse)
}

::google::protobuf::uint8* ParseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ParseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parsed_expr(), deterministic, target);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->issues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->issues(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ParseResponse)
  return target;
}

size_t ParseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ParseResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.rpc.Status issues = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->issues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->issues(static_cast<int>(i)));
    }
  }

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parsed_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ParseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ParseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ParseResponse)
    MergeFrom(*source);
  }
}

void ParseResponse::MergeFrom(const ParseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ParseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  issues_.MergeFrom(from.issues_);
  if (from.has_parsed_expr()) {
    mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from.parsed_expr());
  }
}

void ParseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ParseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseResponse::CopyFrom(const ParseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ParseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseResponse::IsInitialized() const {
  return true;
}

void ParseResponse::Swap(ParseResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ParseResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ParseResponse::UnsafeArenaSwap(ParseResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ParseResponse::InternalSwap(ParseResponse* other) {
  using std::swap;
  CastToBase(&issues_)->InternalSwap(CastToBase(&other->issues_));
  swap(parsed_expr_, other->parsed_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ParseResponse::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckRequest::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_CheckRequest_default_instance_._instance.get_mutable()->parsed_expr_ = const_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(
      ::google::api::expr::v1alpha1::ParsedExpr::internal_default_instance());
}
void CheckRequest::unsafe_arena_set_allocated_parsed_expr(
    ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  if (GetArenaNoVirtual() == NULL) {
    delete parsed_expr_;
  }
  parsed_expr_ = parsed_expr;
  if (parsed_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
}
void CheckRequest::clear_parsed_expr() {
  if (GetArenaNoVirtual() == NULL && parsed_expr_ != NULL) {
    delete parsed_expr_;
  }
  parsed_expr_ = NULL;
}
void CheckRequest::clear_type_env() {
  type_env_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckRequest::kParsedExprFieldNumber;
const int CheckRequest::kTypeEnvFieldNumber;
const int CheckRequest::kContainerFieldNumber;
const int CheckRequest::kNoStdEnvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckRequest::CheckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_CheckRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.CheckRequest)
}
CheckRequest::CheckRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  type_env_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_CheckRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      type_env_(from.type_env_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container().size() > 0) {
    container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container(),
      GetArenaNoVirtual());
  }
  if (from.has_parsed_expr()) {
    parsed_expr_ = new ::google::api::expr::v1alpha1::ParsedExpr(*from.parsed_expr_);
  } else {
    parsed_expr_ = NULL;
  }
  no_std_env_ = from.no_std_env_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.CheckRequest)
}

void CheckRequest::SharedCtor() {
  container_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parsed_expr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_std_env_) -
      reinterpret_cast<char*>(&parsed_expr_)) + sizeof(no_std_env_));
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.CheckRequest)
  SharedDtor();
}

void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  container_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parsed_expr_;
}

void CheckRequest::ArenaDtor(void* object) {
  CheckRequest* _this = reinterpret_cast< CheckRequest* >(object);
  (void)_this;
}
void CheckRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckRequest::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckRequest& CheckRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_CheckRequest.base);
  return *internal_default_instance();
}


void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_env_.Clear();
  container_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && parsed_expr_ != NULL) {
    delete parsed_expr_;
  }
  parsed_expr_ = NULL;
  no_std_env_ = false;
  _internal_metadata_.Clear();
}

bool CheckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.CheckRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parsed_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_type_env()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string container = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container().data(), static_cast<int>(this->container().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.CheckRequest.container"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool no_std_env = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &no_std_env_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.CheckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.CheckRequest)
  return false;
#undef DO_
}

void CheckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parsed_expr(), output);
  }

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_env_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->type_env(static_cast<int>(i)),
      output);
  }

  // string container = 3;
  if (this->container().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container().data(), static_cast<int>(this->container().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.CheckRequest.container");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->container(), output);
  }

  // bool no_std_env = 4;
  if (this->no_std_env() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->no_std_env(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.CheckRequest)
}

::google::protobuf::uint8* CheckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parsed_expr(), deterministic, target);
  }

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->type_env_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->type_env(static_cast<int>(i)), deterministic, target);
  }

  // string container = 3;
  if (this->container().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container().data(), static_cast<int>(this->container().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.CheckRequest.container");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->container(), target);
  }

  // bool no_std_env = 4;
  if (this->no_std_env() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->no_std_env(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.CheckRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->type_env_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->type_env(static_cast<int>(i)));
    }
  }

  // string container = 3;
  if (this->container().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container());
  }

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parsed_expr_);
  }

  // bool no_std_env = 4;
  if (this->no_std_env() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.CheckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.CheckRequest)
    MergeFrom(*source);
  }
}

void CheckRequest::MergeFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_env_.MergeFrom(from.type_env_);
  if (from.container().size() > 0) {
    set_container(from.container());
  }
  if (from.has_parsed_expr()) {
    mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from.parsed_expr());
  }
  if (from.no_std_env() != 0) {
    set_no_std_env(from.no_std_env());
  }
}

void CheckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::Swap(CheckRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckRequest::UnsafeArenaSwap(CheckRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  CastToBase(&type_env_)->InternalSwap(CastToBase(&other->type_env_));
  container_.Swap(&other->container_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parsed_expr_, other->parsed_expr_);
  swap(no_std_env_, other->no_std_env_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckRequest::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckResponse::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_CheckResponse_default_instance_._instance.get_mutable()->checked_expr_ = const_cast< ::google::api::expr::v1alpha1::CheckedExpr*>(
      ::google::api::expr::v1alpha1::CheckedExpr::internal_default_instance());
}
void CheckResponse::unsafe_arena_set_allocated_checked_expr(
    ::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  if (GetArenaNoVirtual() == NULL) {
    delete checked_expr_;
  }
  checked_expr_ = checked_expr;
  if (checked_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckResponse.checked_expr)
}
void CheckResponse::clear_checked_expr() {
  if (GetArenaNoVirtual() == NULL && checked_expr_ != NULL) {
    delete checked_expr_;
  }
  checked_expr_ = NULL;
}
void CheckResponse::clear_issues() {
  issues_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse::kCheckedExprFieldNumber;
const int CheckResponse::kIssuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse::CheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_CheckResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.CheckResponse)
}
CheckResponse::CheckResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  issues_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_CheckResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      issues_(from.issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_checked_expr()) {
    checked_expr_ = new ::google::api::expr::v1alpha1::CheckedExpr(*from.checked_expr_);
  } else {
    checked_expr_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.CheckResponse)
}

void CheckResponse::SharedCtor() {
  checked_expr_ = NULL;
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.CheckResponse)
  SharedDtor();
}

void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete checked_expr_;
}

void CheckResponse::ArenaDtor(void* object) {
  CheckResponse* _this = reinterpret_cast< CheckResponse* >(object);
  (void)_this;
}
void CheckResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse& CheckResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_CheckResponse.base);
  return *internal_default_instance();
}


void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issues_.Clear();
  if (GetArenaNoVirtual() == NULL && checked_expr_ != NULL) {
    delete checked_expr_;
  }
  checked_expr_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.CheckResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_checked_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.rpc.Status issues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_issues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.CheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.CheckResponse)
  return false;
#undef DO_
}

void CheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->has_checked_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_checked_expr(), output);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->issues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->issues(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.CheckResponse)
}

::google::protobuf::uint8* CheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->has_checked_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_checked_expr(), deterministic, target);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->issues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->issues(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.CheckResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.rpc.Status issues = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->issues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->issues(static_cast<int>(i)));
    }
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->has_checked_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *checked_expr_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.CheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.CheckResponse)
    MergeFrom(*source);
  }
}

void CheckResponse::MergeFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  issues_.MergeFrom(from.issues_);
  if (from.has_checked_expr()) {
    mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(from.checked_expr());
  }
}

void CheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::Swap(CheckResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse::UnsafeArenaSwap(CheckResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  CastToBase(&issues_)->InternalSwap(CastToBase(&other->issues_));
  swap(checked_expr_, other->checked_expr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse() {}
EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void EvalRequest_BindingsEntry_DoNotUse::MergeFrom(const EvalRequest_BindingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata EvalRequest_BindingsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[4];
}
void EvalRequest_BindingsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void EvalRequest::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_EvalRequest_default_instance_.parsed_expr_ = const_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(
      ::google::api::expr::v1alpha1::ParsedExpr::internal_default_instance());
  ::google::api::expr::v1alpha1::_EvalRequest_default_instance_.checked_expr_ = const_cast< ::google::api::expr::v1alpha1::CheckedExpr*>(
      ::google::api::expr::v1alpha1::CheckedExpr::internal_default_instance());
}
void EvalRequest::set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (parsed_expr) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(parsed_expr)->GetArena();
    if (message_arena != submessage_arena) {
      parsed_expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parsed_expr, submessage_arena);
    }
    set_has_parsed_expr();
    expr_kind_.parsed_expr_ = parsed_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
}
void EvalRequest::clear_parsed_expr() {
  if (has_parsed_expr()) {
    if (GetArenaNoVirtual() == NULL) {
      delete expr_kind_.parsed_expr_;
    }
    clear_has_expr_kind();
  }
}
void EvalRequest::set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (checked_expr) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(checked_expr)->GetArena();
    if (message_arena != submessage_arena) {
      checked_expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, checked_expr, submessage_arena);
    }
    set_has_checked_expr();
    expr_kind_.checked_expr_ = checked_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.EvalRequest.checked_expr)
}
void EvalRequest::clear_checked_expr() {
  if (has_checked_expr()) {
    if (GetArenaNoVirtual() == NULL) {
      delete expr_kind_.checked_expr_;
    }
    clear_has_expr_kind();
  }
}
void EvalRequest::clear_bindings() {
  bindings_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvalRequest::kParsedExprFieldNumber;
const int EvalRequest::kCheckedExprFieldNumber;
const int EvalRequest::kBindingsFieldNumber;
const int EvalRequest::kContainerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvalRequest::EvalRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.EvalRequest)
}
EvalRequest::EvalRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  bindings_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.EvalRequest)
}
EvalRequest::EvalRequest(const EvalRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bindings_.MergeFrom(from.bindings_);
  container_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.container().size() > 0) {
    container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.container(),
      GetArenaNoVirtual());
  }
  clear_has_expr_kind();
  switch (from.expr_kind_case()) {
    case kParsedExpr: {
      mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from.parsed_expr());
      break;
    }
    case kCheckedExpr: {
      mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(from.checked_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.EvalRequest)
}

void EvalRequest::SharedCtor() {
  container_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_expr_kind();
}

EvalRequest::~EvalRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.EvalRequest)
  SharedDtor();
}

void EvalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  container_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_expr_kind()) {
    clear_expr_kind();
  }
}

void EvalRequest::ArenaDtor(void* object) {
  EvalRequest* _this = reinterpret_cast< EvalRequest* >(object);
  (void)_this;
}
void EvalRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EvalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EvalRequest::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvalRequest& EvalRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalRequest.base);
  return *internal_default_instance();
}


void EvalRequest::clear_expr_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.EvalRequest)
  switch (expr_kind_case()) {
    case kParsedExpr: {
      if (GetArenaNoVirtual() == NULL) {
        delete expr_kind_.parsed_expr_;
      }
      break;
    }
    case kCheckedExpr: {
      if (GetArenaNoVirtual() == NULL) {
        delete expr_kind_.checked_expr_;
      }
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPR_KIND_NOT_SET;
}


void EvalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.EvalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  container_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_expr_kind();
  _internal_metadata_.Clear();
}

bool EvalRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.EvalRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parsed_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_checked_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          EvalRequest_BindingsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              EvalRequest_BindingsEntry_DoNotUse,
              ::std::string, ::google::api::expr::v1alpha1::ExprValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue > > parser(&bindings_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.EvalRequest.BindingsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string container = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_container()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->container().data(), static_cast<int>(this->container().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.EvalRequest.container"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.EvalRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.EvalRequest)
  return false;
#undef DO_
}

void EvalRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.EvalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (has_parsed_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_parsed_expr(), output);
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
  if (has_checked_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_checked_expr(), output);
  }

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  if (!this->bindings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.expr.v1alpha1.EvalRequest.BindingsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->bindings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bindings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<EvalRequest_BindingsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bindings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<EvalRequest_BindingsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it) {
        entry.reset(bindings_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // string container = 4;
  if (this->container().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container().data(), static_cast<int>(this->container().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.EvalRequest.container");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->container(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.EvalRequest)
}

::google::protobuf::uint8* EvalRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.EvalRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (has_parsed_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_parsed_expr(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
  if (has_checked_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_checked_expr(), deterministic, target);
  }

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  if (!this->bindings().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "google.api.expr.v1alpha1.EvalRequest.BindingsEntry.key");
      }
    };

    if (deterministic &&
        this->bindings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bindings().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<EvalRequest_BindingsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bindings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<EvalRequest_BindingsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
          it = this->bindings().begin();
          it != this->bindings().end(); ++it) {
        entry.reset(bindings_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  // string container = 4;
  if (this->container().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->container().data(), static_cast<int>(this->container().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.EvalRequest.container");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->container(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.EvalRequest)
  return target;
}

size_t EvalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.EvalRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bindings_size());
  {
    ::std::unique_ptr<EvalRequest_BindingsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
        it = this->bindings().begin();
        it != this->bindings().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(bindings_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string container = 4;
  if (this->container().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->container());
  }

  switch (expr_kind_case()) {
    // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
    case kParsedExpr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_kind_.parsed_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
    case kCheckedExpr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *expr_kind_.checked_expr_);
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.EvalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvalRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.EvalRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.EvalRequest)
    MergeFrom(*source);
  }
}

void EvalRequest::MergeFrom(const EvalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.EvalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
  if (from.container().size() > 0) {
    set_container(from.container());
  }
  switch (from.expr_kind_case()) {
    case kParsedExpr: {
      mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from.parsed_expr());
      break;
    }
    case kCheckedExpr: {
      mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(from.checked_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
}

void EvalRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.EvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalRequest::CopyFrom(const EvalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.EvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalRequest::IsInitialized() const {
  return true;
}

void EvalRequest::Swap(EvalRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EvalRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EvalRequest::UnsafeArenaSwap(EvalRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EvalRequest::InternalSwap(EvalRequest* other) {
  using std::swap;
  bindings_.Swap(&other->bindings_);
  container_.Swap(&other->container_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expr_kind_, other->expr_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EvalRequest::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EvalResponse::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_EvalResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::google::api::expr::v1alpha1::ExprValue*>(
      ::google::api::expr::v1alpha1::ExprValue::internal_default_instance());
}
void EvalResponse::unsafe_arena_set_allocated_result(
    ::google::api::expr::v1alpha1::ExprValue* result) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.EvalResponse.result)
}
void EvalResponse::clear_result() {
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
}
void EvalResponse::clear_issues() {
  issues_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvalResponse::kResultFieldNumber;
const int EvalResponse::kIssuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvalResponse::EvalResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.EvalResponse)
}
EvalResponse::EvalResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  issues_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.EvalResponse)
}
EvalResponse::EvalResponse(const EvalResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      issues_(from.issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::google::api::expr::v1alpha1::ExprValue(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.EvalResponse)
}

void EvalResponse::SharedCtor() {
  result_ = NULL;
}

EvalResponse::~EvalResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.EvalResponse)
  SharedDtor();
}

void EvalResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete result_;
}

void EvalResponse::ArenaDtor(void* object) {
  EvalResponse* _this = reinterpret_cast< EvalResponse* >(object);
  (void)_this;
}
void EvalResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void EvalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EvalResponse::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvalResponse& EvalResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_EvalResponse.base);
  return *internal_default_instance();
}


void EvalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.EvalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issues_.Clear();
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  _internal_metadata_.Clear();
}

bool EvalResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.EvalResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.ExprValue result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.rpc.Status issues = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_issues()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.EvalResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.EvalResponse)
  return false;
#undef DO_
}

void EvalResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.EvalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_result(), output);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->issues_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->issues(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.EvalResponse)
}

::google::protobuf::uint8* EvalResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.EvalResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_result(), deterministic, target);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->issues_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->issues(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.EvalResponse)
  return target;
}

size_t EvalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.EvalResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.rpc.Status issues = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->issues_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->issues(static_cast<int>(i)));
    }
  }

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.EvalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvalResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.EvalResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.EvalResponse)
    MergeFrom(*source);
  }
}

void EvalResponse::MergeFrom(const EvalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.EvalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  issues_.MergeFrom(from.issues_);
  if (from.has_result()) {
    mutable_result()->::google::api::expr::v1alpha1::ExprValue::MergeFrom(from.result());
  }
}

void EvalResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.EvalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalResponse::CopyFrom(const EvalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.EvalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalResponse::IsInitialized() const {
  return true;
}

void EvalResponse::Swap(EvalResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    EvalResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void EvalResponse::UnsafeArenaSwap(EvalResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void EvalResponse::InternalSwap(EvalResponse* other) {
  using std::swap;
  CastToBase(&issues_)->InternalSwap(CastToBase(&other->issues_));
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EvalResponse::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IssueDetails::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_IssueDetails_default_instance_._instance.get_mutable()->position_ = const_cast< ::google::api::expr::v1alpha1::SourcePosition*>(
      ::google::api::expr::v1alpha1::SourcePosition::internal_default_instance());
}
void IssueDetails::unsafe_arena_set_allocated_position(
    ::google::api::expr::v1alpha1::SourcePosition* position) {
  if (GetArenaNoVirtual() == NULL) {
    delete position_;
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.IssueDetails.position)
}
void IssueDetails::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IssueDetails::kSeverityFieldNumber;
const int IssueDetails::kPositionFieldNumber;
const int IssueDetails::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IssueDetails::IssueDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_IssueDetails.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.IssueDetails)
}
IssueDetails::IssueDetails(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_IssueDetails.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.IssueDetails)
}
IssueDetails::IssueDetails(const IssueDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::google::api::expr::v1alpha1::SourcePosition(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.IssueDetails)
}

void IssueDetails::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&position_)) + sizeof(severity_));
}

IssueDetails::~IssueDetails() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.IssueDetails)
  SharedDtor();
}

void IssueDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete position_;
}

void IssueDetails::ArenaDtor(void* object) {
  IssueDetails* _this = reinterpret_cast< IssueDetails* >(object);
  (void)_this;
}
void IssueDetails::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void IssueDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IssueDetails::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IssueDetails& IssueDetails::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::scc_info_IssueDetails.base);
  return *internal_default_instance();
}


void IssueDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.IssueDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&id_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

bool IssueDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.IssueDetails)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_severity(static_cast< ::google::api::expr::v1alpha1::IssueDetails_Severity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.SourcePosition position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.IssueDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.IssueDetails)
  return false;
#undef DO_
}

void IssueDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.IssueDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->severity(), output);
  }

  // .google.api.expr.v1alpha1.SourcePosition position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.IssueDetails)
}

::google::protobuf::uint8* IssueDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.IssueDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->severity(), target);
  }

  // .google.api.expr.v1alpha1.SourcePosition position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.IssueDetails)
  return target;
}

size_t IssueDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.IssueDetails)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.expr.v1alpha1.SourcePosition position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->severity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IssueDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.IssueDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const IssueDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IssueDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.IssueDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.IssueDetails)
    MergeFrom(*source);
  }
}

void IssueDetails::MergeFrom(const IssueDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.IssueDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::google::api::expr::v1alpha1::SourcePosition::MergeFrom(from.position());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.severity() != 0) {
    set_severity(from.severity());
  }
}

void IssueDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.IssueDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IssueDetails::CopyFrom(const IssueDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.IssueDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IssueDetails::IsInitialized() const {
  return true;
}

void IssueDetails::Swap(IssueDetails* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    IssueDetails* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void IssueDetails::UnsafeArenaSwap(IssueDetails* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void IssueDetails::InternalSwap(IssueDetails* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(id_, other->id_);
  swap(severity_, other->severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IssueDetails::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::ParseRequest* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ParseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ParseRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::ParseResponse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ParseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ParseResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::CheckRequest* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::CheckResponse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::EvalRequest* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::EvalResponse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::IssueDetails* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::IssueDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::IssueDetails >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
