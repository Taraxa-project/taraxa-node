// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/conformance_service.proto

#ifndef PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto
#define PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/expr/v1alpha1/checked.pb.h"
#include "google/api/expr/v1alpha1/eval.pb.h"
#include "google/api/expr/v1alpha1/syntax.pb.h"
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto 

namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class CheckRequest;
class CheckRequestDefaultTypeInternal;
extern CheckRequestDefaultTypeInternal _CheckRequest_default_instance_;
class CheckResponse;
class CheckResponseDefaultTypeInternal;
extern CheckResponseDefaultTypeInternal _CheckResponse_default_instance_;
class EvalRequest;
class EvalRequestDefaultTypeInternal;
extern EvalRequestDefaultTypeInternal _EvalRequest_default_instance_;
class EvalRequest_BindingsEntry_DoNotUse;
class EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal;
extern EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal _EvalRequest_BindingsEntry_DoNotUse_default_instance_;
class EvalResponse;
class EvalResponseDefaultTypeInternal;
extern EvalResponseDefaultTypeInternal _EvalResponse_default_instance_;
class IssueDetails;
class IssueDetailsDefaultTypeInternal;
extern IssueDetailsDefaultTypeInternal _IssueDetails_default_instance_;
class ParseRequest;
class ParseRequestDefaultTypeInternal;
extern ParseRequestDefaultTypeInternal _ParseRequest_default_instance_;
class ParseResponse;
class ParseResponseDefaultTypeInternal;
extern ParseResponseDefaultTypeInternal _ParseResponse_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::api::expr::v1alpha1::CheckRequest* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::CheckRequest>(Arena*);
template<> ::google::api::expr::v1alpha1::CheckResponse* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::CheckResponse>(Arena*);
template<> ::google::api::expr::v1alpha1::EvalRequest* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::EvalRequest>(Arena*);
template<> ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse>(Arena*);
template<> ::google::api::expr::v1alpha1::EvalResponse* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::EvalResponse>(Arena*);
template<> ::google::api::expr::v1alpha1::IssueDetails* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::IssueDetails>(Arena*);
template<> ::google::api::expr::v1alpha1::ParseRequest* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::ParseRequest>(Arena*);
template<> ::google::api::expr::v1alpha1::ParseResponse* Arena::CreateMaybeMessage<::google::api::expr::v1alpha1::ParseResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {

enum IssueDetails_Severity {
  IssueDetails_Severity_SEVERITY_UNSPECIFIED = 0,
  IssueDetails_Severity_DEPRECATION = 1,
  IssueDetails_Severity_WARNING = 2,
  IssueDetails_Severity_ERROR = 3,
  IssueDetails_Severity_IssueDetails_Severity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IssueDetails_Severity_IssueDetails_Severity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IssueDetails_Severity_IsValid(int value);
const IssueDetails_Severity IssueDetails_Severity_Severity_MIN = IssueDetails_Severity_SEVERITY_UNSPECIFIED;
const IssueDetails_Severity IssueDetails_Severity_Severity_MAX = IssueDetails_Severity_ERROR;
const int IssueDetails_Severity_Severity_ARRAYSIZE = IssueDetails_Severity_Severity_MAX + 1;

const ::google::protobuf::EnumDescriptor* IssueDetails_Severity_descriptor();
inline const ::std::string& IssueDetails_Severity_Name(IssueDetails_Severity value) {
  return ::google::protobuf::internal::NameOfEnum(
    IssueDetails_Severity_descriptor(), value);
}
inline bool IssueDetails_Severity_Parse(
    const ::std::string& name, IssueDetails_Severity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IssueDetails_Severity>(
    IssueDetails_Severity_descriptor(), name, value);
}
// ===================================================================

class ParseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.ParseRequest) */ {
 public:
  ParseRequest();
  virtual ~ParseRequest();

  ParseRequest(const ParseRequest& from);

  inline ParseRequest& operator=(const ParseRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParseRequest(ParseRequest&& from) noexcept
    : ParseRequest() {
    *this = ::std::move(from);
  }

  inline ParseRequest& operator=(ParseRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParseRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParseRequest* internal_default_instance() {
    return reinterpret_cast<const ParseRequest*>(
               &_ParseRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(ParseRequest* other);
  void Swap(ParseRequest* other);
  friend void swap(ParseRequest& a, ParseRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParseRequest* New() const final {
    return CreateMaybeMessage<ParseRequest>(NULL);
  }

  ParseRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParseRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParseRequest& from);
  void MergeFrom(const ParseRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParseRequest* other);
  protected:
  explicit ParseRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cel_source = 1;
  void clear_cel_source();
  static const int kCelSourceFieldNumber = 1;
  const ::std::string& cel_source() const;
  void set_cel_source(const ::std::string& value);
  #if LANG_CXX11
  void set_cel_source(::std::string&& value);
  #endif
  void set_cel_source(const char* value);
  void set_cel_source(const char* value, size_t size);
  ::std::string* mutable_cel_source();
  ::std::string* release_cel_source();
  void set_allocated_cel_source(::std::string* cel_source);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_cel_source();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_cel_source(
      ::std::string* cel_source);

  // string syntax_version = 2;
  void clear_syntax_version();
  static const int kSyntaxVersionFieldNumber = 2;
  const ::std::string& syntax_version() const;
  void set_syntax_version(const ::std::string& value);
  #if LANG_CXX11
  void set_syntax_version(::std::string&& value);
  #endif
  void set_syntax_version(const char* value);
  void set_syntax_version(const char* value, size_t size);
  ::std::string* mutable_syntax_version();
  ::std::string* release_syntax_version();
  void set_allocated_syntax_version(::std::string* syntax_version);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_syntax_version();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_syntax_version(
      ::std::string* syntax_version);

  // string source_location = 3;
  void clear_source_location();
  static const int kSourceLocationFieldNumber = 3;
  const ::std::string& source_location() const;
  void set_source_location(const ::std::string& value);
  #if LANG_CXX11
  void set_source_location(::std::string&& value);
  #endif
  void set_source_location(const char* value);
  void set_source_location(const char* value, size_t size);
  ::std::string* mutable_source_location();
  ::std::string* release_source_location();
  void set_allocated_source_location(::std::string* source_location);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_source_location();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_source_location(
      ::std::string* source_location);

  // bool disable_macros = 4;
  void clear_disable_macros();
  static const int kDisableMacrosFieldNumber = 4;
  bool disable_macros() const;
  void set_disable_macros(bool value);

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.ParseRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::ArenaStringPtr cel_source_;
  ::google::protobuf::internal::ArenaStringPtr syntax_version_;
  ::google::protobuf::internal::ArenaStringPtr source_location_;
  bool disable_macros_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ParseResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.ParseResponse) */ {
 public:
  ParseResponse();
  virtual ~ParseResponse();

  ParseResponse(const ParseResponse& from);

  inline ParseResponse& operator=(const ParseResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParseResponse(ParseResponse&& from) noexcept
    : ParseResponse() {
    *this = ::std::move(from);
  }

  inline ParseResponse& operator=(ParseResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParseResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ParseResponse* internal_default_instance() {
    return reinterpret_cast<const ParseResponse*>(
               &_ParseResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void UnsafeArenaSwap(ParseResponse* other);
  void Swap(ParseResponse* other);
  friend void swap(ParseResponse& a, ParseResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParseResponse* New() const final {
    return CreateMaybeMessage<ParseResponse>(NULL);
  }

  ParseResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ParseResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ParseResponse& from);
  void MergeFrom(const ParseResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParseResponse* other);
  protected:
  explicit ParseResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.rpc.Status issues = 2;
  int issues_size() const;
  void clear_issues();
  static const int kIssuesFieldNumber = 2;
  ::google::rpc::Status* mutable_issues(int index);
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
      mutable_issues();
  const ::google::rpc::Status& issues(int index) const;
  ::google::rpc::Status* add_issues();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
      issues() const;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  bool has_parsed_expr() const;
  void clear_parsed_expr();
  static const int kParsedExprFieldNumber = 1;
  private:
  const ::google::api::expr::v1alpha1::ParsedExpr& _internal_parsed_expr() const;
  public:
  const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr() const;
  ::google::api::expr::v1alpha1::ParsedExpr* release_parsed_expr();
  ::google::api::expr::v1alpha1::ParsedExpr* mutable_parsed_expr();
  void set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr);
  void unsafe_arena_set_allocated_parsed_expr(
      ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr);
  ::google::api::expr::v1alpha1::ParsedExpr* unsafe_arena_release_parsed_expr();

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.ParseResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status > issues_;
  ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.CheckRequest) */ {
 public:
  CheckRequest();
  virtual ~CheckRequest();

  CheckRequest(const CheckRequest& from);

  inline CheckRequest& operator=(const CheckRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckRequest(CheckRequest&& from) noexcept
    : CheckRequest() {
    *this = ::std::move(from);
  }

  inline CheckRequest& operator=(CheckRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckRequest* internal_default_instance() {
    return reinterpret_cast<const CheckRequest*>(
               &_CheckRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(CheckRequest* other);
  void Swap(CheckRequest* other);
  friend void swap(CheckRequest& a, CheckRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckRequest* New() const final {
    return CreateMaybeMessage<CheckRequest>(NULL);
  }

  CheckRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckRequest& from);
  void MergeFrom(const CheckRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckRequest* other);
  protected:
  explicit CheckRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  int type_env_size() const;
  void clear_type_env();
  static const int kTypeEnvFieldNumber = 2;
  ::google::api::expr::v1alpha1::Decl* mutable_type_env(int index);
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1alpha1::Decl >*
      mutable_type_env();
  const ::google::api::expr::v1alpha1::Decl& type_env(int index) const;
  ::google::api::expr::v1alpha1::Decl* add_type_env();
  const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1alpha1::Decl >&
      type_env() const;

  // string container = 3;
  void clear_container();
  static const int kContainerFieldNumber = 3;
  const ::std::string& container() const;
  void set_container(const ::std::string& value);
  #if LANG_CXX11
  void set_container(::std::string&& value);
  #endif
  void set_container(const char* value);
  void set_container(const char* value, size_t size);
  ::std::string* mutable_container();
  ::std::string* release_container();
  void set_allocated_container(::std::string* container);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_container();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_container(
      ::std::string* container);

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  bool has_parsed_expr() const;
  void clear_parsed_expr();
  static const int kParsedExprFieldNumber = 1;
  private:
  const ::google::api::expr::v1alpha1::ParsedExpr& _internal_parsed_expr() const;
  public:
  const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr() const;
  ::google::api::expr::v1alpha1::ParsedExpr* release_parsed_expr();
  ::google::api::expr::v1alpha1::ParsedExpr* mutable_parsed_expr();
  void set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr);
  void unsafe_arena_set_allocated_parsed_expr(
      ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr);
  ::google::api::expr::v1alpha1::ParsedExpr* unsafe_arena_release_parsed_expr();

  // bool no_std_env = 4;
  void clear_no_std_env();
  static const int kNoStdEnvFieldNumber = 4;
  bool no_std_env() const;
  void set_no_std_env(bool value);

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.CheckRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1alpha1::Decl > type_env_;
  ::google::protobuf::internal::ArenaStringPtr container_;
  ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr_;
  bool no_std_env_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.CheckResponse) */ {
 public:
  CheckResponse();
  virtual ~CheckResponse();

  CheckResponse(const CheckResponse& from);

  inline CheckResponse& operator=(const CheckResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckResponse(CheckResponse&& from) noexcept
    : CheckResponse() {
    *this = ::std::move(from);
  }

  inline CheckResponse& operator=(CheckResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CheckResponse* internal_default_instance() {
    return reinterpret_cast<const CheckResponse*>(
               &_CheckResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void UnsafeArenaSwap(CheckResponse* other);
  void Swap(CheckResponse* other);
  friend void swap(CheckResponse& a, CheckResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckResponse* New() const final {
    return CreateMaybeMessage<CheckResponse>(NULL);
  }

  CheckResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CheckResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CheckResponse& from);
  void MergeFrom(const CheckResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CheckResponse* other);
  protected:
  explicit CheckResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.rpc.Status issues = 2;
  int issues_size() const;
  void clear_issues();
  static const int kIssuesFieldNumber = 2;
  ::google::rpc::Status* mutable_issues(int index);
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
      mutable_issues();
  const ::google::rpc::Status& issues(int index) const;
  ::google::rpc::Status* add_issues();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
      issues() const;

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  bool has_checked_expr() const;
  void clear_checked_expr();
  static const int kCheckedExprFieldNumber = 1;
  private:
  const ::google::api::expr::v1alpha1::CheckedExpr& _internal_checked_expr() const;
  public:
  const ::google::api::expr::v1alpha1::CheckedExpr& checked_expr() const;
  ::google::api::expr::v1alpha1::CheckedExpr* release_checked_expr();
  ::google::api::expr::v1alpha1::CheckedExpr* mutable_checked_expr();
  void set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr);
  void unsafe_arena_set_allocated_checked_expr(
      ::google::api::expr::v1alpha1::CheckedExpr* checked_expr);
  ::google::api::expr::v1alpha1::CheckedExpr* unsafe_arena_release_checked_expr();

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.CheckResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status > issues_;
  ::google::api::expr::v1alpha1::CheckedExpr* checked_expr_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvalRequest_BindingsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<EvalRequest_BindingsEntry_DoNotUse, 
    ::std::string, ::google::api::expr::v1alpha1::ExprValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<EvalRequest_BindingsEntry_DoNotUse, 
    ::std::string, ::google::api::expr::v1alpha1::ExprValue,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  EvalRequest_BindingsEntry_DoNotUse();
  EvalRequest_BindingsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const EvalRequest_BindingsEntry_DoNotUse& other);
  static const EvalRequest_BindingsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const EvalRequest_BindingsEntry_DoNotUse*>(&_EvalRequest_BindingsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class EvalRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.EvalRequest) */ {
 public:
  EvalRequest();
  virtual ~EvalRequest();

  EvalRequest(const EvalRequest& from);

  inline EvalRequest& operator=(const EvalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvalRequest(EvalRequest&& from) noexcept
    : EvalRequest() {
    *this = ::std::move(from);
  }

  inline EvalRequest& operator=(EvalRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvalRequest& default_instance();

  enum ExprKindCase {
    kParsedExpr = 1,
    kCheckedExpr = 2,
    EXPR_KIND_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EvalRequest* internal_default_instance() {
    return reinterpret_cast<const EvalRequest*>(
               &_EvalRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void UnsafeArenaSwap(EvalRequest* other);
  void Swap(EvalRequest* other);
  friend void swap(EvalRequest& a, EvalRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvalRequest* New() const final {
    return CreateMaybeMessage<EvalRequest>(NULL);
  }

  EvalRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EvalRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EvalRequest& from);
  void MergeFrom(const EvalRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvalRequest* other);
  protected:
  explicit EvalRequest(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  int bindings_size() const;
  void clear_bindings();
  static const int kBindingsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >&
      bindings() const;
  ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >*
      mutable_bindings();

  // string container = 4;
  void clear_container();
  static const int kContainerFieldNumber = 4;
  const ::std::string& container() const;
  void set_container(const ::std::string& value);
  #if LANG_CXX11
  void set_container(::std::string&& value);
  #endif
  void set_container(const char* value);
  void set_container(const char* value, size_t size);
  ::std::string* mutable_container();
  ::std::string* release_container();
  void set_allocated_container(::std::string* container);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_container();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_container(
      ::std::string* container);

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  bool has_parsed_expr() const;
  void clear_parsed_expr();
  static const int kParsedExprFieldNumber = 1;
  private:
  const ::google::api::expr::v1alpha1::ParsedExpr& _internal_parsed_expr() const;
  public:
  const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr() const;
  ::google::api::expr::v1alpha1::ParsedExpr* release_parsed_expr();
  ::google::api::expr::v1alpha1::ParsedExpr* mutable_parsed_expr();
  void set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr);
  void unsafe_arena_set_allocated_parsed_expr(
      ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr);
  ::google::api::expr::v1alpha1::ParsedExpr* unsafe_arena_release_parsed_expr();

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
  bool has_checked_expr() const;
  void clear_checked_expr();
  static const int kCheckedExprFieldNumber = 2;
  private:
  const ::google::api::expr::v1alpha1::CheckedExpr& _internal_checked_expr() const;
  public:
  const ::google::api::expr::v1alpha1::CheckedExpr& checked_expr() const;
  ::google::api::expr::v1alpha1::CheckedExpr* release_checked_expr();
  ::google::api::expr::v1alpha1::CheckedExpr* mutable_checked_expr();
  void set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr);
  void unsafe_arena_set_allocated_checked_expr(
      ::google::api::expr::v1alpha1::CheckedExpr* checked_expr);
  ::google::api::expr::v1alpha1::CheckedExpr* unsafe_arena_release_checked_expr();

  void clear_expr_kind();
  ExprKindCase expr_kind_case() const;
  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.EvalRequest)
 private:
  void set_has_parsed_expr();
  void set_has_checked_expr();

  inline bool has_expr_kind() const;
  inline void clear_has_expr_kind();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::internal::MapField<
      EvalRequest_BindingsEntry_DoNotUse,
      ::std::string, ::google::api::expr::v1alpha1::ExprValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > bindings_;
  ::google::protobuf::internal::ArenaStringPtr container_;
  union ExprKindUnion {
    ExprKindUnion() {}
    ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr_;
    ::google::api::expr::v1alpha1::CheckedExpr* checked_expr_;
  } expr_kind_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvalResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.EvalResponse) */ {
 public:
  EvalResponse();
  virtual ~EvalResponse();

  EvalResponse(const EvalResponse& from);

  inline EvalResponse& operator=(const EvalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvalResponse(EvalResponse&& from) noexcept
    : EvalResponse() {
    *this = ::std::move(from);
  }

  inline EvalResponse& operator=(EvalResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvalResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EvalResponse* internal_default_instance() {
    return reinterpret_cast<const EvalResponse*>(
               &_EvalResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void UnsafeArenaSwap(EvalResponse* other);
  void Swap(EvalResponse* other);
  friend void swap(EvalResponse& a, EvalResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvalResponse* New() const final {
    return CreateMaybeMessage<EvalResponse>(NULL);
  }

  EvalResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<EvalResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const EvalResponse& from);
  void MergeFrom(const EvalResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EvalResponse* other);
  protected:
  explicit EvalResponse(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.rpc.Status issues = 2;
  int issues_size() const;
  void clear_issues();
  static const int kIssuesFieldNumber = 2;
  ::google::rpc::Status* mutable_issues(int index);
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
      mutable_issues();
  const ::google::rpc::Status& issues(int index) const;
  ::google::rpc::Status* add_issues();
  const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
      issues() const;

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  private:
  const ::google::api::expr::v1alpha1::ExprValue& _internal_result() const;
  public:
  const ::google::api::expr::v1alpha1::ExprValue& result() const;
  ::google::api::expr::v1alpha1::ExprValue* release_result();
  ::google::api::expr::v1alpha1::ExprValue* mutable_result();
  void set_allocated_result(::google::api::expr::v1alpha1::ExprValue* result);
  void unsafe_arena_set_allocated_result(
      ::google::api::expr::v1alpha1::ExprValue* result);
  ::google::api::expr::v1alpha1::ExprValue* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.EvalResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::google::rpc::Status > issues_;
  ::google::api::expr::v1alpha1::ExprValue* result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IssueDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1alpha1.IssueDetails) */ {
 public:
  IssueDetails();
  virtual ~IssueDetails();

  IssueDetails(const IssueDetails& from);

  inline IssueDetails& operator=(const IssueDetails& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IssueDetails(IssueDetails&& from) noexcept
    : IssueDetails() {
    *this = ::std::move(from);
  }

  inline IssueDetails& operator=(IssueDetails&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const IssueDetails& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IssueDetails* internal_default_instance() {
    return reinterpret_cast<const IssueDetails*>(
               &_IssueDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void UnsafeArenaSwap(IssueDetails* other);
  void Swap(IssueDetails* other);
  friend void swap(IssueDetails& a, IssueDetails& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IssueDetails* New() const final {
    return CreateMaybeMessage<IssueDetails>(NULL);
  }

  IssueDetails* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IssueDetails>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IssueDetails& from);
  void MergeFrom(const IssueDetails& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IssueDetails* other);
  protected:
  explicit IssueDetails(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IssueDetails_Severity Severity;
  static const Severity SEVERITY_UNSPECIFIED =
    IssueDetails_Severity_SEVERITY_UNSPECIFIED;
  static const Severity DEPRECATION =
    IssueDetails_Severity_DEPRECATION;
  static const Severity WARNING =
    IssueDetails_Severity_WARNING;
  static const Severity ERROR =
    IssueDetails_Severity_ERROR;
  static inline bool Severity_IsValid(int value) {
    return IssueDetails_Severity_IsValid(value);
  }
  static const Severity Severity_MIN =
    IssueDetails_Severity_Severity_MIN;
  static const Severity Severity_MAX =
    IssueDetails_Severity_Severity_MAX;
  static const int Severity_ARRAYSIZE =
    IssueDetails_Severity_Severity_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Severity_descriptor() {
    return IssueDetails_Severity_descriptor();
  }
  static inline const ::std::string& Severity_Name(Severity value) {
    return IssueDetails_Severity_Name(value);
  }
  static inline bool Severity_Parse(const ::std::string& name,
      Severity* value) {
    return IssueDetails_Severity_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .google.api.expr.v1alpha1.SourcePosition position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  private:
  const ::google::api::expr::v1alpha1::SourcePosition& _internal_position() const;
  public:
  const ::google::api::expr::v1alpha1::SourcePosition& position() const;
  ::google::api::expr::v1alpha1::SourcePosition* release_position();
  ::google::api::expr::v1alpha1::SourcePosition* mutable_position();
  void set_allocated_position(::google::api::expr::v1alpha1::SourcePosition* position);
  void unsafe_arena_set_allocated_position(
      ::google::api::expr::v1alpha1::SourcePosition* position);
  ::google::api::expr::v1alpha1::SourcePosition* unsafe_arena_release_position();

  // int64 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
  void clear_severity();
  static const int kSeverityFieldNumber = 1;
  ::google::api::expr::v1alpha1::IssueDetails_Severity severity() const;
  void set_severity(::google::api::expr::v1alpha1::IssueDetails_Severity value);

  // @@protoc_insertion_point(class_scope:google.api.expr.v1alpha1.IssueDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::api::expr::v1alpha1::SourcePosition* position_;
  ::google::protobuf::int64 id_;
  int severity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParseRequest

// string cel_source = 1;
inline void ParseRequest::clear_cel_source() {
  cel_source_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ParseRequest::cel_source() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ParseRequest.cel_source)
  return cel_source_.Get();
}
inline void ParseRequest::set_cel_source(const ::std::string& value) {
  
  cel_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.ParseRequest.cel_source)
}
#if LANG_CXX11
inline void ParseRequest::set_cel_source(::std::string&& value) {
  
  cel_source_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1alpha1.ParseRequest.cel_source)
}
#endif
inline void ParseRequest::set_cel_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cel_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1alpha1.ParseRequest.cel_source)
}
inline void ParseRequest::set_cel_source(const char* value,
    size_t size) {
  
  cel_source_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1alpha1.ParseRequest.cel_source)
}
inline ::std::string* ParseRequest::mutable_cel_source() {
  
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ParseRequest.cel_source)
  return cel_source_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ParseRequest::release_cel_source() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ParseRequest.cel_source)
  
  return cel_source_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ParseRequest::set_allocated_cel_source(::std::string* cel_source) {
  if (cel_source != NULL) {
    
  } else {
    
  }
  cel_source_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cel_source,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ParseRequest.cel_source)
}
inline ::std::string* ParseRequest::unsafe_arena_release_cel_source() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ParseRequest.cel_source)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return cel_source_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ParseRequest::unsafe_arena_set_allocated_cel_source(
    ::std::string* cel_source) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (cel_source != NULL) {
    
  } else {
    
  }
  cel_source_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      cel_source, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParseRequest.cel_source)
}

// string syntax_version = 2;
inline void ParseRequest::clear_syntax_version() {
  syntax_version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ParseRequest::syntax_version() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ParseRequest.syntax_version)
  return syntax_version_.Get();
}
inline void ParseRequest::set_syntax_version(const ::std::string& value) {
  
  syntax_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.ParseRequest.syntax_version)
}
#if LANG_CXX11
inline void ParseRequest::set_syntax_version(::std::string&& value) {
  
  syntax_version_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1alpha1.ParseRequest.syntax_version)
}
#endif
inline void ParseRequest::set_syntax_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  syntax_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1alpha1.ParseRequest.syntax_version)
}
inline void ParseRequest::set_syntax_version(const char* value,
    size_t size) {
  
  syntax_version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1alpha1.ParseRequest.syntax_version)
}
inline ::std::string* ParseRequest::mutable_syntax_version() {
  
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ParseRequest.syntax_version)
  return syntax_version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ParseRequest::release_syntax_version() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ParseRequest.syntax_version)
  
  return syntax_version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ParseRequest::set_allocated_syntax_version(::std::string* syntax_version) {
  if (syntax_version != NULL) {
    
  } else {
    
  }
  syntax_version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), syntax_version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ParseRequest.syntax_version)
}
inline ::std::string* ParseRequest::unsafe_arena_release_syntax_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ParseRequest.syntax_version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return syntax_version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ParseRequest::unsafe_arena_set_allocated_syntax_version(
    ::std::string* syntax_version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (syntax_version != NULL) {
    
  } else {
    
  }
  syntax_version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      syntax_version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParseRequest.syntax_version)
}

// string source_location = 3;
inline void ParseRequest::clear_source_location() {
  source_location_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& ParseRequest::source_location() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ParseRequest.source_location)
  return source_location_.Get();
}
inline void ParseRequest::set_source_location(const ::std::string& value) {
  
  source_location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.ParseRequest.source_location)
}
#if LANG_CXX11
inline void ParseRequest::set_source_location(::std::string&& value) {
  
  source_location_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1alpha1.ParseRequest.source_location)
}
#endif
inline void ParseRequest::set_source_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1alpha1.ParseRequest.source_location)
}
inline void ParseRequest::set_source_location(const char* value,
    size_t size) {
  
  source_location_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1alpha1.ParseRequest.source_location)
}
inline ::std::string* ParseRequest::mutable_source_location() {
  
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ParseRequest.source_location)
  return source_location_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* ParseRequest::release_source_location() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ParseRequest.source_location)
  
  return source_location_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void ParseRequest::set_allocated_source_location(::std::string* source_location) {
  if (source_location != NULL) {
    
  } else {
    
  }
  source_location_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_location,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ParseRequest.source_location)
}
inline ::std::string* ParseRequest::unsafe_arena_release_source_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ParseRequest.source_location)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return source_location_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void ParseRequest::unsafe_arena_set_allocated_source_location(
    ::std::string* source_location) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (source_location != NULL) {
    
  } else {
    
  }
  source_location_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      source_location, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParseRequest.source_location)
}

// bool disable_macros = 4;
inline void ParseRequest::clear_disable_macros() {
  disable_macros_ = false;
}
inline bool ParseRequest::disable_macros() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ParseRequest.disable_macros)
  return disable_macros_;
}
inline void ParseRequest::set_disable_macros(bool value) {
  
  disable_macros_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.ParseRequest.disable_macros)
}

// -------------------------------------------------------------------

// ParseResponse

// .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
inline bool ParseResponse::has_parsed_expr() const {
  return this != internal_default_instance() && parsed_expr_ != NULL;
}
inline const ::google::api::expr::v1alpha1::ParsedExpr& ParseResponse::_internal_parsed_expr() const {
  return *parsed_expr_;
}
inline const ::google::api::expr::v1alpha1::ParsedExpr& ParseResponse::parsed_expr() const {
  const ::google::api::expr::v1alpha1::ParsedExpr* p = parsed_expr_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1alpha1::ParsedExpr*>(
      &::google::api::expr::v1alpha1::_ParsedExpr_default_instance_);
}
inline ::google::api::expr::v1alpha1::ParsedExpr* ParseResponse::release_parsed_expr() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
  
  ::google::api::expr::v1alpha1::ParsedExpr* temp = parsed_expr_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  parsed_expr_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::ParsedExpr* ParseResponse::unsafe_arena_release_parsed_expr() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
  
  ::google::api::expr::v1alpha1::ParsedExpr* temp = parsed_expr_;
  parsed_expr_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::ParsedExpr* ParseResponse::mutable_parsed_expr() {
  
  if (parsed_expr_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1alpha1::ParsedExpr>(GetArenaNoVirtual());
    parsed_expr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
  return parsed_expr_;
}
inline void ParseResponse::set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parsed_expr_);
  }
  if (parsed_expr) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(parsed_expr)->GetArena();
    if (message_arena != submessage_arena) {
      parsed_expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parsed_expr, submessage_arena);
    }
    
  } else {
    
  }
  parsed_expr_ = parsed_expr;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
}

// repeated .google.rpc.Status issues = 2;
inline int ParseResponse::issues_size() const {
  return issues_.size();
}
inline ::google::rpc::Status* ParseResponse::mutable_issues(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.ParseResponse.issues)
  return issues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
ParseResponse::mutable_issues() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.ParseResponse.issues)
  return &issues_;
}
inline const ::google::rpc::Status& ParseResponse::issues(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.ParseResponse.issues)
  return issues_.Get(index);
}
inline ::google::rpc::Status* ParseResponse::add_issues() {
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.ParseResponse.issues)
  return issues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
ParseResponse::issues() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.ParseResponse.issues)
  return issues_;
}

// -------------------------------------------------------------------

// CheckRequest

// .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
inline bool CheckRequest::has_parsed_expr() const {
  return this != internal_default_instance() && parsed_expr_ != NULL;
}
inline const ::google::api::expr::v1alpha1::ParsedExpr& CheckRequest::_internal_parsed_expr() const {
  return *parsed_expr_;
}
inline const ::google::api::expr::v1alpha1::ParsedExpr& CheckRequest::parsed_expr() const {
  const ::google::api::expr::v1alpha1::ParsedExpr* p = parsed_expr_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1alpha1::ParsedExpr*>(
      &::google::api::expr::v1alpha1::_ParsedExpr_default_instance_);
}
inline ::google::api::expr::v1alpha1::ParsedExpr* CheckRequest::release_parsed_expr() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
  
  ::google::api::expr::v1alpha1::ParsedExpr* temp = parsed_expr_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  parsed_expr_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::ParsedExpr* CheckRequest::unsafe_arena_release_parsed_expr() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
  
  ::google::api::expr::v1alpha1::ParsedExpr* temp = parsed_expr_;
  parsed_expr_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::ParsedExpr* CheckRequest::mutable_parsed_expr() {
  
  if (parsed_expr_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1alpha1::ParsedExpr>(GetArenaNoVirtual());
    parsed_expr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
  return parsed_expr_;
}
inline void CheckRequest::set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parsed_expr_);
  }
  if (parsed_expr) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(parsed_expr)->GetArena();
    if (message_arena != submessage_arena) {
      parsed_expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parsed_expr, submessage_arena);
    }
    
  } else {
    
  }
  parsed_expr_ = parsed_expr;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
}

// repeated .google.api.expr.v1alpha1.Decl type_env = 2;
inline int CheckRequest::type_env_size() const {
  return type_env_.size();
}
inline ::google::api::expr::v1alpha1::Decl* CheckRequest::mutable_type_env(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.CheckRequest.type_env)
  return type_env_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1alpha1::Decl >*
CheckRequest::mutable_type_env() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.CheckRequest.type_env)
  return &type_env_;
}
inline const ::google::api::expr::v1alpha1::Decl& CheckRequest::type_env(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.CheckRequest.type_env)
  return type_env_.Get(index);
}
inline ::google::api::expr::v1alpha1::Decl* CheckRequest::add_type_env() {
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.CheckRequest.type_env)
  return type_env_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::api::expr::v1alpha1::Decl >&
CheckRequest::type_env() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.CheckRequest.type_env)
  return type_env_;
}

// string container = 3;
inline void CheckRequest::clear_container() {
  container_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& CheckRequest::container() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.CheckRequest.container)
  return container_.Get();
}
inline void CheckRequest::set_container(const ::std::string& value) {
  
  container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.CheckRequest.container)
}
#if LANG_CXX11
inline void CheckRequest::set_container(::std::string&& value) {
  
  container_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1alpha1.CheckRequest.container)
}
#endif
inline void CheckRequest::set_container(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1alpha1.CheckRequest.container)
}
inline void CheckRequest::set_container(const char* value,
    size_t size) {
  
  container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1alpha1.CheckRequest.container)
}
inline ::std::string* CheckRequest::mutable_container() {
  
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.CheckRequest.container)
  return container_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* CheckRequest::release_container() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.CheckRequest.container)
  
  return container_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void CheckRequest::set_allocated_container(::std::string* container) {
  if (container != NULL) {
    
  } else {
    
  }
  container_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), container,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.CheckRequest.container)
}
inline ::std::string* CheckRequest::unsafe_arena_release_container() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.CheckRequest.container)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return container_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void CheckRequest::unsafe_arena_set_allocated_container(
    ::std::string* container) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (container != NULL) {
    
  } else {
    
  }
  container_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      container, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckRequest.container)
}

// bool no_std_env = 4;
inline void CheckRequest::clear_no_std_env() {
  no_std_env_ = false;
}
inline bool CheckRequest::no_std_env() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.CheckRequest.no_std_env)
  return no_std_env_;
}
inline void CheckRequest::set_no_std_env(bool value) {
  
  no_std_env_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.CheckRequest.no_std_env)
}

// -------------------------------------------------------------------

// CheckResponse

// .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
inline bool CheckResponse::has_checked_expr() const {
  return this != internal_default_instance() && checked_expr_ != NULL;
}
inline const ::google::api::expr::v1alpha1::CheckedExpr& CheckResponse::_internal_checked_expr() const {
  return *checked_expr_;
}
inline const ::google::api::expr::v1alpha1::CheckedExpr& CheckResponse::checked_expr() const {
  const ::google::api::expr::v1alpha1::CheckedExpr* p = checked_expr_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.CheckResponse.checked_expr)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1alpha1::CheckedExpr*>(
      &::google::api::expr::v1alpha1::_CheckedExpr_default_instance_);
}
inline ::google::api::expr::v1alpha1::CheckedExpr* CheckResponse::release_checked_expr() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.CheckResponse.checked_expr)
  
  ::google::api::expr::v1alpha1::CheckedExpr* temp = checked_expr_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  checked_expr_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::CheckedExpr* CheckResponse::unsafe_arena_release_checked_expr() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.CheckResponse.checked_expr)
  
  ::google::api::expr::v1alpha1::CheckedExpr* temp = checked_expr_;
  checked_expr_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::CheckedExpr* CheckResponse::mutable_checked_expr() {
  
  if (checked_expr_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1alpha1::CheckedExpr>(GetArenaNoVirtual());
    checked_expr_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.CheckResponse.checked_expr)
  return checked_expr_;
}
inline void CheckResponse::set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(checked_expr_);
  }
  if (checked_expr) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(checked_expr)->GetArena();
    if (message_arena != submessage_arena) {
      checked_expr = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, checked_expr, submessage_arena);
    }
    
  } else {
    
  }
  checked_expr_ = checked_expr;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.CheckResponse.checked_expr)
}

// repeated .google.rpc.Status issues = 2;
inline int CheckResponse::issues_size() const {
  return issues_.size();
}
inline ::google::rpc::Status* CheckResponse::mutable_issues(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.CheckResponse.issues)
  return issues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
CheckResponse::mutable_issues() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.CheckResponse.issues)
  return &issues_;
}
inline const ::google::rpc::Status& CheckResponse::issues(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.CheckResponse.issues)
  return issues_.Get(index);
}
inline ::google::rpc::Status* CheckResponse::add_issues() {
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.CheckResponse.issues)
  return issues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
CheckResponse::issues() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.CheckResponse.issues)
  return issues_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EvalRequest

// .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
inline bool EvalRequest::has_parsed_expr() const {
  return expr_kind_case() == kParsedExpr;
}
inline void EvalRequest::set_has_parsed_expr() {
  _oneof_case_[0] = kParsedExpr;
}
inline const ::google::api::expr::v1alpha1::ParsedExpr& EvalRequest::_internal_parsed_expr() const {
  return *expr_kind_.parsed_expr_;
}
inline ::google::api::expr::v1alpha1::ParsedExpr* EvalRequest::release_parsed_expr() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
  if (has_parsed_expr()) {
    clear_has_expr_kind();
      ::google::api::expr::v1alpha1::ParsedExpr* temp = expr_kind_.parsed_expr_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    expr_kind_.parsed_expr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::expr::v1alpha1::ParsedExpr& EvalRequest::parsed_expr() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
  return has_parsed_expr()
      ? *expr_kind_.parsed_expr_
      : *reinterpret_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(&::google::api::expr::v1alpha1::_ParsedExpr_default_instance_);
}
inline ::google::api::expr::v1alpha1::ParsedExpr* EvalRequest::unsafe_arena_release_parsed_expr() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
  if (has_parsed_expr()) {
    clear_has_expr_kind();
    ::google::api::expr::v1alpha1::ParsedExpr* temp = expr_kind_.parsed_expr_;
    expr_kind_.parsed_expr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void EvalRequest::unsafe_arena_set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  clear_expr_kind();
  if (parsed_expr) {
    set_has_parsed_expr();
    expr_kind_.parsed_expr_ = parsed_expr;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
}
inline ::google::api::expr::v1alpha1::ParsedExpr* EvalRequest::mutable_parsed_expr() {
  if (!has_parsed_expr()) {
    clear_expr_kind();
    set_has_parsed_expr();
    expr_kind_.parsed_expr_ = CreateMaybeMessage< ::google::api::expr::v1alpha1::ParsedExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
  return expr_kind_.parsed_expr_;
}

// .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
inline bool EvalRequest::has_checked_expr() const {
  return expr_kind_case() == kCheckedExpr;
}
inline void EvalRequest::set_has_checked_expr() {
  _oneof_case_[0] = kCheckedExpr;
}
inline const ::google::api::expr::v1alpha1::CheckedExpr& EvalRequest::_internal_checked_expr() const {
  return *expr_kind_.checked_expr_;
}
inline ::google::api::expr::v1alpha1::CheckedExpr* EvalRequest::release_checked_expr() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.EvalRequest.checked_expr)
  if (has_checked_expr()) {
    clear_has_expr_kind();
      ::google::api::expr::v1alpha1::CheckedExpr* temp = expr_kind_.checked_expr_;
    if (GetArenaNoVirtual() != NULL) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    expr_kind_.checked_expr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::google::api::expr::v1alpha1::CheckedExpr& EvalRequest::checked_expr() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalRequest.checked_expr)
  return has_checked_expr()
      ? *expr_kind_.checked_expr_
      : *reinterpret_cast< ::google::api::expr::v1alpha1::CheckedExpr*>(&::google::api::expr::v1alpha1::_CheckedExpr_default_instance_);
}
inline ::google::api::expr::v1alpha1::CheckedExpr* EvalRequest::unsafe_arena_release_checked_expr() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.EvalRequest.checked_expr)
  if (has_checked_expr()) {
    clear_has_expr_kind();
    ::google::api::expr::v1alpha1::CheckedExpr* temp = expr_kind_.checked_expr_;
    expr_kind_.checked_expr_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void EvalRequest::unsafe_arena_set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  clear_expr_kind();
  if (checked_expr) {
    set_has_checked_expr();
    expr_kind_.checked_expr_ = checked_expr;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.EvalRequest.checked_expr)
}
inline ::google::api::expr::v1alpha1::CheckedExpr* EvalRequest::mutable_checked_expr() {
  if (!has_checked_expr()) {
    clear_expr_kind();
    set_has_checked_expr();
    expr_kind_.checked_expr_ = CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckedExpr >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalRequest.checked_expr)
  return expr_kind_.checked_expr_;
}

// map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
inline int EvalRequest::bindings_size() const {
  return bindings_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >&
EvalRequest::bindings() const {
  // @@protoc_insertion_point(field_map:google.api.expr.v1alpha1.EvalRequest.bindings)
  return bindings_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::api::expr::v1alpha1::ExprValue >*
EvalRequest::mutable_bindings() {
  // @@protoc_insertion_point(field_mutable_map:google.api.expr.v1alpha1.EvalRequest.bindings)
  return bindings_.MutableMap();
}

// string container = 4;
inline void EvalRequest::clear_container() {
  container_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& EvalRequest::container() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalRequest.container)
  return container_.Get();
}
inline void EvalRequest::set_container(const ::std::string& value) {
  
  container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.EvalRequest.container)
}
#if LANG_CXX11
inline void EvalRequest::set_container(::std::string&& value) {
  
  container_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1alpha1.EvalRequest.container)
}
#endif
inline void EvalRequest::set_container(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1alpha1.EvalRequest.container)
}
inline void EvalRequest::set_container(const char* value,
    size_t size) {
  
  container_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1alpha1.EvalRequest.container)
}
inline ::std::string* EvalRequest::mutable_container() {
  
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalRequest.container)
  return container_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* EvalRequest::release_container() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.EvalRequest.container)
  
  return container_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void EvalRequest::set_allocated_container(::std::string* container) {
  if (container != NULL) {
    
  } else {
    
  }
  container_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), container,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.EvalRequest.container)
}
inline ::std::string* EvalRequest::unsafe_arena_release_container() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.EvalRequest.container)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return container_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void EvalRequest::unsafe_arena_set_allocated_container(
    ::std::string* container) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (container != NULL) {
    
  } else {
    
  }
  container_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      container, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.EvalRequest.container)
}

inline bool EvalRequest::has_expr_kind() const {
  return expr_kind_case() != EXPR_KIND_NOT_SET;
}
inline void EvalRequest::clear_has_expr_kind() {
  _oneof_case_[0] = EXPR_KIND_NOT_SET;
}
inline EvalRequest::ExprKindCase EvalRequest::expr_kind_case() const {
  return EvalRequest::ExprKindCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// EvalResponse

// .google.api.expr.v1alpha1.ExprValue result = 1;
inline bool EvalResponse::has_result() const {
  return this != internal_default_instance() && result_ != NULL;
}
inline const ::google::api::expr::v1alpha1::ExprValue& EvalResponse::_internal_result() const {
  return *result_;
}
inline const ::google::api::expr::v1alpha1::ExprValue& EvalResponse::result() const {
  const ::google::api::expr::v1alpha1::ExprValue* p = result_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalResponse.result)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1alpha1::ExprValue*>(
      &::google::api::expr::v1alpha1::_ExprValue_default_instance_);
}
inline ::google::api::expr::v1alpha1::ExprValue* EvalResponse::release_result() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.EvalResponse.result)
  
  ::google::api::expr::v1alpha1::ExprValue* temp = result_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  result_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::ExprValue* EvalResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.EvalResponse.result)
  
  ::google::api::expr::v1alpha1::ExprValue* temp = result_;
  result_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::ExprValue* EvalResponse::mutable_result() {
  
  if (result_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1alpha1::ExprValue>(GetArenaNoVirtual());
    result_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalResponse.result)
  return result_;
}
inline void EvalResponse::set_allocated_result(::google::api::expr::v1alpha1::ExprValue* result) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(result_);
  }
  if (result) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(result)->GetArena();
    if (message_arena != submessage_arena) {
      result = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.EvalResponse.result)
}

// repeated .google.rpc.Status issues = 2;
inline int EvalResponse::issues_size() const {
  return issues_.size();
}
inline ::google::rpc::Status* EvalResponse::mutable_issues(int index) {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.EvalResponse.issues)
  return issues_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >*
EvalResponse::mutable_issues() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1alpha1.EvalResponse.issues)
  return &issues_;
}
inline const ::google::rpc::Status& EvalResponse::issues(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.EvalResponse.issues)
  return issues_.Get(index);
}
inline ::google::rpc::Status* EvalResponse::add_issues() {
  // @@protoc_insertion_point(field_add:google.api.expr.v1alpha1.EvalResponse.issues)
  return issues_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::rpc::Status >&
EvalResponse::issues() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1alpha1.EvalResponse.issues)
  return issues_;
}

// -------------------------------------------------------------------

// IssueDetails

// .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
inline void IssueDetails::clear_severity() {
  severity_ = 0;
}
inline ::google::api::expr::v1alpha1::IssueDetails_Severity IssueDetails::severity() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.IssueDetails.severity)
  return static_cast< ::google::api::expr::v1alpha1::IssueDetails_Severity >(severity_);
}
inline void IssueDetails::set_severity(::google::api::expr::v1alpha1::IssueDetails_Severity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.IssueDetails.severity)
}

// .google.api.expr.v1alpha1.SourcePosition position = 2;
inline bool IssueDetails::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline const ::google::api::expr::v1alpha1::SourcePosition& IssueDetails::_internal_position() const {
  return *position_;
}
inline const ::google::api::expr::v1alpha1::SourcePosition& IssueDetails::position() const {
  const ::google::api::expr::v1alpha1::SourcePosition* p = position_;
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.IssueDetails.position)
  return p != NULL ? *p : *reinterpret_cast<const ::google::api::expr::v1alpha1::SourcePosition*>(
      &::google::api::expr::v1alpha1::_SourcePosition_default_instance_);
}
inline ::google::api::expr::v1alpha1::SourcePosition* IssueDetails::release_position() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1alpha1.IssueDetails.position)
  
  ::google::api::expr::v1alpha1::SourcePosition* temp = position_;
  if (GetArenaNoVirtual() != NULL) {
    temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
  }
  position_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::SourcePosition* IssueDetails::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1alpha1.IssueDetails.position)
  
  ::google::api::expr::v1alpha1::SourcePosition* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::google::api::expr::v1alpha1::SourcePosition* IssueDetails::mutable_position() {
  
  if (position_ == NULL) {
    auto* p = CreateMaybeMessage<::google::api::expr::v1alpha1::SourcePosition>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1alpha1.IssueDetails.position)
  return position_;
}
inline void IssueDetails::set_allocated_position(::google::api::expr::v1alpha1::SourcePosition* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(position_);
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(position)->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.IssueDetails.position)
}

// int64 id = 3;
inline void IssueDetails::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 IssueDetails::id() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1alpha1.IssueDetails.id)
  return id_;
}
inline void IssueDetails::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:google.api.expr.v1alpha1.IssueDetails.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::api::expr::v1alpha1::IssueDetails_Severity> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::api::expr::v1alpha1::IssueDetails_Severity>() {
  return ::google::api::expr::v1alpha1::IssueDetails_Severity_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto
