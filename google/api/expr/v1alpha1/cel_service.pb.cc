// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/cel_service.proto

#include "google/api/expr/v1alpha1/cel_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fcel_5fservice_2eproto {
void InitDefaults() {
}

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/expr/v1alpha1/cel_service.proto", schemas, file_default_instances, TableStruct::offsets,
      NULL, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n*google/api/expr/v1alpha1/cel_service.p"
      "roto\022\030google.api.expr.v1alpha1\0322google/a"
      "pi/expr/v1alpha1/conformance_service.pro"
      "to2\235\002\n\nCelService\022Z\n\005Parse\022&.google.api."
      "expr.v1alpha1.ParseRequest\032\'.google.api."
      "expr.v1alpha1.ParseResponse\"\000\022Z\n\005Check\022&"
      ".google.api.expr.v1alpha1.CheckRequest\032\'"
      ".google.api.expr.v1alpha1.CheckResponse\""
      "\000\022W\n\004Eval\022%.google.api.expr.v1alpha1.Eva"
      "lRequest\032&.google.api.expr.v1alpha1.Eval"
      "Response\"\000Br\n\034com.google.api.expr.v1alph"
      "a1B\017CelServiceProtoP\001Z<google.golang.org"
      "/genproto/googleapis/api/expr/v1alpha1;e"
      "xpr\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 534);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/expr/v1alpha1/cel_service.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fcel_5fservice_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
