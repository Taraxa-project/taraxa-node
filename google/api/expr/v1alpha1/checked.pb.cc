// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/checked.proto

#include "google/api/expr/v1alpha1/checked.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckedExpr_ReferenceMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckedExpr_TypeMapEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Decl_FunctionDecl;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Decl_FunctionDecl_Overload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Reference;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Type;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Decl_IdentDecl;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SourceInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Constant;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Expr;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto
namespace protobuf_google_2fprotobuf_2fempty_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fempty_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Empty;
}  // namespace protobuf_google_2fprotobuf_2fempty_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class CheckedExpr_ReferenceMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckedExpr_ReferenceMapEntry_DoNotUse>
      _instance;
} _CheckedExpr_ReferenceMapEntry_DoNotUse_default_instance_;
class CheckedExpr_TypeMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckedExpr_TypeMapEntry_DoNotUse>
      _instance;
} _CheckedExpr_TypeMapEntry_DoNotUse_default_instance_;
class CheckedExprDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckedExpr>
      _instance;
} _CheckedExpr_default_instance_;
class Type_ListTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_ListType>
      _instance;
} _Type_ListType_default_instance_;
class Type_MapTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_MapType>
      _instance;
} _Type_MapType_default_instance_;
class Type_FunctionTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_FunctionType>
      _instance;
} _Type_FunctionType_default_instance_;
class Type_AbstractTypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type_AbstractType>
      _instance;
} _Type_AbstractType_default_instance_;
class TypeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Type>
      _instance;
  const ::google::protobuf::Empty* dyn_;
  int null_;
  int primitive_;
  int wrapper_;
  int well_known_;
  const ::google::api::expr::v1alpha1::Type_ListType* list_type_;
  const ::google::api::expr::v1alpha1::Type_MapType* map_type_;
  const ::google::api::expr::v1alpha1::Type_FunctionType* function_;
  ::google::protobuf::internal::ArenaStringPtr message_type_;
  ::google::protobuf::internal::ArenaStringPtr type_param_;
  const ::google::api::expr::v1alpha1::Type* type_;
  const ::google::protobuf::Empty* error_;
  const ::google::api::expr::v1alpha1::Type_AbstractType* abstract_type_;
} _Type_default_instance_;
class Decl_IdentDeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decl_IdentDecl>
      _instance;
} _Decl_IdentDecl_default_instance_;
class Decl_FunctionDecl_OverloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decl_FunctionDecl_Overload>
      _instance;
} _Decl_FunctionDecl_Overload_default_instance_;
class Decl_FunctionDeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decl_FunctionDecl>
      _instance;
} _Decl_FunctionDecl_default_instance_;
class DeclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Decl>
      _instance;
  const ::google::api::expr::v1alpha1::Decl_IdentDecl* ident_;
  const ::google::api::expr::v1alpha1::Decl_FunctionDecl* function_;
} _Decl_default_instance_;
class ReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reference>
      _instance;
} _Reference_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto {
static void InitDefaultsCheckedExpr_ReferenceMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckedExpr_ReferenceMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse();
  }
  ::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckedExpr_ReferenceMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckedExpr_ReferenceMapEntry_DoNotUse}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Reference.base,}};

static void InitDefaultsCheckedExpr_TypeMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckedExpr_TypeMapEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse();
  }
  ::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckedExpr_TypeMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckedExpr_TypeMapEntry_DoNotUse}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base,}};

static void InitDefaultsCheckedExpr() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckedExpr_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckedExpr();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::CheckedExpr::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CheckedExpr =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCheckedExpr}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr_ReferenceMapEntry_DoNotUse.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr_TypeMapEntry_DoNotUse.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_SourceInfo.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_Expr.base,}};

static void InitDefaultsType() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Type_ListType_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Type_ListType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Type_MapType_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Type_MapType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Type_FunctionType_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Type_FunctionType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Type_AbstractType_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Type_AbstractType();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Type_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Type();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Type_ListType::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Type_MapType::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Type_FunctionType::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Type_AbstractType::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Type::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Type =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsType}, {
      &protobuf_google_2fprotobuf_2fempty_2eproto::scc_info_Empty.base,}};

static void InitDefaultsDecl_IdentDecl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Decl_IdentDecl_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Decl_IdentDecl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Decl_IdentDecl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Decl_IdentDecl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDecl_IdentDecl}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_Constant.base,}};

static void InitDefaultsDecl_FunctionDecl_Overload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Decl_FunctionDecl_Overload_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Decl_FunctionDecl_Overload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDecl_FunctionDecl_Overload}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base,}};

static void InitDefaultsDecl_FunctionDecl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Decl_FunctionDecl_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Decl_FunctionDecl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Decl_FunctionDecl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Decl_FunctionDecl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDecl_FunctionDecl}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl_Overload.base,}};

static void InitDefaultsDecl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Decl_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Decl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Decl::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Decl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsDecl}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_IdentDecl.base,
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl.base,}};

static void InitDefaultsReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Reference_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Reference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Reference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Reference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReference}, {
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::scc_info_Constant.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CheckedExpr_ReferenceMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckedExpr_TypeMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckedExpr.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Type.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Decl_IdentDecl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Decl_FunctionDecl_Overload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Decl_FunctionDecl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Decl.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reference.base);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr, reference_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr, type_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr, source_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckedExpr, expr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_ListType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_ListType, elem_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_MapType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_MapType, key_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_MapType, value_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_FunctionType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_FunctionType, result_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_FunctionType, arg_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_AbstractType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_AbstractType, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type_AbstractType, parameter_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, dyn_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, null_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, primitive_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, wrapper_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, well_known_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, list_type_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, map_type_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, function_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, message_type_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, type_param_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, type_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, error_),
  offsetof(::google::api::expr::v1alpha1::TypeDefaultTypeInternal, abstract_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Type, type_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_IdentDecl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_IdentDecl, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_IdentDecl, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_IdentDecl, doc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, overload_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, type_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, result_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, is_instance_function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload, doc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl_FunctionDecl, overloads_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl, name_),
  offsetof(::google::api::expr::v1alpha1::DeclDefaultTypeInternal, ident_),
  offsetof(::google::api::expr::v1alpha1::DeclDefaultTypeInternal, function_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Decl, decl_kind_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Reference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Reference, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Reference, overload_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::expr::v1alpha1::Reference, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse)},
  { 9, 16, sizeof(::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse)},
  { 18, -1, sizeof(::google::api::expr::v1alpha1::CheckedExpr)},
  { 27, -1, sizeof(::google::api::expr::v1alpha1::Type_ListType)},
  { 33, -1, sizeof(::google::api::expr::v1alpha1::Type_MapType)},
  { 40, -1, sizeof(::google::api::expr::v1alpha1::Type_FunctionType)},
  { 47, -1, sizeof(::google::api::expr::v1alpha1::Type_AbstractType)},
  { 54, -1, sizeof(::google::api::expr::v1alpha1::Type)},
  { 73, -1, sizeof(::google::api::expr::v1alpha1::Decl_IdentDecl)},
  { 81, -1, sizeof(::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload)},
  { 92, -1, sizeof(::google::api::expr::v1alpha1::Decl_FunctionDecl)},
  { 98, -1, sizeof(::google::api::expr::v1alpha1::Decl)},
  { 107, -1, sizeof(::google::api::expr::v1alpha1::Reference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_CheckedExpr_ReferenceMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_CheckedExpr_TypeMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_CheckedExpr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Type_ListType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Type_MapType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Type_FunctionType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Type_AbstractType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Type_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Decl_IdentDecl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Decl_FunctionDecl_Overload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Decl_FunctionDecl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Decl_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::expr::v1alpha1::_Reference_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/expr/v1alpha1/checked.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n&google/api/expr/v1alpha1/checked.proto"
      "\022\030google.api.expr.v1alpha1\032%google/api/e"
      "xpr/v1alpha1/syntax.proto\032\033google/protob"
      "uf/empty.proto\032\034google/protobuf/struct.p"
      "roto\"\266\003\n\013CheckedExpr\022N\n\rreference_map\030\002 "
      "\003(\01327.google.api.expr.v1alpha1.CheckedEx"
      "pr.ReferenceMapEntry\022D\n\010type_map\030\003 \003(\01322"
      ".google.api.expr.v1alpha1.CheckedExpr.Ty"
      "peMapEntry\0229\n\013source_info\030\005 \001(\0132$.google"
      ".api.expr.v1alpha1.SourceInfo\022,\n\004expr\030\004 "
      "\001(\0132\036.google.api.expr.v1alpha1.Expr\032X\n\021R"
      "eferenceMapEntry\022\013\n\003key\030\001 \001(\003\0222\n\005value\030\002"
      " \001(\0132#.google.api.expr.v1alpha1.Referenc"
      "e:\0028\001\032N\n\014TypeMapEntry\022\013\n\003key\030\001 \001(\003\022-\n\005va"
      "lue\030\002 \001(\0132\036.google.api.expr.v1alpha1.Typ"
      "e:\0028\001\"\202\n\n\004Type\022%\n\003dyn\030\001 \001(\0132\026.google.pro"
      "tobuf.EmptyH\000\022*\n\004null\030\002 \001(\0162\032.google.pro"
      "tobuf.NullValueH\000\022A\n\tprimitive\030\003 \001(\0162,.g"
      "oogle.api.expr.v1alpha1.Type.PrimitiveTy"
      "peH\000\022\?\n\007wrapper\030\004 \001(\0162,.google.api.expr."
      "v1alpha1.Type.PrimitiveTypeH\000\022B\n\nwell_kn"
      "own\030\005 \001(\0162,.google.api.expr.v1alpha1.Typ"
      "e.WellKnownTypeH\000\022<\n\tlist_type\030\006 \001(\0132\'.g"
      "oogle.api.expr.v1alpha1.Type.ListTypeH\000\022"
      ":\n\010map_type\030\007 \001(\0132&.google.api.expr.v1al"
      "pha1.Type.MapTypeH\000\022\?\n\010function\030\010 \001(\0132+."
      "google.api.expr.v1alpha1.Type.FunctionTy"
      "peH\000\022\026\n\014message_type\030\t \001(\tH\000\022\024\n\ntype_par"
      "am\030\n \001(\tH\000\022.\n\004type\030\013 \001(\0132\036.google.api.ex"
      "pr.v1alpha1.TypeH\000\022\'\n\005error\030\014 \001(\0132\026.goog"
      "le.protobuf.EmptyH\000\022D\n\rabstract_type\030\016 \001"
      "(\0132+.google.api.expr.v1alpha1.Type.Abstr"
      "actTypeH\000\032=\n\010ListType\0221\n\telem_type\030\001 \001(\013"
      "2\036.google.api.expr.v1alpha1.Type\032o\n\007MapT"
      "ype\0220\n\010key_type\030\001 \001(\0132\036.google.api.expr."
      "v1alpha1.Type\0222\n\nvalue_type\030\002 \001(\0132\036.goog"
      "le.api.expr.v1alpha1.Type\032v\n\014FunctionTyp"
      "e\0223\n\013result_type\030\001 \001(\0132\036.google.api.expr"
      ".v1alpha1.Type\0221\n\targ_types\030\002 \003(\0132\036.goog"
      "le.api.expr.v1alpha1.Type\032U\n\014AbstractTyp"
      "e\022\014\n\004name\030\001 \001(\t\0227\n\017parameter_types\030\002 \003(\013"
      "2\036.google.api.expr.v1alpha1.Type\"s\n\rPrim"
      "itiveType\022\036\n\032PRIMITIVE_TYPE_UNSPECIFIED\020"
      "\000\022\010\n\004BOOL\020\001\022\t\n\005INT64\020\002\022\n\n\006UINT64\020\003\022\n\n\006DO"
      "UBLE\020\004\022\n\n\006STRING\020\005\022\t\n\005BYTES\020\006\"V\n\rWellKno"
      "wnType\022\037\n\033WELL_KNOWN_TYPE_UNSPECIFIED\020\000\022"
      "\007\n\003ANY\020\001\022\r\n\tTIMESTAMP\020\002\022\014\n\010DURATION\020\003B\013\n"
      "\ttype_kind\"\271\004\n\004Decl\022\014\n\004name\030\001 \001(\t\0229\n\005ide"
      "nt\030\002 \001(\0132(.google.api.expr.v1alpha1.Decl"
      ".IdentDeclH\000\022\?\n\010function\030\003 \001(\0132+.google."
      "api.expr.v1alpha1.Decl.FunctionDeclH\000\032y\n"
      "\tIdentDecl\022,\n\004type\030\001 \001(\0132\036.google.api.ex"
      "pr.v1alpha1.Type\0221\n\005value\030\002 \001(\0132\".google"
      ".api.expr.v1alpha1.Constant\022\013\n\003doc\030\003 \001(\t"
      "\032\236\002\n\014FunctionDecl\022G\n\toverloads\030\001 \003(\01324.g"
      "oogle.api.expr.v1alpha1.Decl.FunctionDec"
      "l.Overload\032\304\001\n\010Overload\022\023\n\013overload_id\030\001"
      " \001(\t\022.\n\006params\030\002 \003(\0132\036.google.api.expr.v"
      "1alpha1.Type\022\023\n\013type_params\030\003 \003(\t\0223\n\013res"
      "ult_type\030\004 \001(\0132\036.google.api.expr.v1alpha"
      "1.Type\022\034\n\024is_instance_function\030\005 \001(\010\022\013\n\003"
      "doc\030\006 \001(\tB\013\n\tdecl_kind\"a\n\tReference\022\014\n\004n"
      "ame\030\001 \001(\t\022\023\n\013overload_id\030\003 \003(\t\0221\n\005value\030"
      "\004 \001(\0132\".google.api.expr.v1alpha1.Constan"
      "tBl\n\034com.google.api.expr.v1alpha1B\tDeclP"
      "rotoP\001Z<google.golang.org/genproto/googl"
      "eapis/api/expr/v1alpha1;expr\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2679);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/expr/v1alpha1/checked.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* Type_PrimitiveType_descriptor() {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_enum_descriptors[0];
}
bool Type_PrimitiveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_PrimitiveType Type::PRIMITIVE_TYPE_UNSPECIFIED;
const Type_PrimitiveType Type::BOOL;
const Type_PrimitiveType Type::INT64;
const Type_PrimitiveType Type::UINT64;
const Type_PrimitiveType Type::DOUBLE;
const Type_PrimitiveType Type::STRING;
const Type_PrimitiveType Type::BYTES;
const Type_PrimitiveType Type::PrimitiveType_MIN;
const Type_PrimitiveType Type::PrimitiveType_MAX;
const int Type::PrimitiveType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Type_WellKnownType_descriptor() {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_enum_descriptors[1];
}
bool Type_WellKnownType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Type_WellKnownType Type::WELL_KNOWN_TYPE_UNSPECIFIED;
const Type_WellKnownType Type::ANY;
const Type_WellKnownType Type::TIMESTAMP;
const Type_WellKnownType Type::DURATION;
const Type_WellKnownType Type::WellKnownType_MIN;
const Type_WellKnownType Type::WellKnownType_MAX;
const int Type::WellKnownType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

CheckedExpr_ReferenceMapEntry_DoNotUse::CheckedExpr_ReferenceMapEntry_DoNotUse() {}
CheckedExpr_ReferenceMapEntry_DoNotUse::CheckedExpr_ReferenceMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CheckedExpr_ReferenceMapEntry_DoNotUse::MergeFrom(const CheckedExpr_ReferenceMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CheckedExpr_ReferenceMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[0];
}
void CheckedExpr_ReferenceMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CheckedExpr_TypeMapEntry_DoNotUse::CheckedExpr_TypeMapEntry_DoNotUse() {}
CheckedExpr_TypeMapEntry_DoNotUse::CheckedExpr_TypeMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CheckedExpr_TypeMapEntry_DoNotUse::MergeFrom(const CheckedExpr_TypeMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CheckedExpr_TypeMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[1];
}
void CheckedExpr_TypeMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CheckedExpr::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_CheckedExpr_default_instance_._instance.get_mutable()->source_info_ = const_cast< ::google::api::expr::v1alpha1::SourceInfo*>(
      ::google::api::expr::v1alpha1::SourceInfo::internal_default_instance());
  ::google::api::expr::v1alpha1::_CheckedExpr_default_instance_._instance.get_mutable()->expr_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
}
void CheckedExpr::unsafe_arena_set_allocated_source_info(
    ::google::api::expr::v1alpha1::SourceInfo* source_info) {
  if (GetArenaNoVirtual() == NULL) {
    delete source_info_;
  }
  source_info_ = source_info;
  if (source_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckedExpr.source_info)
}
void CheckedExpr::clear_source_info() {
  if (GetArenaNoVirtual() == NULL && source_info_ != NULL) {
    delete source_info_;
  }
  source_info_ = NULL;
}
void CheckedExpr::unsafe_arena_set_allocated_expr(
    ::google::api::expr::v1alpha1::Expr* expr) {
  if (GetArenaNoVirtual() == NULL) {
    delete expr_;
  }
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckedExpr.expr)
}
void CheckedExpr::clear_expr() {
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) {
    delete expr_;
  }
  expr_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckedExpr::kReferenceMapFieldNumber;
const int CheckedExpr::kTypeMapFieldNumber;
const int CheckedExpr::kSourceInfoFieldNumber;
const int CheckedExpr::kExprFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckedExpr::CheckedExpr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.CheckedExpr)
}
CheckedExpr::CheckedExpr(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  reference_map_(arena),
  type_map_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.CheckedExpr)
}
CheckedExpr::CheckedExpr(const CheckedExpr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reference_map_.MergeFrom(from.reference_map_);
  type_map_.MergeFrom(from.type_map_);
  if (from.has_expr()) {
    expr_ = new ::google::api::expr::v1alpha1::Expr(*from.expr_);
  } else {
    expr_ = NULL;
  }
  if (from.has_source_info()) {
    source_info_ = new ::google::api::expr::v1alpha1::SourceInfo(*from.source_info_);
  } else {
    source_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.CheckedExpr)
}

void CheckedExpr::SharedCtor() {
  ::memset(&expr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_info_) -
      reinterpret_cast<char*>(&expr_)) + sizeof(source_info_));
}

CheckedExpr::~CheckedExpr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.CheckedExpr)
  SharedDtor();
}

void CheckedExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete expr_;
  if (this != internal_default_instance()) delete source_info_;
}

void CheckedExpr::ArenaDtor(void* object) {
  CheckedExpr* _this = reinterpret_cast< CheckedExpr* >(object);
  (void)_this;
}
void CheckedExpr::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckedExpr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckedExpr::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckedExpr& CheckedExpr::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_CheckedExpr.base);
  return *internal_default_instance();
}


void CheckedExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.CheckedExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reference_map_.Clear();
  type_map_.Clear();
  if (GetArenaNoVirtual() == NULL && expr_ != NULL) {
    delete expr_;
  }
  expr_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_info_ != NULL) {
    delete source_info_;
  }
  source_info_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckedExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.CheckedExpr)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int64, .google.api.expr.v1alpha1.Reference> reference_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          CheckedExpr_ReferenceMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CheckedExpr_ReferenceMapEntry_DoNotUse,
              ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference > > parser(&reference_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int64, .google.api.expr.v1alpha1.Type> type_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          CheckedExpr_TypeMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CheckedExpr_TypeMapEntry_DoNotUse,
              ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type > > parser(&type_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Expr expr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.SourceInfo source_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.CheckedExpr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.CheckedExpr)
  return false;
#undef DO_
}

void CheckedExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.CheckedExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .google.api.expr.v1alpha1.Reference> reference_map = 2;
  if (!this->reference_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->reference_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->reference_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_iterator
          it = this->reference_map().begin();
          it != this->reference_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckedExpr_ReferenceMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(reference_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CheckedExpr_ReferenceMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_iterator
          it = this->reference_map().begin();
          it != this->reference_map().end(); ++it) {
        entry.reset(reference_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int64, .google.api.expr.v1alpha1.Type> type_map = 3;
  if (!this->type_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->type_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->type_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_iterator
          it = this->type_map().begin();
          it != this->type_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckedExpr_TypeMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(type_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CheckedExpr_TypeMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_iterator
          it = this->type_map().begin();
          it != this->type_map().end(); ++it) {
        entry.reset(type_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // .google.api.expr.v1alpha1.Expr expr = 4;
  if (this->has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_expr(), output);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 5;
  if (this->has_source_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_source_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.CheckedExpr)
}

::google::protobuf::uint8* CheckedExpr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.CheckedExpr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int64, .google.api.expr.v1alpha1.Reference> reference_map = 2;
  if (!this->reference_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->reference_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->reference_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_iterator
          it = this->reference_map().begin();
          it != this->reference_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckedExpr_ReferenceMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(reference_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CheckedExpr_ReferenceMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_iterator
          it = this->reference_map().begin();
          it != this->reference_map().end(); ++it) {
        entry.reset(reference_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<int64, .google.api.expr.v1alpha1.Type> type_map = 3;
  if (!this->type_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->type_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->type_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_iterator
          it = this->type_map().begin();
          it != this->type_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckedExpr_TypeMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(type_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CheckedExpr_TypeMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_iterator
          it = this->type_map().begin();
          it != this->type_map().end(); ++it) {
        entry.reset(type_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // .google.api.expr.v1alpha1.Expr expr = 4;
  if (this->has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_expr(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 5;
  if (this->has_source_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_source_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.CheckedExpr)
  return target;
}

size_t CheckedExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.CheckedExpr)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int64, .google.api.expr.v1alpha1.Reference> reference_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->reference_map_size());
  {
    ::std::unique_ptr<CheckedExpr_ReferenceMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Reference >::const_iterator
        it = this->reference_map().begin();
        it != this->reference_map().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(reference_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<int64, .google.api.expr.v1alpha1.Type> type_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->type_map_size());
  {
    ::std::unique_ptr<CheckedExpr_TypeMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int64, ::google::api::expr::v1alpha1::Type >::const_iterator
        it = this->type_map().begin();
        it != this->type_map().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(type_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // .google.api.expr.v1alpha1.Expr expr = 4;
  if (this->has_expr()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expr_);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 5;
  if (this->has_source_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *source_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckedExpr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.CheckedExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckedExpr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckedExpr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.CheckedExpr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.CheckedExpr)
    MergeFrom(*source);
  }
}

void CheckedExpr::MergeFrom(const CheckedExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.CheckedExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reference_map_.MergeFrom(from.reference_map_);
  type_map_.MergeFrom(from.type_map_);
  if (from.has_expr()) {
    mutable_expr()->::google::api::expr::v1alpha1::Expr::MergeFrom(from.expr());
  }
  if (from.has_source_info()) {
    mutable_source_info()->::google::api::expr::v1alpha1::SourceInfo::MergeFrom(from.source_info());
  }
}

void CheckedExpr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.CheckedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckedExpr::CopyFrom(const CheckedExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.CheckedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckedExpr::IsInitialized() const {
  return true;
}

void CheckedExpr::Swap(CheckedExpr* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckedExpr* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckedExpr::UnsafeArenaSwap(CheckedExpr* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckedExpr::InternalSwap(CheckedExpr* other) {
  using std::swap;
  reference_map_.Swap(&other->reference_map_);
  type_map_.Swap(&other->type_map_);
  swap(expr_, other->expr_);
  swap(source_info_, other->source_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckedExpr::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_ListType::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Type_ListType_default_instance_._instance.get_mutable()->elem_type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
}
void Type_ListType::unsafe_arena_set_allocated_elem_type(
    ::google::api::expr::v1alpha1::Type* elem_type) {
  if (GetArenaNoVirtual() == NULL) {
    delete elem_type_;
  }
  elem_type_ = elem_type;
  if (elem_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Type.ListType.elem_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_ListType::kElemTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_ListType::Type_ListType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Type.ListType)
}
Type_ListType::Type_ListType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Type.ListType)
}
Type_ListType::Type_ListType(const Type_ListType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_elem_type()) {
    elem_type_ = new ::google::api::expr::v1alpha1::Type(*from.elem_type_);
  } else {
    elem_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Type.ListType)
}

void Type_ListType::SharedCtor() {
  elem_type_ = NULL;
}

Type_ListType::~Type_ListType() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Type.ListType)
  SharedDtor();
}

void Type_ListType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete elem_type_;
}

void Type_ListType::ArenaDtor(void* object) {
  Type_ListType* _this = reinterpret_cast< Type_ListType* >(object);
  (void)_this;
}
void Type_ListType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Type_ListType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_ListType::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_ListType& Type_ListType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_ListType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Type.ListType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && elem_type_ != NULL) {
    delete elem_type_;
  }
  elem_type_ = NULL;
  _internal_metadata_.Clear();
}

bool Type_ListType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Type.ListType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.Type elem_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_elem_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Type.ListType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Type.ListType)
  return false;
#undef DO_
}

void Type_ListType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Type.ListType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type elem_type = 1;
  if (this->has_elem_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_elem_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Type.ListType)
}

::google::protobuf::uint8* Type_ListType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Type.ListType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type elem_type = 1;
  if (this->has_elem_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_elem_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Type.ListType)
  return target;
}

size_t Type_ListType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Type.ListType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.expr.v1alpha1.Type elem_type = 1;
  if (this->has_elem_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *elem_type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_ListType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Type.ListType)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_ListType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_ListType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Type.ListType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Type.ListType)
    MergeFrom(*source);
  }
}

void Type_ListType::MergeFrom(const Type_ListType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Type.ListType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_elem_type()) {
    mutable_elem_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.elem_type());
  }
}

void Type_ListType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Type.ListType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_ListType::CopyFrom(const Type_ListType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Type.ListType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_ListType::IsInitialized() const {
  return true;
}

void Type_ListType::Swap(Type_ListType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Type_ListType* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Type_ListType::UnsafeArenaSwap(Type_ListType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Type_ListType::InternalSwap(Type_ListType* other) {
  using std::swap;
  swap(elem_type_, other->elem_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_ListType::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_MapType::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Type_MapType_default_instance_._instance.get_mutable()->key_type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_MapType_default_instance_._instance.get_mutable()->value_type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
}
void Type_MapType::unsafe_arena_set_allocated_key_type(
    ::google::api::expr::v1alpha1::Type* key_type) {
  if (GetArenaNoVirtual() == NULL) {
    delete key_type_;
  }
  key_type_ = key_type;
  if (key_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Type.MapType.key_type)
}
void Type_MapType::unsafe_arena_set_allocated_value_type(
    ::google::api::expr::v1alpha1::Type* value_type) {
  if (GetArenaNoVirtual() == NULL) {
    delete value_type_;
  }
  value_type_ = value_type;
  if (value_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Type.MapType.value_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_MapType::kKeyTypeFieldNumber;
const int Type_MapType::kValueTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_MapType::Type_MapType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Type.MapType)
}
Type_MapType::Type_MapType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Type.MapType)
}
Type_MapType::Type_MapType(const Type_MapType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key_type()) {
    key_type_ = new ::google::api::expr::v1alpha1::Type(*from.key_type_);
  } else {
    key_type_ = NULL;
  }
  if (from.has_value_type()) {
    value_type_ = new ::google::api::expr::v1alpha1::Type(*from.value_type_);
  } else {
    value_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Type.MapType)
}

void Type_MapType::SharedCtor() {
  ::memset(&key_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_type_) -
      reinterpret_cast<char*>(&key_type_)) + sizeof(value_type_));
}

Type_MapType::~Type_MapType() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Type.MapType)
  SharedDtor();
}

void Type_MapType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete key_type_;
  if (this != internal_default_instance()) delete value_type_;
}

void Type_MapType::ArenaDtor(void* object) {
  Type_MapType* _this = reinterpret_cast< Type_MapType* >(object);
  (void)_this;
}
void Type_MapType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Type_MapType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_MapType::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_MapType& Type_MapType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_MapType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Type.MapType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_type_ != NULL) {
    delete key_type_;
  }
  key_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_type_ != NULL) {
    delete value_type_;
  }
  value_type_ = NULL;
  _internal_metadata_.Clear();
}

bool Type_MapType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Type.MapType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.Type key_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type value_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Type.MapType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Type.MapType)
  return false;
#undef DO_
}

void Type_MapType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Type.MapType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type key_type = 1;
  if (this->has_key_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_key_type(), output);
  }

  // .google.api.expr.v1alpha1.Type value_type = 2;
  if (this->has_value_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Type.MapType)
}

::google::protobuf::uint8* Type_MapType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Type.MapType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type key_type = 1;
  if (this->has_key_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_key_type(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.Type value_type = 2;
  if (this->has_value_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Type.MapType)
  return target;
}

size_t Type_MapType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Type.MapType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.api.expr.v1alpha1.Type key_type = 1;
  if (this->has_key_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_type_);
  }

  // .google.api.expr.v1alpha1.Type value_type = 2;
  if (this->has_value_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_MapType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Type.MapType)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_MapType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_MapType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Type.MapType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Type.MapType)
    MergeFrom(*source);
  }
}

void Type_MapType::MergeFrom(const Type_MapType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Type.MapType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key_type()) {
    mutable_key_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.key_type());
  }
  if (from.has_value_type()) {
    mutable_value_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.value_type());
  }
}

void Type_MapType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Type.MapType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_MapType::CopyFrom(const Type_MapType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Type.MapType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_MapType::IsInitialized() const {
  return true;
}

void Type_MapType::Swap(Type_MapType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Type_MapType* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Type_MapType::UnsafeArenaSwap(Type_MapType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Type_MapType::InternalSwap(Type_MapType* other) {
  using std::swap;
  swap(key_type_, other->key_type_);
  swap(value_type_, other->value_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_MapType::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_FunctionType::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Type_FunctionType_default_instance_._instance.get_mutable()->result_type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
}
void Type_FunctionType::unsafe_arena_set_allocated_result_type(
    ::google::api::expr::v1alpha1::Type* result_type) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_type_;
  }
  result_type_ = result_type;
  if (result_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Type.FunctionType.result_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_FunctionType::kResultTypeFieldNumber;
const int Type_FunctionType::kArgTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_FunctionType::Type_FunctionType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Type.FunctionType)
}
Type_FunctionType::Type_FunctionType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  arg_types_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Type.FunctionType)
}
Type_FunctionType::Type_FunctionType(const Type_FunctionType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      arg_types_(from.arg_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result_type()) {
    result_type_ = new ::google::api::expr::v1alpha1::Type(*from.result_type_);
  } else {
    result_type_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Type.FunctionType)
}

void Type_FunctionType::SharedCtor() {
  result_type_ = NULL;
}

Type_FunctionType::~Type_FunctionType() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Type.FunctionType)
  SharedDtor();
}

void Type_FunctionType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete result_type_;
}

void Type_FunctionType::ArenaDtor(void* object) {
  Type_FunctionType* _this = reinterpret_cast< Type_FunctionType* >(object);
  (void)_this;
}
void Type_FunctionType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Type_FunctionType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_FunctionType::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_FunctionType& Type_FunctionType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_FunctionType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Type.FunctionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arg_types_.Clear();
  if (GetArenaNoVirtual() == NULL && result_type_ != NULL) {
    delete result_type_;
  }
  result_type_ = NULL;
  _internal_metadata_.Clear();
}

bool Type_FunctionType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Type.FunctionType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.Type result_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.expr.v1alpha1.Type arg_types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arg_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Type.FunctionType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Type.FunctionType)
  return false;
#undef DO_
}

void Type_FunctionType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Type.FunctionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type result_type = 1;
  if (this->has_result_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_result_type(), output);
  }

  // repeated .google.api.expr.v1alpha1.Type arg_types = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arg_types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->arg_types(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Type.FunctionType)
}

::google::protobuf::uint8* Type_FunctionType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Type.FunctionType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type result_type = 1;
  if (this->has_result_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_result_type(), deterministic, target);
  }

  // repeated .google.api.expr.v1alpha1.Type arg_types = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arg_types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->arg_types(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Type.FunctionType)
  return target;
}

size_t Type_FunctionType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Type.FunctionType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1alpha1.Type arg_types = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->arg_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arg_types(static_cast<int>(i)));
    }
  }

  // .google.api.expr.v1alpha1.Type result_type = 1;
  if (this->has_result_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_type_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_FunctionType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Type.FunctionType)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_FunctionType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_FunctionType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Type.FunctionType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Type.FunctionType)
    MergeFrom(*source);
  }
}

void Type_FunctionType::MergeFrom(const Type_FunctionType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Type.FunctionType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arg_types_.MergeFrom(from.arg_types_);
  if (from.has_result_type()) {
    mutable_result_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.result_type());
  }
}

void Type_FunctionType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Type.FunctionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_FunctionType::CopyFrom(const Type_FunctionType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Type.FunctionType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_FunctionType::IsInitialized() const {
  return true;
}

void Type_FunctionType::Swap(Type_FunctionType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Type_FunctionType* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Type_FunctionType::UnsafeArenaSwap(Type_FunctionType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Type_FunctionType::InternalSwap(Type_FunctionType* other) {
  using std::swap;
  CastToBase(&arg_types_)->InternalSwap(CastToBase(&other->arg_types_));
  swap(result_type_, other->result_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_FunctionType::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type_AbstractType::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type_AbstractType::kNameFieldNumber;
const int Type_AbstractType::kParameterTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type_AbstractType::Type_AbstractType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Type.AbstractType)
}
Type_AbstractType::Type_AbstractType(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  parameter_types_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Type.AbstractType)
}
Type_AbstractType::Type_AbstractType(const Type_AbstractType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parameter_types_(from.parameter_types_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Type.AbstractType)
}

void Type_AbstractType::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Type_AbstractType::~Type_AbstractType() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Type.AbstractType)
  SharedDtor();
}

void Type_AbstractType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Type_AbstractType::ArenaDtor(void* object) {
  Type_AbstractType* _this = reinterpret_cast< Type_AbstractType* >(object);
  (void)_this;
}
void Type_AbstractType::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Type_AbstractType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type_AbstractType::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type_AbstractType& Type_AbstractType::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type_AbstractType::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Type.AbstractType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameter_types_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

bool Type_AbstractType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Type.AbstractType)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Type.AbstractType.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.expr.v1alpha1.Type parameter_types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameter_types()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Type.AbstractType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Type.AbstractType)
  return false;
#undef DO_
}

void Type_AbstractType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Type.AbstractType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Type.AbstractType.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .google.api.expr.v1alpha1.Type parameter_types = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameter_types_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->parameter_types(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Type.AbstractType)
}

::google::protobuf::uint8* Type_AbstractType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Type.AbstractType)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Type.AbstractType.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .google.api.expr.v1alpha1.Type parameter_types = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameter_types_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->parameter_types(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Type.AbstractType)
  return target;
}

size_t Type_AbstractType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Type.AbstractType)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1alpha1.Type parameter_types = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->parameter_types_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameter_types(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type_AbstractType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Type.AbstractType)
  GOOGLE_DCHECK_NE(&from, this);
  const Type_AbstractType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type_AbstractType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Type.AbstractType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Type.AbstractType)
    MergeFrom(*source);
  }
}

void Type_AbstractType::MergeFrom(const Type_AbstractType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Type.AbstractType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameter_types_.MergeFrom(from.parameter_types_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
}

void Type_AbstractType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Type.AbstractType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type_AbstractType::CopyFrom(const Type_AbstractType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Type.AbstractType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type_AbstractType::IsInitialized() const {
  return true;
}

void Type_AbstractType::Swap(Type_AbstractType* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Type_AbstractType* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Type_AbstractType::UnsafeArenaSwap(Type_AbstractType* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Type_AbstractType::InternalSwap(Type_AbstractType* other) {
  using std::swap;
  CastToBase(&parameter_types_)->InternalSwap(CastToBase(&other->parameter_types_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type_AbstractType::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Type::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Type_default_instance_.dyn_ = const_cast< ::google::protobuf::Empty*>(
      ::google::protobuf::Empty::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_default_instance_.null_ = 0;
  ::google::api::expr::v1alpha1::_Type_default_instance_.primitive_ = 0;
  ::google::api::expr::v1alpha1::_Type_default_instance_.wrapper_ = 0;
  ::google::api::expr::v1alpha1::_Type_default_instance_.well_known_ = 0;
  ::google::api::expr::v1alpha1::_Type_default_instance_.list_type_ = const_cast< ::google::api::expr::v1alpha1::Type_ListType*>(
      ::google::api::expr::v1alpha1::Type_ListType::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_default_instance_.map_type_ = const_cast< ::google::api::expr::v1alpha1::Type_MapType*>(
      ::google::api::expr::v1alpha1::Type_MapType::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_default_instance_.function_ = const_cast< ::google::api::expr::v1alpha1::Type_FunctionType*>(
      ::google::api::expr::v1alpha1::Type_FunctionType::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_default_instance_.message_type_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::api::expr::v1alpha1::_Type_default_instance_.type_param_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::google::api::expr::v1alpha1::_Type_default_instance_.type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_default_instance_.error_ = const_cast< ::google::protobuf::Empty*>(
      ::google::protobuf::Empty::internal_default_instance());
  ::google::api::expr::v1alpha1::_Type_default_instance_.abstract_type_ = const_cast< ::google::api::expr::v1alpha1::Type_AbstractType*>(
      ::google::api::expr::v1alpha1::Type_AbstractType::internal_default_instance());
}
void Type::set_allocated_dyn(::google::protobuf::Empty* dyn) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (dyn) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(dyn)->GetArena();
    if (message_arena != submessage_arena) {
      dyn = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dyn, submessage_arena);
    }
    set_has_dyn();
    type_kind_.dyn_ = dyn;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.dyn)
}
void Type::clear_dyn() {
  if (has_dyn()) {
    if (GetArenaNoVirtual() == NULL) {
      delete type_kind_.dyn_;
    }
    clear_has_type_kind();
  }
}
void Type::set_allocated_list_type(::google::api::expr::v1alpha1::Type_ListType* list_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (list_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(list_type);
    if (message_arena != submessage_arena) {
      list_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, list_type, submessage_arena);
    }
    set_has_list_type();
    type_kind_.list_type_ = list_type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.list_type)
}
void Type::set_allocated_map_type(::google::api::expr::v1alpha1::Type_MapType* map_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (map_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(map_type);
    if (message_arena != submessage_arena) {
      map_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map_type, submessage_arena);
    }
    set_has_map_type();
    type_kind_.map_type_ = map_type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.map_type)
}
void Type::set_allocated_function(::google::api::expr::v1alpha1::Type_FunctionType* function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (function) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(function);
    if (message_arena != submessage_arena) {
      function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function, submessage_arena);
    }
    set_has_function();
    type_kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.function)
}
void Type::set_allocated_type(::google::api::expr::v1alpha1::Type* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(type);
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    set_has_type();
    type_kind_.type_ = type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.type)
}
void Type::set_allocated_error(::google::protobuf::Empty* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (error) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(error)->GetArena();
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    type_kind_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.error)
}
void Type::clear_error() {
  if (has_error()) {
    if (GetArenaNoVirtual() == NULL) {
      delete type_kind_.error_;
    }
    clear_has_type_kind();
  }
}
void Type::set_allocated_abstract_type(::google::api::expr::v1alpha1::Type_AbstractType* abstract_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_type_kind();
  if (abstract_type) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(abstract_type);
    if (message_arena != submessage_arena) {
      abstract_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, abstract_type, submessage_arena);
    }
    set_has_abstract_type();
    type_kind_.abstract_type_ = abstract_type;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Type.abstract_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Type::kDynFieldNumber;
const int Type::kNullFieldNumber;
const int Type::kPrimitiveFieldNumber;
const int Type::kWrapperFieldNumber;
const int Type::kWellKnownFieldNumber;
const int Type::kListTypeFieldNumber;
const int Type::kMapTypeFieldNumber;
const int Type::kFunctionFieldNumber;
const int Type::kMessageTypeFieldNumber;
const int Type::kTypeParamFieldNumber;
const int Type::kTypeFieldNumber;
const int Type::kErrorFieldNumber;
const int Type::kAbstractTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Type::Type()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Type)
}
Type::Type(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Type)
}
Type::Type(const Type& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type_kind();
  switch (from.type_kind_case()) {
    case kDyn: {
      mutable_dyn()->::google::protobuf::Empty::MergeFrom(from.dyn());
      break;
    }
    case kNull: {
      set_null(from.null());
      break;
    }
    case kPrimitive: {
      set_primitive(from.primitive());
      break;
    }
    case kWrapper: {
      set_wrapper(from.wrapper());
      break;
    }
    case kWellKnown: {
      set_well_known(from.well_known());
      break;
    }
    case kListType: {
      mutable_list_type()->::google::api::expr::v1alpha1::Type_ListType::MergeFrom(from.list_type());
      break;
    }
    case kMapType: {
      mutable_map_type()->::google::api::expr::v1alpha1::Type_MapType::MergeFrom(from.map_type());
      break;
    }
    case kFunction: {
      mutable_function()->::google::api::expr::v1alpha1::Type_FunctionType::MergeFrom(from.function());
      break;
    }
    case kMessageType: {
      set_message_type(from.message_type());
      break;
    }
    case kTypeParam: {
      set_type_param(from.type_param());
      break;
    }
    case kType: {
      mutable_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.type());
      break;
    }
    case kError: {
      mutable_error()->::google::protobuf::Empty::MergeFrom(from.error());
      break;
    }
    case kAbstractType: {
      mutable_abstract_type()->::google::api::expr::v1alpha1::Type_AbstractType::MergeFrom(from.abstract_type());
      break;
    }
    case TYPE_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Type)
}

void Type::SharedCtor() {
  clear_has_type_kind();
}

Type::~Type() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Type)
  SharedDtor();
}

void Type::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_type_kind()) {
    clear_type_kind();
  }
}

void Type::ArenaDtor(void* object) {
  Type* _this = reinterpret_cast< Type* >(object);
  (void)_this;
}
void Type::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Type::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Type& Type::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Type.base);
  return *internal_default_instance();
}


void Type::clear_type_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Type)
  switch (type_kind_case()) {
    case kDyn: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.dyn_;
      }
      break;
    }
    case kNull: {
      // No need to clear
      break;
    }
    case kPrimitive: {
      // No need to clear
      break;
    }
    case kWrapper: {
      // No need to clear
      break;
    }
    case kWellKnown: {
      // No need to clear
      break;
    }
    case kListType: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.list_type_;
      }
      break;
    }
    case kMapType: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.map_type_;
      }
      break;
    }
    case kFunction: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.function_;
      }
      break;
    }
    case kMessageType: {
      type_kind_.message_type_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kTypeParam: {
      type_kind_.type_param_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kType: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.type_;
      }
      break;
    }
    case kError: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.error_;
      }
      break;
    }
    case kAbstractType: {
      if (GetArenaNoVirtual() == NULL) {
        delete type_kind_.abstract_type_;
      }
      break;
    }
    case TYPE_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_KIND_NOT_SET;
}


void Type::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type_kind();
  _internal_metadata_.Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Type)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Empty dyn = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dyn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.NullValue null = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_null(static_cast< ::google::protobuf::NullValue >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.PrimitiveType primitive = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_primitive(static_cast< ::google::api::expr::v1alpha1::Type_PrimitiveType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.PrimitiveType wrapper = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_wrapper(static_cast< ::google::api::expr::v1alpha1::Type_PrimitiveType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.WellKnownType well_known = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_well_known(static_cast< ::google::api::expr::v1alpha1::Type_WellKnownType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.ListType list_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_list_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.MapType map_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.FunctionType function = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message_type().data(), static_cast<int>(this->message_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Type.message_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_param = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_param().data(), static_cast<int>(this->type_param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Type.type_param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Empty error = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type.AbstractType abstract_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_abstract_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Type)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Type)
  return false;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Empty dyn = 1;
  if (has_dyn()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dyn(), output);
  }

  // .google.protobuf.NullValue null = 2;
  if (has_null()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->null(), output);
  }

  // .google.api.expr.v1alpha1.Type.PrimitiveType primitive = 3;
  if (has_primitive()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->primitive(), output);
  }

  // .google.api.expr.v1alpha1.Type.PrimitiveType wrapper = 4;
  if (has_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->wrapper(), output);
  }

  // .google.api.expr.v1alpha1.Type.WellKnownType well_known = 5;
  if (has_well_known()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->well_known(), output);
  }

  // .google.api.expr.v1alpha1.Type.ListType list_type = 6;
  if (has_list_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_list_type(), output);
  }

  // .google.api.expr.v1alpha1.Type.MapType map_type = 7;
  if (has_map_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_map_type(), output);
  }

  // .google.api.expr.v1alpha1.Type.FunctionType function = 8;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_function(), output);
  }

  // string message_type = 9;
  if (has_message_type()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_type().data(), static_cast<int>(this->message_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Type.message_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->message_type(), output);
  }

  // string type_param = 10;
  if (has_type_param()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_param().data(), static_cast<int>(this->type_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Type.type_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->type_param(), output);
  }

  // .google.api.expr.v1alpha1.Type type = 11;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_type(), output);
  }

  // .google.protobuf.Empty error = 12;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_error(), output);
  }

  // .google.api.expr.v1alpha1.Type.AbstractType abstract_type = 14;
  if (has_abstract_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_abstract_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Type)
}

::google::protobuf::uint8* Type::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Type)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Empty dyn = 1;
  if (has_dyn()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dyn(), deterministic, target);
  }

  // .google.protobuf.NullValue null = 2;
  if (has_null()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->null(), target);
  }

  // .google.api.expr.v1alpha1.Type.PrimitiveType primitive = 3;
  if (has_primitive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->primitive(), target);
  }

  // .google.api.expr.v1alpha1.Type.PrimitiveType wrapper = 4;
  if (has_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->wrapper(), target);
  }

  // .google.api.expr.v1alpha1.Type.WellKnownType well_known = 5;
  if (has_well_known()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->well_known(), target);
  }

  // .google.api.expr.v1alpha1.Type.ListType list_type = 6;
  if (has_list_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_list_type(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.Type.MapType map_type = 7;
  if (has_map_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_map_type(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.Type.FunctionType function = 8;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_function(), deterministic, target);
  }

  // string message_type = 9;
  if (has_message_type()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message_type().data(), static_cast<int>(this->message_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Type.message_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->message_type(), target);
  }

  // string type_param = 10;
  if (has_type_param()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_param().data(), static_cast<int>(this->type_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Type.type_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->type_param(), target);
  }

  // .google.api.expr.v1alpha1.Type type = 11;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_type(), deterministic, target);
  }

  // .google.protobuf.Empty error = 12;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_error(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.Type.AbstractType abstract_type = 14;
  if (has_abstract_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_abstract_type(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Type)
  return target;
}

size_t Type::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Type)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_kind_case()) {
    // .google.protobuf.Empty dyn = 1;
    case kDyn: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.dyn_);
      break;
    }
    // .google.protobuf.NullValue null = 2;
    case kNull: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->null());
      break;
    }
    // .google.api.expr.v1alpha1.Type.PrimitiveType primitive = 3;
    case kPrimitive: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->primitive());
      break;
    }
    // .google.api.expr.v1alpha1.Type.PrimitiveType wrapper = 4;
    case kWrapper: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->wrapper());
      break;
    }
    // .google.api.expr.v1alpha1.Type.WellKnownType well_known = 5;
    case kWellKnown: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->well_known());
      break;
    }
    // .google.api.expr.v1alpha1.Type.ListType list_type = 6;
    case kListType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.list_type_);
      break;
    }
    // .google.api.expr.v1alpha1.Type.MapType map_type = 7;
    case kMapType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.map_type_);
      break;
    }
    // .google.api.expr.v1alpha1.Type.FunctionType function = 8;
    case kFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.function_);
      break;
    }
    // string message_type = 9;
    case kMessageType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message_type());
      break;
    }
    // string type_param = 10;
    case kTypeParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type_param());
      break;
    }
    // .google.api.expr.v1alpha1.Type type = 11;
    case kType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.type_);
      break;
    }
    // .google.protobuf.Empty error = 12;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.error_);
      break;
    }
    // .google.api.expr.v1alpha1.Type.AbstractType abstract_type = 14;
    case kAbstractType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *type_kind_.abstract_type_);
      break;
    }
    case TYPE_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Type)
  GOOGLE_DCHECK_NE(&from, this);
  const Type* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Type>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Type)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Type)
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Type)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_kind_case()) {
    case kDyn: {
      mutable_dyn()->::google::protobuf::Empty::MergeFrom(from.dyn());
      break;
    }
    case kNull: {
      set_null(from.null());
      break;
    }
    case kPrimitive: {
      set_primitive(from.primitive());
      break;
    }
    case kWrapper: {
      set_wrapper(from.wrapper());
      break;
    }
    case kWellKnown: {
      set_well_known(from.well_known());
      break;
    }
    case kListType: {
      mutable_list_type()->::google::api::expr::v1alpha1::Type_ListType::MergeFrom(from.list_type());
      break;
    }
    case kMapType: {
      mutable_map_type()->::google::api::expr::v1alpha1::Type_MapType::MergeFrom(from.map_type());
      break;
    }
    case kFunction: {
      mutable_function()->::google::api::expr::v1alpha1::Type_FunctionType::MergeFrom(from.function());
      break;
    }
    case kMessageType: {
      set_message_type(from.message_type());
      break;
    }
    case kTypeParam: {
      set_type_param(from.type_param());
      break;
    }
    case kType: {
      mutable_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.type());
      break;
    }
    case kError: {
      mutable_error()->::google::protobuf::Empty::MergeFrom(from.error());
      break;
    }
    case kAbstractType: {
      mutable_abstract_type()->::google::api::expr::v1alpha1::Type_AbstractType::MergeFrom(from.abstract_type());
      break;
    }
    case TYPE_KIND_NOT_SET: {
      break;
    }
  }
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Type)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  return true;
}

void Type::Swap(Type* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Type* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Type::UnsafeArenaSwap(Type* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Type::InternalSwap(Type* other) {
  using std::swap;
  swap(type_kind_, other->type_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Decl_IdentDecl::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Decl_IdentDecl_default_instance_._instance.get_mutable()->type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
  ::google::api::expr::v1alpha1::_Decl_IdentDecl_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::api::expr::v1alpha1::Constant*>(
      ::google::api::expr::v1alpha1::Constant::internal_default_instance());
}
void Decl_IdentDecl::unsafe_arena_set_allocated_type(
    ::google::api::expr::v1alpha1::Type* type) {
  if (GetArenaNoVirtual() == NULL) {
    delete type_;
  }
  type_ = type;
  if (type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Decl.IdentDecl.type)
}
void Decl_IdentDecl::unsafe_arena_set_allocated_value(
    ::google::api::expr::v1alpha1::Constant* value) {
  if (GetArenaNoVirtual() == NULL) {
    delete value_;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Decl.IdentDecl.value)
}
void Decl_IdentDecl::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decl_IdentDecl::kTypeFieldNumber;
const int Decl_IdentDecl::kValueFieldNumber;
const int Decl_IdentDecl::kDocFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decl_IdentDecl::Decl_IdentDecl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_IdentDecl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Decl.IdentDecl)
}
Decl_IdentDecl::Decl_IdentDecl(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_IdentDecl.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Decl.IdentDecl)
}
Decl_IdentDecl::Decl_IdentDecl(const Decl_IdentDecl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  doc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doc().size() > 0) {
    doc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc(),
      GetArenaNoVirtual());
  }
  if (from.has_type()) {
    type_ = new ::google::api::expr::v1alpha1::Type(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::google::api::expr::v1alpha1::Constant(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Decl.IdentDecl)
}

void Decl_IdentDecl::SharedCtor() {
  doc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&type_)) + sizeof(value_));
}

Decl_IdentDecl::~Decl_IdentDecl() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Decl.IdentDecl)
  SharedDtor();
}

void Decl_IdentDecl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  doc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete value_;
}

void Decl_IdentDecl::ArenaDtor(void* object) {
  Decl_IdentDecl* _this = reinterpret_cast< Decl_IdentDecl* >(object);
  (void)_this;
}
void Decl_IdentDecl::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Decl_IdentDecl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decl_IdentDecl::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decl_IdentDecl& Decl_IdentDecl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_IdentDecl.base);
  return *internal_default_instance();
}


void Decl_IdentDecl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Decl_IdentDecl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.api.expr.v1alpha1.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Constant value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string doc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc().data(), static_cast<int>(this->doc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Decl.IdentDecl.doc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Decl.IdentDecl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Decl.IdentDecl)
  return false;
#undef DO_
}

void Decl_IdentDecl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type type = 1;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_type(), output);
  }

  // .google.api.expr.v1alpha1.Constant value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_value(), output);
  }

  // string doc = 3;
  if (this->doc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc().data(), static_cast<int>(this->doc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.IdentDecl.doc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Decl.IdentDecl)
}

::google::protobuf::uint8* Decl_IdentDecl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Type type = 1;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_type(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.Constant value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_value(), deterministic, target);
  }

  // string doc = 3;
  if (this->doc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc().data(), static_cast<int>(this->doc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.IdentDecl.doc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Decl.IdentDecl)
  return target;
}

size_t Decl_IdentDecl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string doc = 3;
  if (this->doc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc());
  }

  // .google.api.expr.v1alpha1.Type type = 1;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .google.api.expr.v1alpha1.Constant value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decl_IdentDecl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  GOOGLE_DCHECK_NE(&from, this);
  const Decl_IdentDecl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decl_IdentDecl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Decl.IdentDecl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Decl.IdentDecl)
    MergeFrom(*source);
  }
}

void Decl_IdentDecl::MergeFrom(const Decl_IdentDecl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.doc().size() > 0) {
    set_doc(from.doc());
  }
  if (from.has_type()) {
    mutable_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.type());
  }
  if (from.has_value()) {
    mutable_value()->::google::api::expr::v1alpha1::Constant::MergeFrom(from.value());
  }
}

void Decl_IdentDecl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decl_IdentDecl::CopyFrom(const Decl_IdentDecl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Decl.IdentDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decl_IdentDecl::IsInitialized() const {
  return true;
}

void Decl_IdentDecl::Swap(Decl_IdentDecl* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Decl_IdentDecl* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Decl_IdentDecl::UnsafeArenaSwap(Decl_IdentDecl* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Decl_IdentDecl::InternalSwap(Decl_IdentDecl* other) {
  using std::swap;
  doc_.Swap(&other->doc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decl_IdentDecl::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Decl_FunctionDecl_Overload::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Decl_FunctionDecl_Overload_default_instance_._instance.get_mutable()->result_type_ = const_cast< ::google::api::expr::v1alpha1::Type*>(
      ::google::api::expr::v1alpha1::Type::internal_default_instance());
}
void Decl_FunctionDecl_Overload::unsafe_arena_set_allocated_result_type(
    ::google::api::expr::v1alpha1::Type* result_type) {
  if (GetArenaNoVirtual() == NULL) {
    delete result_type_;
  }
  result_type_ = result_type;
  if (result_type) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.result_type)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decl_FunctionDecl_Overload::kOverloadIdFieldNumber;
const int Decl_FunctionDecl_Overload::kParamsFieldNumber;
const int Decl_FunctionDecl_Overload::kTypeParamsFieldNumber;
const int Decl_FunctionDecl_Overload::kResultTypeFieldNumber;
const int Decl_FunctionDecl_Overload::kIsInstanceFunctionFieldNumber;
const int Decl_FunctionDecl_Overload::kDocFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decl_FunctionDecl_Overload::Decl_FunctionDecl_Overload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl_Overload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
}
Decl_FunctionDecl_Overload::Decl_FunctionDecl_Overload(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  params_(arena),
  type_params_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl_Overload.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
}
Decl_FunctionDecl_Overload::Decl_FunctionDecl_Overload(const Decl_FunctionDecl_Overload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      type_params_(from.type_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  overload_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.overload_id().size() > 0) {
    overload_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.overload_id(),
      GetArenaNoVirtual());
  }
  doc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.doc().size() > 0) {
    doc_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc(),
      GetArenaNoVirtual());
  }
  if (from.has_result_type()) {
    result_type_ = new ::google::api::expr::v1alpha1::Type(*from.result_type_);
  } else {
    result_type_ = NULL;
  }
  is_instance_function_ = from.is_instance_function_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
}

void Decl_FunctionDecl_Overload::SharedCtor() {
  overload_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&result_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_instance_function_) -
      reinterpret_cast<char*>(&result_type_)) + sizeof(is_instance_function_));
}

Decl_FunctionDecl_Overload::~Decl_FunctionDecl_Overload() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  SharedDtor();
}

void Decl_FunctionDecl_Overload::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  overload_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_type_;
}

void Decl_FunctionDecl_Overload::ArenaDtor(void* object) {
  Decl_FunctionDecl_Overload* _this = reinterpret_cast< Decl_FunctionDecl_Overload* >(object);
  (void)_this;
}
void Decl_FunctionDecl_Overload::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Decl_FunctionDecl_Overload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decl_FunctionDecl_Overload::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decl_FunctionDecl_Overload& Decl_FunctionDecl_Overload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl_Overload.base);
  return *internal_default_instance();
}


void Decl_FunctionDecl_Overload::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  type_params_.Clear();
  overload_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  doc_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && result_type_ != NULL) {
    delete result_type_;
  }
  result_type_ = NULL;
  is_instance_function_ = false;
  _internal_metadata_.Clear();
}

bool Decl_FunctionDecl_Overload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string overload_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_overload_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->overload_id().data(), static_cast<int>(this->overload_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.overload_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.expr.v1alpha1.Type params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string type_params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_params(this->type_params_size() - 1).data(),
            static_cast<int>(this->type_params(this->type_params_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.type_params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Type result_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_instance_function = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_instance_function_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string doc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc().data(), static_cast<int>(this->doc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.doc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  return false;
#undef DO_
}

void Decl_FunctionDecl_Overload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string overload_id = 1;
  if (this->overload_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->overload_id().data(), static_cast<int>(this->overload_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.overload_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->overload_id(), output);
  }

  // repeated .google.api.expr.v1alpha1.Type params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->params(static_cast<int>(i)),
      output);
  }

  // repeated string type_params = 3;
  for (int i = 0, n = this->type_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_params(i).data(), static_cast<int>(this->type_params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.type_params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->type_params(i), output);
  }

  // .google.api.expr.v1alpha1.Type result_type = 4;
  if (this->has_result_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_result_type(), output);
  }

  // bool is_instance_function = 5;
  if (this->is_instance_function() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_instance_function(), output);
  }

  // string doc = 6;
  if (this->doc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc().data(), static_cast<int>(this->doc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.doc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
}

::google::protobuf::uint8* Decl_FunctionDecl_Overload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string overload_id = 1;
  if (this->overload_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->overload_id().data(), static_cast<int>(this->overload_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.overload_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->overload_id(), target);
  }

  // repeated .google.api.expr.v1alpha1.Type params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  // repeated string type_params = 3;
  for (int i = 0, n = this->type_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_params(i).data(), static_cast<int>(this->type_params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.type_params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->type_params(i), target);
  }

  // .google.api.expr.v1alpha1.Type result_type = 4;
  if (this->has_result_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_result_type(), deterministic, target);
  }

  // bool is_instance_function = 5;
  if (this->is_instance_function() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_instance_function(), target);
  }

  // string doc = 6;
  if (this->doc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc().data(), static_cast<int>(this->doc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.FunctionDecl.Overload.doc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  return target;
}

size_t Decl_FunctionDecl_Overload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1alpha1.Type params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->params(static_cast<int>(i)));
    }
  }

  // repeated string type_params = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->type_params_size());
  for (int i = 0, n = this->type_params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type_params(i));
  }

  // string overload_id = 1;
  if (this->overload_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->overload_id());
  }

  // string doc = 6;
  if (this->doc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc());
  }

  // .google.api.expr.v1alpha1.Type result_type = 4;
  if (this->has_result_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_type_);
  }

  // bool is_instance_function = 5;
  if (this->is_instance_function() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decl_FunctionDecl_Overload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  GOOGLE_DCHECK_NE(&from, this);
  const Decl_FunctionDecl_Overload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decl_FunctionDecl_Overload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
    MergeFrom(*source);
  }
}

void Decl_FunctionDecl_Overload::MergeFrom(const Decl_FunctionDecl_Overload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  type_params_.MergeFrom(from.type_params_);
  if (from.overload_id().size() > 0) {
    set_overload_id(from.overload_id());
  }
  if (from.doc().size() > 0) {
    set_doc(from.doc());
  }
  if (from.has_result_type()) {
    mutable_result_type()->::google::api::expr::v1alpha1::Type::MergeFrom(from.result_type());
  }
  if (from.is_instance_function() != 0) {
    set_is_instance_function(from.is_instance_function());
  }
}

void Decl_FunctionDecl_Overload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decl_FunctionDecl_Overload::CopyFrom(const Decl_FunctionDecl_Overload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl.Overload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decl_FunctionDecl_Overload::IsInitialized() const {
  return true;
}

void Decl_FunctionDecl_Overload::Swap(Decl_FunctionDecl_Overload* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Decl_FunctionDecl_Overload* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Decl_FunctionDecl_Overload::UnsafeArenaSwap(Decl_FunctionDecl_Overload* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Decl_FunctionDecl_Overload::InternalSwap(Decl_FunctionDecl_Overload* other) {
  using std::swap;
  CastToBase(&params_)->InternalSwap(CastToBase(&other->params_));
  type_params_.InternalSwap(CastToBase(&other->type_params_));
  overload_id_.Swap(&other->overload_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  doc_.Swap(&other->doc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_type_, other->result_type_);
  swap(is_instance_function_, other->is_instance_function_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decl_FunctionDecl_Overload::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Decl_FunctionDecl::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decl_FunctionDecl::kOverloadsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decl_FunctionDecl::Decl_FunctionDecl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Decl.FunctionDecl)
}
Decl_FunctionDecl::Decl_FunctionDecl(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  overloads_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Decl.FunctionDecl)
}
Decl_FunctionDecl::Decl_FunctionDecl(const Decl_FunctionDecl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      overloads_(from.overloads_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Decl.FunctionDecl)
}

void Decl_FunctionDecl::SharedCtor() {
}

Decl_FunctionDecl::~Decl_FunctionDecl() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Decl.FunctionDecl)
  SharedDtor();
}

void Decl_FunctionDecl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Decl_FunctionDecl::ArenaDtor(void* object) {
  Decl_FunctionDecl* _this = reinterpret_cast< Decl_FunctionDecl* >(object);
  (void)_this;
}
void Decl_FunctionDecl::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Decl_FunctionDecl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decl_FunctionDecl::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decl_FunctionDecl& Decl_FunctionDecl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl_FunctionDecl.base);
  return *internal_default_instance();
}


void Decl_FunctionDecl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  overloads_.Clear();
  _internal_metadata_.Clear();
}

bool Decl_FunctionDecl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.api.expr.v1alpha1.Decl.FunctionDecl.Overload overloads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_overloads()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Decl.FunctionDecl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Decl.FunctionDecl)
  return false;
#undef DO_
}

void Decl_FunctionDecl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Decl.FunctionDecl.Overload overloads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->overloads_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->overloads(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Decl.FunctionDecl)
}

::google::protobuf::uint8* Decl_FunctionDecl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Decl.FunctionDecl.Overload overloads = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->overloads_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->overloads(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Decl.FunctionDecl)
  return target;
}

size_t Decl_FunctionDecl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.api.expr.v1alpha1.Decl.FunctionDecl.Overload overloads = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->overloads_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->overloads(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decl_FunctionDecl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  GOOGLE_DCHECK_NE(&from, this);
  const Decl_FunctionDecl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decl_FunctionDecl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Decl.FunctionDecl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Decl.FunctionDecl)
    MergeFrom(*source);
  }
}

void Decl_FunctionDecl::MergeFrom(const Decl_FunctionDecl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  overloads_.MergeFrom(from.overloads_);
}

void Decl_FunctionDecl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decl_FunctionDecl::CopyFrom(const Decl_FunctionDecl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Decl.FunctionDecl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decl_FunctionDecl::IsInitialized() const {
  return true;
}

void Decl_FunctionDecl::Swap(Decl_FunctionDecl* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Decl_FunctionDecl* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Decl_FunctionDecl::UnsafeArenaSwap(Decl_FunctionDecl* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Decl_FunctionDecl::InternalSwap(Decl_FunctionDecl* other) {
  using std::swap;
  CastToBase(&overloads_)->InternalSwap(CastToBase(&other->overloads_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decl_FunctionDecl::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Decl::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Decl_default_instance_.ident_ = const_cast< ::google::api::expr::v1alpha1::Decl_IdentDecl*>(
      ::google::api::expr::v1alpha1::Decl_IdentDecl::internal_default_instance());
  ::google::api::expr::v1alpha1::_Decl_default_instance_.function_ = const_cast< ::google::api::expr::v1alpha1::Decl_FunctionDecl*>(
      ::google::api::expr::v1alpha1::Decl_FunctionDecl::internal_default_instance());
}
void Decl::set_allocated_ident(::google::api::expr::v1alpha1::Decl_IdentDecl* ident) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_decl_kind();
  if (ident) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(ident);
    if (message_arena != submessage_arena) {
      ident = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ident, submessage_arena);
    }
    set_has_ident();
    decl_kind_.ident_ = ident;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Decl.ident)
}
void Decl::set_allocated_function(::google::api::expr::v1alpha1::Decl_FunctionDecl* function) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_decl_kind();
  if (function) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(function);
    if (message_arena != submessage_arena) {
      function = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, function, submessage_arena);
    }
    set_has_function();
    decl_kind_.function_ = function;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Decl.function)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decl::kNameFieldNumber;
const int Decl::kIdentFieldNumber;
const int Decl::kFunctionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decl::Decl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Decl)
}
Decl::Decl(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Decl)
}
Decl::Decl(const Decl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  clear_has_decl_kind();
  switch (from.decl_kind_case()) {
    case kIdent: {
      mutable_ident()->::google::api::expr::v1alpha1::Decl_IdentDecl::MergeFrom(from.ident());
      break;
    }
    case kFunction: {
      mutable_function()->::google::api::expr::v1alpha1::Decl_FunctionDecl::MergeFrom(from.function());
      break;
    }
    case DECL_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Decl)
}

void Decl::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_decl_kind();
}

Decl::~Decl() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Decl)
  SharedDtor();
}

void Decl::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_decl_kind()) {
    clear_decl_kind();
  }
}

void Decl::ArenaDtor(void* object) {
  Decl* _this = reinterpret_cast< Decl* >(object);
  (void)_this;
}
void Decl::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Decl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Decl::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decl& Decl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Decl.base);
  return *internal_default_instance();
}


void Decl::clear_decl_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Decl)
  switch (decl_kind_case()) {
    case kIdent: {
      if (GetArenaNoVirtual() == NULL) {
        delete decl_kind_.ident_;
      }
      break;
    }
    case kFunction: {
      if (GetArenaNoVirtual() == NULL) {
        delete decl_kind_.function_;
      }
      break;
    }
    case DECL_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DECL_KIND_NOT_SET;
}


void Decl::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Decl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_decl_kind();
  _internal_metadata_.Clear();
}

bool Decl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Decl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Decl.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Decl.IdentDecl ident = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ident()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Decl.FunctionDecl function = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_function()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Decl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Decl)
  return false;
#undef DO_
}

void Decl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Decl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.api.expr.v1alpha1.Decl.IdentDecl ident = 2;
  if (has_ident()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_ident(), output);
  }

  // .google.api.expr.v1alpha1.Decl.FunctionDecl function = 3;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_function(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Decl)
}

::google::protobuf::uint8* Decl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Decl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Decl.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.api.expr.v1alpha1.Decl.IdentDecl ident = 2;
  if (has_ident()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_ident(), deterministic, target);
  }

  // .google.api.expr.v1alpha1.Decl.FunctionDecl function = 3;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_function(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Decl)
  return target;
}

size_t Decl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Decl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  switch (decl_kind_case()) {
    // .google.api.expr.v1alpha1.Decl.IdentDecl ident = 2;
    case kIdent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *decl_kind_.ident_);
      break;
    }
    // .google.api.expr.v1alpha1.Decl.FunctionDecl function = 3;
    case kFunction: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *decl_kind_.function_);
      break;
    }
    case DECL_KIND_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Decl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Decl)
  GOOGLE_DCHECK_NE(&from, this);
  const Decl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Decl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Decl)
    MergeFrom(*source);
  }
}

void Decl::MergeFrom(const Decl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Decl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  switch (from.decl_kind_case()) {
    case kIdent: {
      mutable_ident()->::google::api::expr::v1alpha1::Decl_IdentDecl::MergeFrom(from.ident());
      break;
    }
    case kFunction: {
      mutable_function()->::google::api::expr::v1alpha1::Decl_FunctionDecl::MergeFrom(from.function());
      break;
    }
    case DECL_KIND_NOT_SET: {
      break;
    }
  }
}

void Decl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Decl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decl::CopyFrom(const Decl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Decl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decl::IsInitialized() const {
  return true;
}

void Decl::Swap(Decl* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Decl* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Decl::UnsafeArenaSwap(Decl* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Decl::InternalSwap(Decl* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(decl_kind_, other->decl_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Decl::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reference::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Reference_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::api::expr::v1alpha1::Constant*>(
      ::google::api::expr::v1alpha1::Constant::internal_default_instance());
}
void Reference::unsafe_arena_set_allocated_value(
    ::google::api::expr::v1alpha1::Constant* value) {
  if (GetArenaNoVirtual() == NULL) {
    delete value_;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Reference.value)
}
void Reference::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reference::kNameFieldNumber;
const int Reference::kOverloadIdFieldNumber;
const int Reference::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reference::Reference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Reference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Reference)
}
Reference::Reference(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  overload_id_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Reference.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Reference)
}
Reference::Reference(const Reference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      overload_id_(from.overload_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  if (from.has_value()) {
    value_ = new ::google::api::expr::v1alpha1::Constant(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Reference)
}

void Reference::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
}

Reference::~Reference() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Reference)
  SharedDtor();
}

void Reference::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void Reference::ArenaDtor(void* object) {
  Reference* _this = reinterpret_cast< Reference* >(object);
  (void)_this;
}
void Reference::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Reference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reference::descriptor() {
  ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reference& Reference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::scc_info_Reference.base);
  return *internal_default_instance();
}


void Reference::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  overload_id_.Clear();
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool Reference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.expr.v1alpha1.Reference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Reference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string overload_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_overload_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->overload_id(this->overload_id_size() - 1).data(),
            static_cast<int>(this->overload_id(this->overload_id_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.expr.v1alpha1.Reference.overload_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.api.expr.v1alpha1.Constant value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.expr.v1alpha1.Reference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.expr.v1alpha1.Reference)
  return false;
#undef DO_
}

void Reference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.expr.v1alpha1.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Reference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string overload_id = 3;
  for (int i = 0, n = this->overload_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->overload_id(i).data(), static_cast<int>(this->overload_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Reference.overload_id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->overload_id(i), output);
  }

  // .google.api.expr.v1alpha1.Constant value = 4;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.expr.v1alpha1.Reference)
}

::google::protobuf::uint8* Reference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Reference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Reference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string overload_id = 3;
  for (int i = 0, n = this->overload_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->overload_id(i).data(), static_cast<int>(this->overload_id(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Reference.overload_id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->overload_id(i), target);
  }

  // .google.api.expr.v1alpha1.Constant value = 4;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Reference)
  return target;
}

size_t Reference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Reference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string overload_id = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->overload_id_size());
  for (int i = 0, n = this->overload_id_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->overload_id(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .google.api.expr.v1alpha1.Constant value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  const Reference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Reference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Reference)
    MergeFrom(*source);
  }
}

void Reference::MergeFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Reference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  overload_id_.MergeFrom(from.overload_id_);
  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.has_value()) {
    mutable_value()->::google::api::expr::v1alpha1::Constant::MergeFrom(from.value());
  }
}

void Reference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reference::CopyFrom(const Reference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Reference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reference::IsInitialized() const {
  return true;
}

void Reference::Swap(Reference* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Reference* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Reference::UnsafeArenaSwap(Reference* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Reference::InternalSwap(Reference* other) {
  using std::swap;
  overload_id_.InternalSwap(CastToBase(&other->overload_id_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reference::GetMetadata() const {
  protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckedExpr_ReferenceMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckedExpr_TypeMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::CheckedExpr* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckedExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckedExpr >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Type_ListType* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Type_ListType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Type_ListType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Type_MapType* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Type_MapType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Type_MapType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Type_FunctionType* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Type_FunctionType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Type_FunctionType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Type_AbstractType* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Type_AbstractType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Type_AbstractType >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Type* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Type >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Type >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Decl_IdentDecl* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Decl_IdentDecl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Decl_IdentDecl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Decl_FunctionDecl_Overload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Decl_FunctionDecl* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Decl_FunctionDecl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Decl_FunctionDecl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Decl* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Decl >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Decl >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::expr::v1alpha1::Reference* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Reference >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Reference >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
