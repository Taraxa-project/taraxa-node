// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/usage.proto

#include "google/api/usage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fapi_2fusage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fapi_2fusage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UsageRule;
}  // namespace protobuf_google_2fapi_2fusage_2eproto
namespace google {
namespace api {
class UsageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Usage>
      _instance;
} _Usage_default_instance_;
class UsageRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UsageRule>
      _instance;
} _UsageRule_default_instance_;
}  // namespace api
}  // namespace google
namespace protobuf_google_2fapi_2fusage_2eproto {
static void InitDefaultsUsage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_Usage_default_instance_;
    new (ptr) ::google::api::Usage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::Usage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Usage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUsage}, {
      &protobuf_google_2fapi_2fusage_2eproto::scc_info_UsageRule.base,}};

static void InitDefaultsUsageRule() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::_UsageRule_default_instance_;
    new (ptr) ::google::api::UsageRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::UsageRule::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UsageRule =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUsageRule}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Usage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UsageRule.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Usage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Usage, requirements_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Usage, rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::Usage, producer_notification_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::UsageRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::UsageRule, selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::UsageRule, allow_unregistered_calls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::api::UsageRule, skip_service_control_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::Usage)},
  { 8, -1, sizeof(::google::api::UsageRule)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_Usage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::google::api::_UsageRule_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/api/usage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026google/api/usage.proto\022\ngoogle.api\032\034go"
      "ogle/api/annotations.proto\"j\n\005Usage\022\024\n\014r"
      "equirements\030\001 \003(\t\022$\n\005rules\030\006 \003(\0132\025.googl"
      "e.api.UsageRule\022%\n\035producer_notification"
      "_channel\030\007 \001(\t\"]\n\tUsageRule\022\020\n\010selector\030"
      "\001 \001(\t\022 \n\030allow_unregistered_calls\030\002 \001(\010\022"
      "\034\n\024skip_service_control\030\003 \001(\010Bl\n\016com.goo"
      "gle.apiB\nUsageProtoP\001ZEgoogle.golang.org"
      "/genproto/googleapis/api/serviceconfig;s"
      "erviceconfig\242\002\004GAPIb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 387);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/api/usage.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fapi_2fusage_2eproto
namespace google {
namespace api {

// ===================================================================

void Usage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Usage::kRequirementsFieldNumber;
const int Usage::kRulesFieldNumber;
const int Usage::kProducerNotificationChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Usage::Usage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fusage_2eproto::scc_info_Usage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.Usage)
}
Usage::Usage(const Usage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requirements_(from.requirements_),
      rules_(from.rules_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  producer_notification_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.producer_notification_channel().size() > 0) {
    producer_notification_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_notification_channel_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.Usage)
}

void Usage::SharedCtor() {
  producer_notification_channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Usage::~Usage() {
  // @@protoc_insertion_point(destructor:google.api.Usage)
  SharedDtor();
}

void Usage::SharedDtor() {
  producer_notification_channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Usage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Usage::descriptor() {
  ::protobuf_google_2fapi_2fusage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fusage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Usage& Usage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fusage_2eproto::scc_info_Usage.base);
  return *internal_default_instance();
}


void Usage::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.Usage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requirements_.Clear();
  rules_.Clear();
  producer_notification_channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Usage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.Usage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string requirements = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_requirements()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requirements(this->requirements_size() - 1).data(),
            static_cast<int>(this->requirements(this->requirements_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Usage.requirements"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.api.UsageRule rules = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string producer_notification_channel = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_notification_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->producer_notification_channel().data(), static_cast<int>(this->producer_notification_channel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.Usage.producer_notification_channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.Usage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.Usage)
  return false;
#undef DO_
}

void Usage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.Usage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string requirements = 1;
  for (int i = 0, n = this->requirements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requirements(i).data(), static_cast<int>(this->requirements(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Usage.requirements");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->requirements(i), output);
  }

  // repeated .google.api.UsageRule rules = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->rules(static_cast<int>(i)),
      output);
  }

  // string producer_notification_channel = 7;
  if (this->producer_notification_channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_notification_channel().data(), static_cast<int>(this->producer_notification_channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Usage.producer_notification_channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->producer_notification_channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.Usage)
}

::google::protobuf::uint8* Usage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.Usage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string requirements = 1;
  for (int i = 0, n = this->requirements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requirements(i).data(), static_cast<int>(this->requirements(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Usage.requirements");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->requirements(i), target);
  }

  // repeated .google.api.UsageRule rules = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->rules(static_cast<int>(i)), deterministic, target);
  }

  // string producer_notification_channel = 7;
  if (this->producer_notification_channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->producer_notification_channel().data(), static_cast<int>(this->producer_notification_channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.Usage.producer_notification_channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->producer_notification_channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.Usage)
  return target;
}

size_t Usage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.Usage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string requirements = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->requirements_size());
  for (int i = 0, n = this->requirements_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->requirements(i));
  }

  // repeated .google.api.UsageRule rules = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  // string producer_notification_channel = 7;
  if (this->producer_notification_channel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->producer_notification_channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Usage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.Usage)
  GOOGLE_DCHECK_NE(&from, this);
  const Usage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Usage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.Usage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.Usage)
    MergeFrom(*source);
  }
}

void Usage::MergeFrom(const Usage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.Usage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requirements_.MergeFrom(from.requirements_);
  rules_.MergeFrom(from.rules_);
  if (from.producer_notification_channel().size() > 0) {

    producer_notification_channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_notification_channel_);
  }
}

void Usage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.Usage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Usage::CopyFrom(const Usage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.Usage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Usage::IsInitialized() const {
  return true;
}

void Usage::Swap(Usage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Usage::InternalSwap(Usage* other) {
  using std::swap;
  requirements_.InternalSwap(CastToBase(&other->requirements_));
  CastToBase(&rules_)->InternalSwap(CastToBase(&other->rules_));
  producer_notification_channel_.Swap(&other->producer_notification_channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Usage::GetMetadata() const {
  protobuf_google_2fapi_2fusage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fusage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UsageRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UsageRule::kSelectorFieldNumber;
const int UsageRule::kAllowUnregisteredCallsFieldNumber;
const int UsageRule::kSkipServiceControlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UsageRule::UsageRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_google_2fapi_2fusage_2eproto::scc_info_UsageRule.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.UsageRule)
}
UsageRule::UsageRule(const UsageRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.selector().size() > 0) {
    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  ::memcpy(&allow_unregistered_calls_, &from.allow_unregistered_calls_,
    static_cast<size_t>(reinterpret_cast<char*>(&skip_service_control_) -
    reinterpret_cast<char*>(&allow_unregistered_calls_)) + sizeof(skip_service_control_));
  // @@protoc_insertion_point(copy_constructor:google.api.UsageRule)
}

void UsageRule::SharedCtor() {
  selector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&allow_unregistered_calls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_service_control_) -
      reinterpret_cast<char*>(&allow_unregistered_calls_)) + sizeof(skip_service_control_));
}

UsageRule::~UsageRule() {
  // @@protoc_insertion_point(destructor:google.api.UsageRule)
  SharedDtor();
}

void UsageRule::SharedDtor() {
  selector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UsageRule::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UsageRule::descriptor() {
  ::protobuf_google_2fapi_2fusage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fusage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UsageRule& UsageRule::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_google_2fapi_2fusage_2eproto::scc_info_UsageRule.base);
  return *internal_default_instance();
}


void UsageRule::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.UsageRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  selector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&allow_unregistered_calls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skip_service_control_) -
      reinterpret_cast<char*>(&allow_unregistered_calls_)) + sizeof(skip_service_control_));
  _internal_metadata_.Clear();
}

bool UsageRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.api.UsageRule)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string selector = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selector()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->selector().data(), static_cast<int>(this->selector().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "google.api.UsageRule.selector"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_unregistered_calls = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_unregistered_calls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool skip_service_control = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &skip_service_control_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.api.UsageRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.api.UsageRule)
  return false;
#undef DO_
}

void UsageRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.api.UsageRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.UsageRule.selector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->selector(), output);
  }

  // bool allow_unregistered_calls = 2;
  if (this->allow_unregistered_calls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->allow_unregistered_calls(), output);
  }

  // bool skip_service_control = 3;
  if (this->skip_service_control() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->skip_service_control(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.api.UsageRule)
}

::google::protobuf::uint8* UsageRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.api.UsageRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string selector = 1;
  if (this->selector().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->selector().data(), static_cast<int>(this->selector().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "google.api.UsageRule.selector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->selector(), target);
  }

  // bool allow_unregistered_calls = 2;
  if (this->allow_unregistered_calls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->allow_unregistered_calls(), target);
  }

  // bool skip_service_control = 3;
  if (this->skip_service_control() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->skip_service_control(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.UsageRule)
  return target;
}

size_t UsageRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.UsageRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string selector = 1;
  if (this->selector().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->selector());
  }

  // bool allow_unregistered_calls = 2;
  if (this->allow_unregistered_calls() != 0) {
    total_size += 1 + 1;
  }

  // bool skip_service_control = 3;
  if (this->skip_service_control() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UsageRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.UsageRule)
  GOOGLE_DCHECK_NE(&from, this);
  const UsageRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UsageRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.UsageRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.UsageRule)
    MergeFrom(*source);
  }
}

void UsageRule::MergeFrom(const UsageRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.UsageRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selector().size() > 0) {

    selector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.selector_);
  }
  if (from.allow_unregistered_calls() != 0) {
    set_allow_unregistered_calls(from.allow_unregistered_calls());
  }
  if (from.skip_service_control() != 0) {
    set_skip_service_control(from.skip_service_control());
  }
}

void UsageRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.UsageRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UsageRule::CopyFrom(const UsageRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.UsageRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UsageRule::IsInitialized() const {
  return true;
}

void UsageRule::Swap(UsageRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UsageRule::InternalSwap(UsageRule* other) {
  using std::swap;
  selector_.Swap(&other->selector_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(allow_unregistered_calls_, other->allow_unregistered_calls_);
  swap(skip_service_control_, other->skip_service_control_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UsageRule::GetMetadata() const {
  protobuf_google_2fapi_2fusage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fapi_2fusage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace google
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::Usage* Arena::CreateMaybeMessage< ::google::api::Usage >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::Usage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::google::api::UsageRule* Arena::CreateMaybeMessage< ::google::api::UsageRule >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::UsageRule >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
