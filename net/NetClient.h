/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_TARAXA_NET_NETCLIENT_H_
#define JSONRPC_CPP_STUB_TARAXA_NET_NETCLIENT_H_

#include <jsonrpccpp/client.h>

namespace taraxa {
    namespace net {
        class NetClient : public jsonrpc::Client
        {
            public:
                NetClient(jsonrpc::IClientConnector &conn, jsonrpc::clientVersion_t type = jsonrpc::JSONRPC_CLIENT_V2) : jsonrpc::Client(conn, type) {}

                std::string net_version() throw (jsonrpc::JsonRpcException)
                {
                    Json::Value p;
                    p = Json::nullValue;
                    Json::Value result = this->CallMethod("net_version",p);
                    if (result.isString())
                        return result.asString();
                    else
                        throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
                }
                std::string net_peerCount() throw (jsonrpc::JsonRpcException)
                {
                    Json::Value p;
                    p = Json::nullValue;
                    Json::Value result = this->CallMethod("net_peerCount",p);
                    if (result.isString())
                        return result.asString();
                    else
                        throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
                }
                bool net_listening() throw (jsonrpc::JsonRpcException)
                {
                    Json::Value p;
                    p = Json::nullValue;
                    Json::Value result = this->CallMethod("net_listening",p);
                    if (result.isBool())
                        return result.asBool();
                    else
                        throw jsonrpc::JsonRpcException(jsonrpc::Errors::ERROR_CLIENT_INVALID_RESPONSE, result.toStyledString());
                }
        };

    }
}
#endif //JSONRPC_CPP_STUB_TARAXA_NET_NETCLIENT_H_
