{{- $self := . -}}
{{- $release_name := .Release.Name -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "taraxa-node.fullname" . }}-helm-scripts"
data:
  {{- range $path, $bytes := .Files.Glob "helmtests/*" }}
  {{ base $path }}: |-
{{ tpl ($self.Files.Get $path) $self | indent 4 }}
  {{- end }}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ include "taraxa-node.fullname" . }}-helm-imports"
data:
  {{- range $path, $bytes := .Files.Glob "helmtests/imports/*" }}
  {{ base $path }}: |-
{{ tpl ($self.Files.Get $path) $self | indent 4 }}
  {{- end }}


{{- range $path, $bytes := .Files.Glob "helmtests/*.py" }}

---
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "taraxa-node.fullname" $ }}-helm-{{ base $path | replace "." "-" }}"
  labels:
    app: "helm-{{ base $path }}"
    app.kubernetes.io/name: {{ include "taraxa-node.name" $ }}
    helm.sh/chart: {{ include "taraxa-node.chart" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    "helm.sh/hook": test-success
spec:
  serviceAccountName: "{{ include "taraxa-node.fullname" $ }}-python-tester"
  containers:
  - image: "{{ $.Values.test.image.repository }}:{{ $.Values.test.image.tag }}"
    imagePullPolicy: {{ $.Values.test.image.pullPolicy }}
    command:
    - bash
    - -c
    - |-
      apt update && apt install -y dnsutils screen alpine-pico
      pip install -r /tests/requirements.txt
      python3 /tests/{{ base $path }} {{ $.Values.node.replicaCount }} $NAMESPACE
    stdin: true
    tty: true
    env:
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    - name: REPLICAS
      value: "{{ $.Values.node.replicaCount }}"
    - name: TEMPLATE_NODE_NAME
      value: "{{ include "taraxa-node.fullname" $ }}-{}.taraxa-node.{{ $.Release.Namespace }}"
    - name: TEMPLATE_BOOT_NODE_NAME
      value: "{{ $.Release.Name }}-boot-node-0.boot-node.{{ $.Release.Namespace }}"
    - name: RELEASE
      value: "{{ $.Release.Name }}"
    name: "{{ include "taraxa-node.fullname" $ }}-helm-{{ base $path | replace "." "-" }}"
    volumeMounts:
    - name: tests
      mountPath: /tests
    - name: imports
      mountPath: /imports
  restartPolicy: Never
  volumes:
  - name: tests
    configMap:
      name: "{{ include "taraxa-node.fullname" $ }}-helm-scripts"
  - name: imports
    configMap:
      name: "{{ include "taraxa-node.fullname" $ }}-helm-imports"
  {{- with $.Values.nodeSelector }}
  nodeSelector:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
