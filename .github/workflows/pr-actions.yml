name: prnet-actions
on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/deploy'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check.outputs.triggered == 'true'
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
        if: steps.check.outputs.triggered == 'true'
      - run: |
            curl -u ${{ secrets.CIRCLE_TOKEN }}: -X  POST \
               -H 'Content-Type: application/json' \
               -H 'Accept: application/json' \
               -d "{\"branch\":\"${{ steps.pr_data.outputs.branch }}\", \
                    \"parameters\": { \
                       \"deploy_prnet\": true , \
                       \"pr_number\": \"${{ github.event.issue.number }}\"
                       } \
                   }" \
               https://circleci.com/api/v2/project/gh/agrebin/taraxa-node/pipeline
        if: steps.check.outputs.triggered == 'true'

  redeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/redeploy'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check.outputs.triggered == 'true'
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
        if: steps.check.outputs.triggered == 'true'
      - run: |
            curl -u ${{ secrets.CIRCLE_TOKEN }}: -X  POST \
               -H 'Content-Type: application/json' \
               -H 'Accept: application/json' \
               -d "{\"branch\":\"${{steps.pr_data.outputs.branch}}\", \
                    \"parameters\": { \
                       \"redeploy_prnet\": true , \
                       \"pr_number\": \"${{ github.event.issue.number }}\"
                       } \
                   }" \
               https://circleci.com/api/v2/project/gh/agrebin/taraxa-node/pipeline
        if: steps.check.outputs.triggered == 'true'

  cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/cleanup'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check.outputs.triggered == 'true'
      - name: Get PR informations
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
        if: steps.check.outputs.triggered == 'true'
      - run: |
            curl -u ${{ secrets.CIRCLE_TOKEN }}: -X  POST \
               -H 'Content-Type: application/json' \
               -H 'Accept: application/json' \
               -d "{\"branch\":\"${{ steps.pr_data.outputs.branch }}\", \
                    \"parameters\": { \
                       \"cleanup_prnet\": true , \
                       \"pr_number\": \"${{ github.event.issue.number }}\"
                       } \
                   }" \
               https://circleci.com/api/v2/project/gh/agrebin/taraxa-node/pipeline
        if: steps.check.outputs.triggered == 'true'
