name: prnet-actions 
on:
  pull_request:
    types: [opened,reopened]
  issue_comment:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-16.04
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/deploy'
      - uses: actions/checkout@v1
        if: steps.check.outputs.triggered == 'true'
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check.outputs.triggered == 'true'
      - uses: ./.github/actions/prnet
        id: trigger
        with:
          action: 'deploy_prnet'
          circleci_slug: 'gh/Taraxa-project/taraxa-node'
          circle_token: '${{ secrets.CIRCLE_TOKEN }}'
          pull_request: '${{ steps.request.outputs.data }}'
        if: steps.check.outputs.triggered == 'true'
  redeploy:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/redeploy'
      - uses: actions/checkout@v1
        if: steps.check.outputs.triggered == 'true'
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check.outputs.triggered == 'true'
      - uses: ./.github/actions/prnet
        id: trigger
        with:
          action: 'redeploy_prnet'
          circleci_slug: 'gh/Taraxa-project/taraxa-node'
          circle_token: '${{ secrets.CIRCLE_TOKEN }}'
          pull_request: '${{ steps.request.outputs.data }}'
        if: steps.check.outputs.triggered == 'true'
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - uses: khan/pull-request-comment-trigger@master
        id: check
        with:
          trigger: '/cleanup'
      - uses: actions/checkout@v1
        if: steps.check.outputs.triggered == 'true'
      - name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.0.0
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: steps.check.outputs.triggered == 'true'
      - uses: ./.github/actions/prnet
        id: trigger
        with:
          action: 'cleanup_prnet'
          circleci_slug: 'gh/Taraxa-project/taraxa-node'
          circle_token: '${{ secrets.CIRCLE_TOKEN }}'
          pull_request: '${{ steps.request.outputs.data }}'
        if: steps.check.outputs.triggered == 'true'
