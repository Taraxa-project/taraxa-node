#include <gtest/gtest.h>
#include "dag.hpp"
#include "types.hpp"
namespace taraxa{
TEST(Dag, build_graph){  
	taraxa::Dag graph;

	// a genesis vertex
	EXPECT_EQ(1, graph.getNumVertices()); 
	
	auto v0= graph.addVertex(("1000000000000000000000000000000000000000000000000000000000000000"));
	auto v1= graph.addVertex(("1111111111111111111111111111111111111111111111111111111111111111"));
	auto v2= graph.addVertex(("2222222222222222222222222222222222222222222222222222222222222222"));
	auto v3= graph.addVertex(("3333333333333333333333333333333333333333333333333333333333333333"));
	
	EXPECT_EQ(5, graph.getNumVertices());
	EXPECT_EQ(true, graph.hasVertex("1000000000000000000000000000000000000000000000000000000000000000"));
	EXPECT_EQ(false, graph.hasVertex("1200000000000000000000000000000000000000000000000000000000000000"));
	
	auto genesis = graph.getGenesis();
	graph.addEdge(genesis, v0);
	graph.addEdge(v0, v1);
	graph.addEdge(v0, v2);
	graph.addEdge(v2, v3);
	
	EXPECT_EQ(4, graph.getNumEdges());
}

TEST(Dag, traversal){
	taraxa::Dag graph;
	auto v0 = graph.addVertex(("1000000000000000000000000000000000000000000000000000000000000000"));
	auto v1 = graph.addVertex(("1111111111111111111111111111111111111111111111111111111111111111"));
	auto v2 = graph.addVertex(("2222222222222222222222222222222222222222222222222222222222222222"));
	auto v3 = graph.addVertex(("3333333333333333333333333333333333333333333333333333333333333333"));
	// unconnected vertex
	auto v4 = graph.addVertex(("9999999999999999999999999999999999999999999999999999999999999999")); 
	EXPECT_EQ(6, graph.getNumVertices());
	auto genesis = graph.getGenesis();
	graph.addEdge(genesis, v0);
	graph.addEdge(v0, v1);
	graph.addEdge(v0, v2);
	graph.addEdge(v2, v3);
	EXPECT_EQ(4, graph.getNumEdges());

	std::vector<taraxa::Dag::vertex_t> leaves, critical;
	graph.collectLeafVertices(leaves);
	EXPECT_EQ(3, leaves.size());
	graph.collectCriticalPath(critical);
	EXPECT_EQ(3, critical.size());
}

TEST(DagManager, receive_block_in_order){
	DagManager mgr(1);
	// mgr.setVerbose(true);
	StateBlock blk1 (
	("0000000000000000000000000000000000000000000000000000000000000000"),
	{}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000001"));

	StateBlock blk2 (
	("0000000000000000000000000000000000000000000000000000000000000001"),
	{}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000002"));
	
	StateBlock blk3 (
	("0000000000000000000000000000000000000000000000000000000000000000"),
	{"0000000000000000000000000000000000000000000000000000000000000001",
	 "0000000000000000000000000000000000000000000000000000000000000002"
	}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000003"));

	mgr.addStateBlock(blk1, true);
	mgr.addStateBlock(blk2, true);
	mgr.addStateBlock(blk2, true);
	EXPECT_EQ(mgr.getNumVerticesInDag(),3);
	EXPECT_EQ(mgr.getNumEdgesInDag(),2);

	mgr.addStateBlock(blk3, true);
	mgr.addStateBlock(blk3, true);
	taraxa::thisThreadSleepForMilliSeconds(500);
	mgr.stop();
	EXPECT_EQ(mgr.getNumVerticesInDag(),4);
	EXPECT_EQ(mgr.getNumEdgesInDag(),5);
	EXPECT_EQ(mgr.getBufferSize(), 0);

}


TEST(DagManager, receive_block_out_of_order){
	DagManager mgr(1);
	// mgr.setVerbose(true);
	StateBlock blk1 (
	("0000000000000000000000000000000000000000000000000000000000000000"),
	{}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000001"));

	StateBlock blk2 (
	("0000000000000000000000000000000000000000000000000000000000000001"),
	{}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000002"));
	
	StateBlock blk3 (
	("0000000000000000000000000000000000000000000000000000000000000000"),
	{"0000000000000000000000000000000000000000000000000000000000000001",
	 "0000000000000000000000000000000000000000000000000000000000000002"
	}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000003"));

	mgr.addStateBlock(blk3, true);
	mgr.addStateBlock(blk2, true);
	mgr.addStateBlock(blk1, true);

	taraxa::thisThreadSleepForMicroSeconds(50000);
	mgr.stop();
	EXPECT_EQ(mgr.getNumVerticesInDag(),4);
	EXPECT_EQ(mgr.getNumEdgesInDag(),5);
	EXPECT_EQ(mgr.getBufferSize(), 0);

}

TEST(DagManager, receive_block_out_of_order_multi_thread){
	DagManager mgr(2);
	// mgr.setVerbose(true);
	StateBlock blk1 (
	("0000000000000000000000000000000000000000000000000000000000000000"),
	{}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000001"));

	StateBlock blk2 (
	("0000000000000000000000000000000000000000000000000000000000000001"),
	{}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000002"));
	
	StateBlock blk3 (
	("0000000000000000000000000000000000000000000000000000000000000000"),
	{"0000000000000000000000000000000000000000000000000000000000000001",
	 "0000000000000000000000000000000000000000000000000000000000000002"
	}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000003"));

	StateBlock blk4 (
	("0000000000000000000000000000000000000000000000000000000000000002"),
	{"0000000000000000000000000000000000000000000000000000000000000003",
	}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000004"));
	
	StateBlock blk5 (
	("0000000000000000000000000000000000000000000000000000000000000004"),
	{"0000000000000000000000000000000000000000000000000000000000000003",
	}, 
	{},
	("77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"),
	("0000000000000000000000000000000000000000000000000000000000000005"));
	
	mgr.addStateBlock(blk5, true);
	mgr.addStateBlock(blk4, true);
	mgr.addStateBlock(blk3, true);
	mgr.addStateBlock(blk2, true);
	mgr.addStateBlock(blk1, true);
	

	taraxa::thisThreadSleepForMicroSeconds(500);
	mgr.stop();
	EXPECT_EQ(mgr.getNumVerticesInDag(),6);
	EXPECT_EQ(mgr.getNumEdgesInDag(),9);
	EXPECT_EQ(mgr.getBufferSize(), 0);

}

}  //namespace taraxa

int main(int argc, char** argv){
	::testing::InitGoogleTest(&argc, argv);
	return RUN_ALL_TESTS();
}