// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/taraxa_grpc.proto

#ifndef PROTOBUF_INCLUDED_proto_2ftaraxa_5fgrpc_2eproto
#define PROTOBUF_INCLUDED_proto_2ftaraxa_5fgrpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_proto_2ftaraxa_5fgrpc_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2ftaraxa_5fgrpc_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_proto_2ftaraxa_5fgrpc_2eproto();
namespace taraxa_grpc {
class GetProtoTransactionRequest;
class GetProtoTransactionRequestDefaultTypeInternal;
extern GetProtoTransactionRequestDefaultTypeInternal _GetProtoTransactionRequest_default_instance_;
class ProtoTransaction;
class ProtoTransactionDefaultTypeInternal;
extern ProtoTransactionDefaultTypeInternal _ProtoTransaction_default_instance_;
class SendProtoTransactionResponse;
class SendProtoTransactionResponseDefaultTypeInternal;
extern SendProtoTransactionResponseDefaultTypeInternal _SendProtoTransactionResponse_default_instance_;
}  // namespace taraxa_grpc
namespace google {
namespace protobuf {
template<> ::taraxa_grpc::GetProtoTransactionRequest* Arena::CreateMaybeMessage<::taraxa_grpc::GetProtoTransactionRequest>(Arena*);
template<> ::taraxa_grpc::ProtoTransaction* Arena::CreateMaybeMessage<::taraxa_grpc::ProtoTransaction>(Arena*);
template<> ::taraxa_grpc::SendProtoTransactionResponse* Arena::CreateMaybeMessage<::taraxa_grpc::SendProtoTransactionResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace taraxa_grpc {

// ===================================================================

class ProtoTransaction :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_grpc.ProtoTransaction) */ {
 public:
  ProtoTransaction();
  virtual ~ProtoTransaction();

  ProtoTransaction(const ProtoTransaction& from);

  inline ProtoTransaction& operator=(const ProtoTransaction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoTransaction(ProtoTransaction&& from) noexcept
    : ProtoTransaction() {
    *this = ::std::move(from);
  }

  inline ProtoTransaction& operator=(ProtoTransaction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ProtoTransaction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoTransaction* internal_default_instance() {
    return reinterpret_cast<const ProtoTransaction*>(
               &_ProtoTransaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ProtoTransaction* other);
  friend void swap(ProtoTransaction& a, ProtoTransaction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoTransaction* New() const final {
    return CreateMaybeMessage<ProtoTransaction>(nullptr);
  }

  ProtoTransaction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtoTransaction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtoTransaction& from);
  void MergeFrom(const ProtoTransaction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // string nonce = 3;
  void clear_nonce();
  static const int kNonceFieldNumber = 3;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const char* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // string value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // string gas_price = 5;
  void clear_gas_price();
  static const int kGasPriceFieldNumber = 5;
  const ::std::string& gas_price() const;
  void set_gas_price(const ::std::string& value);
  #if LANG_CXX11
  void set_gas_price(::std::string&& value);
  #endif
  void set_gas_price(const char* value);
  void set_gas_price(const char* value, size_t size);
  ::std::string* mutable_gas_price();
  ::std::string* release_gas_price();
  void set_allocated_gas_price(::std::string* gas_price);

  // string gas = 6;
  void clear_gas();
  static const int kGasFieldNumber = 6;
  const ::std::string& gas() const;
  void set_gas(const ::std::string& value);
  #if LANG_CXX11
  void set_gas(::std::string&& value);
  #endif
  void set_gas(const char* value);
  void set_gas(const char* value, size_t size);
  ::std::string* mutable_gas();
  ::std::string* release_gas();
  void set_allocated_gas(::std::string* gas);

  // string receiver = 7;
  void clear_receiver();
  static const int kReceiverFieldNumber = 7;
  const ::std::string& receiver() const;
  void set_receiver(const ::std::string& value);
  #if LANG_CXX11
  void set_receiver(::std::string&& value);
  #endif
  void set_receiver(const char* value);
  void set_receiver(const char* value, size_t size);
  ::std::string* mutable_receiver();
  ::std::string* release_receiver();
  void set_allocated_receiver(::std::string* receiver);

  // string sig = 8;
  void clear_sig();
  static const int kSigFieldNumber = 8;
  const ::std::string& sig() const;
  void set_sig(const ::std::string& value);
  #if LANG_CXX11
  void set_sig(::std::string&& value);
  #endif
  void set_sig(const char* value);
  void set_sig(const char* value, size_t size);
  ::std::string* mutable_sig();
  ::std::string* release_sig();
  void set_allocated_sig(::std::string* sig);

  // bytes data = 9;
  void clear_data();
  static const int kDataFieldNumber = 9;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:taraxa_grpc.ProtoTransaction)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr gas_price_;
  ::google::protobuf::internal::ArenaStringPtr gas_;
  ::google::protobuf::internal::ArenaStringPtr receiver_;
  ::google::protobuf::internal::ArenaStringPtr sig_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftaraxa_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class SendProtoTransactionResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_grpc.SendProtoTransactionResponse) */ {
 public:
  SendProtoTransactionResponse();
  virtual ~SendProtoTransactionResponse();

  SendProtoTransactionResponse(const SendProtoTransactionResponse& from);

  inline SendProtoTransactionResponse& operator=(const SendProtoTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendProtoTransactionResponse(SendProtoTransactionResponse&& from) noexcept
    : SendProtoTransactionResponse() {
    *this = ::std::move(from);
  }

  inline SendProtoTransactionResponse& operator=(SendProtoTransactionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SendProtoTransactionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendProtoTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const SendProtoTransactionResponse*>(
               &_SendProtoTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SendProtoTransactionResponse* other);
  friend void swap(SendProtoTransactionResponse& a, SendProtoTransactionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendProtoTransactionResponse* New() const final {
    return CreateMaybeMessage<SendProtoTransactionResponse>(nullptr);
  }

  SendProtoTransactionResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SendProtoTransactionResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SendProtoTransactionResponse& from);
  void MergeFrom(const SendProtoTransactionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendProtoTransactionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:taraxa_grpc.SendProtoTransactionResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftaraxa_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class GetProtoTransactionRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:taraxa_grpc.GetProtoTransactionRequest) */ {
 public:
  GetProtoTransactionRequest();
  virtual ~GetProtoTransactionRequest();

  GetProtoTransactionRequest(const GetProtoTransactionRequest& from);

  inline GetProtoTransactionRequest& operator=(const GetProtoTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetProtoTransactionRequest(GetProtoTransactionRequest&& from) noexcept
    : GetProtoTransactionRequest() {
    *this = ::std::move(from);
  }

  inline GetProtoTransactionRequest& operator=(GetProtoTransactionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GetProtoTransactionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetProtoTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const GetProtoTransactionRequest*>(
               &_GetProtoTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetProtoTransactionRequest* other);
  friend void swap(GetProtoTransactionRequest& a, GetProtoTransactionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetProtoTransactionRequest* New() const final {
    return CreateMaybeMessage<GetProtoTransactionRequest>(nullptr);
  }

  GetProtoTransactionRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetProtoTransactionRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetProtoTransactionRequest& from);
  void MergeFrom(const GetProtoTransactionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetProtoTransactionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:taraxa_grpc.GetProtoTransactionRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_proto_2ftaraxa_5fgrpc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoTransaction

// string hash = 1;
inline void ProtoTransaction::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::hash() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.hash)
  return hash_.GetNoArena();
}
inline void ProtoTransaction::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.hash)
}
#if LANG_CXX11
inline void ProtoTransaction::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.hash)
}
#endif
inline void ProtoTransaction::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.hash)
}
inline void ProtoTransaction::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.hash)
}
inline ::std::string* ProtoTransaction::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_hash() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_hash(::std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.hash)
}

// uint32 type = 2;
inline void ProtoTransaction::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ProtoTransaction::type() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.type)
  return type_;
}
inline void ProtoTransaction::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.type)
}

// string nonce = 3;
inline void ProtoTransaction::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::nonce() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.nonce)
  return nonce_.GetNoArena();
}
inline void ProtoTransaction::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.nonce)
}
#if LANG_CXX11
inline void ProtoTransaction::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.nonce)
}
#endif
inline void ProtoTransaction::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.nonce)
}
inline void ProtoTransaction::set_nonce(const char* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.nonce)
}
inline ::std::string* ProtoTransaction::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_nonce() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_nonce(::std::string* nonce) {
  if (nonce != nullptr) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.nonce)
}

// string value = 4;
inline void ProtoTransaction::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::value() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.value)
  return value_.GetNoArena();
}
inline void ProtoTransaction::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.value)
}
#if LANG_CXX11
inline void ProtoTransaction::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.value)
}
#endif
inline void ProtoTransaction::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.value)
}
inline void ProtoTransaction::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.value)
}
inline ::std::string* ProtoTransaction::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_value() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_value(::std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.value)
}

// string gas_price = 5;
inline void ProtoTransaction::clear_gas_price() {
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::gas_price() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.gas_price)
  return gas_price_.GetNoArena();
}
inline void ProtoTransaction::set_gas_price(const ::std::string& value) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.gas_price)
}
#if LANG_CXX11
inline void ProtoTransaction::set_gas_price(::std::string&& value) {
  
  gas_price_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.gas_price)
}
#endif
inline void ProtoTransaction::set_gas_price(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.gas_price)
}
inline void ProtoTransaction::set_gas_price(const char* value, size_t size) {
  
  gas_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.gas_price)
}
inline ::std::string* ProtoTransaction::mutable_gas_price() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.gas_price)
  return gas_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_gas_price() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.gas_price)
  
  return gas_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_gas_price(::std::string* gas_price) {
  if (gas_price != nullptr) {
    
  } else {
    
  }
  gas_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas_price);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.gas_price)
}

// string gas = 6;
inline void ProtoTransaction::clear_gas() {
  gas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::gas() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.gas)
  return gas_.GetNoArena();
}
inline void ProtoTransaction::set_gas(const ::std::string& value) {
  
  gas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.gas)
}
#if LANG_CXX11
inline void ProtoTransaction::set_gas(::std::string&& value) {
  
  gas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.gas)
}
#endif
inline void ProtoTransaction::set_gas(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  gas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.gas)
}
inline void ProtoTransaction::set_gas(const char* value, size_t size) {
  
  gas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.gas)
}
inline ::std::string* ProtoTransaction::mutable_gas() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.gas)
  return gas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_gas() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.gas)
  
  return gas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_gas(::std::string* gas) {
  if (gas != nullptr) {
    
  } else {
    
  }
  gas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gas);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.gas)
}

// string receiver = 7;
inline void ProtoTransaction::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::receiver() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.receiver)
  return receiver_.GetNoArena();
}
inline void ProtoTransaction::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.receiver)
}
#if LANG_CXX11
inline void ProtoTransaction::set_receiver(::std::string&& value) {
  
  receiver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.receiver)
}
#endif
inline void ProtoTransaction::set_receiver(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.receiver)
}
inline void ProtoTransaction::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.receiver)
}
inline ::std::string* ProtoTransaction::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_receiver() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.receiver)
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_receiver(::std::string* receiver) {
  if (receiver != nullptr) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.receiver)
}

// string sig = 8;
inline void ProtoTransaction::clear_sig() {
  sig_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::sig() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.sig)
  return sig_.GetNoArena();
}
inline void ProtoTransaction::set_sig(const ::std::string& value) {
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.sig)
}
#if LANG_CXX11
inline void ProtoTransaction::set_sig(::std::string&& value) {
  
  sig_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.sig)
}
#endif
inline void ProtoTransaction::set_sig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.sig)
}
inline void ProtoTransaction::set_sig(const char* value, size_t size) {
  
  sig_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.sig)
}
inline ::std::string* ProtoTransaction::mutable_sig() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.sig)
  return sig_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_sig() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.sig)
  
  return sig_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_sig(::std::string* sig) {
  if (sig != nullptr) {
    
  } else {
    
  }
  sig_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sig);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.sig)
}

// bytes data = 9;
inline void ProtoTransaction::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoTransaction::data() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.ProtoTransaction.data)
  return data_.GetNoArena();
}
inline void ProtoTransaction::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.ProtoTransaction.data)
}
#if LANG_CXX11
inline void ProtoTransaction::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.ProtoTransaction.data)
}
#endif
inline void ProtoTransaction::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.ProtoTransaction.data)
}
inline void ProtoTransaction::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.ProtoTransaction.data)
}
inline ::std::string* ProtoTransaction::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.ProtoTransaction.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoTransaction::release_data() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.ProtoTransaction.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoTransaction::set_allocated_data(::std::string* data) {
  if (data != nullptr) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.ProtoTransaction.data)
}

// -------------------------------------------------------------------

// SendProtoTransactionResponse

// bool success = 1;
inline void SendProtoTransactionResponse::clear_success() {
  success_ = false;
}
inline bool SendProtoTransactionResponse::success() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.SendProtoTransactionResponse.success)
  return success_;
}
inline void SendProtoTransactionResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:taraxa_grpc.SendProtoTransactionResponse.success)
}

// -------------------------------------------------------------------

// GetProtoTransactionRequest

// string hash = 1;
inline void GetProtoTransactionRequest::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetProtoTransactionRequest::hash() const {
  // @@protoc_insertion_point(field_get:taraxa_grpc.GetProtoTransactionRequest.hash)
  return hash_.GetNoArena();
}
inline void GetProtoTransactionRequest::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:taraxa_grpc.GetProtoTransactionRequest.hash)
}
#if LANG_CXX11
inline void GetProtoTransactionRequest::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:taraxa_grpc.GetProtoTransactionRequest.hash)
}
#endif
inline void GetProtoTransactionRequest::set_hash(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:taraxa_grpc.GetProtoTransactionRequest.hash)
}
inline void GetProtoTransactionRequest::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:taraxa_grpc.GetProtoTransactionRequest.hash)
}
inline ::std::string* GetProtoTransactionRequest::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:taraxa_grpc.GetProtoTransactionRequest.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProtoTransactionRequest::release_hash() {
  // @@protoc_insertion_point(field_release:taraxa_grpc.GetProtoTransactionRequest.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProtoTransactionRequest::set_allocated_hash(::std::string* hash) {
  if (hash != nullptr) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:taraxa_grpc.GetProtoTransactionRequest.hash)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace taraxa_grpc

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_proto_2ftaraxa_5fgrpc_2eproto
